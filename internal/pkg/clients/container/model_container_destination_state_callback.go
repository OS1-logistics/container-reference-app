/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package container_client

import (
	"encoding/json"
)

// ContainerDestinationStateCallback struct for ContainerDestinationStateCallback
type ContainerDestinationStateCallback struct {
	Callback *ContainerDestinationStateCallbackCallback `json:"callback,omitempty"`
}

// NewContainerDestinationStateCallback instantiates a new ContainerDestinationStateCallback object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerDestinationStateCallback() *ContainerDestinationStateCallback {
	this := ContainerDestinationStateCallback{}
	return &this
}

// NewContainerDestinationStateCallbackWithDefaults instantiates a new ContainerDestinationStateCallback object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerDestinationStateCallbackWithDefaults() *ContainerDestinationStateCallback {
	this := ContainerDestinationStateCallback{}
	return &this
}

// GetCallback returns the Callback field value if set, zero value otherwise.
func (o *ContainerDestinationStateCallback) GetCallback() ContainerDestinationStateCallbackCallback {
	if o == nil || o.Callback == nil {
		var ret ContainerDestinationStateCallbackCallback
		return ret
	}
	return *o.Callback
}

// GetCallbackOk returns a tuple with the Callback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerDestinationStateCallback) GetCallbackOk() (*ContainerDestinationStateCallbackCallback, bool) {
	if o == nil || o.Callback == nil {
		return nil, false
	}
	return o.Callback, true
}

// HasCallback returns a boolean if a field has been set.
func (o *ContainerDestinationStateCallback) HasCallback() bool {
	if o != nil && o.Callback != nil {
		return true
	}

	return false
}

// SetCallback gets a reference to the given ContainerDestinationStateCallbackCallback and assigns it to the Callback field.
func (o *ContainerDestinationStateCallback) SetCallback(v ContainerDestinationStateCallbackCallback) {
	o.Callback = &v
}

func (o ContainerDestinationStateCallback) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Callback != nil {
		toSerialize["callback"] = o.Callback
	}
	return json.Marshal(toSerialize)
}

type NullableContainerDestinationStateCallback struct {
	value *ContainerDestinationStateCallback
	isSet bool
}

func (v NullableContainerDestinationStateCallback) Get() *ContainerDestinationStateCallback {
	return v.value
}

func (v *NullableContainerDestinationStateCallback) Set(val *ContainerDestinationStateCallback) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerDestinationStateCallback) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerDestinationStateCallback) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerDestinationStateCallback(val *ContainerDestinationStateCallback) *NullableContainerDestinationStateCallback {
	return &NullableContainerDestinationStateCallback{value: val, isSet: true}
}

func (v NullableContainerDestinationStateCallback) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerDestinationStateCallback) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



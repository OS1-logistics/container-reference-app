/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package container_client

import (
	"encoding/json"
)

// ContainerDestinationStateCallbackCallback struct for ContainerDestinationStateCallbackCallback
type ContainerDestinationStateCallbackCallback struct {
	Url *string `json:"url,omitempty"`
	Meta *ContainerDestinationStateCallbackCallbackMeta `json:"meta,omitempty"`
}

// NewContainerDestinationStateCallbackCallback instantiates a new ContainerDestinationStateCallbackCallback object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerDestinationStateCallbackCallback() *ContainerDestinationStateCallbackCallback {
	this := ContainerDestinationStateCallbackCallback{}
	return &this
}

// NewContainerDestinationStateCallbackCallbackWithDefaults instantiates a new ContainerDestinationStateCallbackCallback object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerDestinationStateCallbackCallbackWithDefaults() *ContainerDestinationStateCallbackCallback {
	this := ContainerDestinationStateCallbackCallback{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ContainerDestinationStateCallbackCallback) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerDestinationStateCallbackCallback) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ContainerDestinationStateCallbackCallback) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ContainerDestinationStateCallbackCallback) SetUrl(v string) {
	o.Url = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ContainerDestinationStateCallbackCallback) GetMeta() ContainerDestinationStateCallbackCallbackMeta {
	if o == nil || o.Meta == nil {
		var ret ContainerDestinationStateCallbackCallbackMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerDestinationStateCallbackCallback) GetMetaOk() (*ContainerDestinationStateCallbackCallbackMeta, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ContainerDestinationStateCallbackCallback) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ContainerDestinationStateCallbackCallbackMeta and assigns it to the Meta field.
func (o *ContainerDestinationStateCallbackCallback) SetMeta(v ContainerDestinationStateCallbackCallbackMeta) {
	o.Meta = &v
}

func (o ContainerDestinationStateCallbackCallback) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	return json.Marshal(toSerialize)
}

type NullableContainerDestinationStateCallbackCallback struct {
	value *ContainerDestinationStateCallbackCallback
	isSet bool
}

func (v NullableContainerDestinationStateCallbackCallback) Get() *ContainerDestinationStateCallbackCallback {
	return v.value
}

func (v *NullableContainerDestinationStateCallbackCallback) Set(val *ContainerDestinationStateCallbackCallback) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerDestinationStateCallbackCallback) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerDestinationStateCallbackCallback) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerDestinationStateCallbackCallback(val *ContainerDestinationStateCallbackCallback) *NullableContainerDestinationStateCallbackCallback {
	return &NullableContainerDestinationStateCallbackCallback{value: val, isSet: true}
}

func (v NullableContainerDestinationStateCallbackCallback) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerDestinationStateCallbackCallback) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



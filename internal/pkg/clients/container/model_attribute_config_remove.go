/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package container_client

import (
	"encoding/json"
)

// AttributeConfigRemove struct for AttributeConfigRemove
type AttributeConfigRemove struct {
	Remove []string `json:"remove,omitempty"`
}

// NewAttributeConfigRemove instantiates a new AttributeConfigRemove object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributeConfigRemove() *AttributeConfigRemove {
	this := AttributeConfigRemove{}
	return &this
}

// NewAttributeConfigRemoveWithDefaults instantiates a new AttributeConfigRemove object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributeConfigRemoveWithDefaults() *AttributeConfigRemove {
	this := AttributeConfigRemove{}
	return &this
}

// GetRemove returns the Remove field value if set, zero value otherwise.
func (o *AttributeConfigRemove) GetRemove() []string {
	if o == nil || o.Remove == nil {
		var ret []string
		return ret
	}
	return o.Remove
}

// GetRemoveOk returns a tuple with the Remove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeConfigRemove) GetRemoveOk() ([]string, bool) {
	if o == nil || o.Remove == nil {
		return nil, false
	}
	return o.Remove, true
}

// HasRemove returns a boolean if a field has been set.
func (o *AttributeConfigRemove) HasRemove() bool {
	if o != nil && o.Remove != nil {
		return true
	}

	return false
}

// SetRemove gets a reference to the given []string and assigns it to the Remove field.
func (o *AttributeConfigRemove) SetRemove(v []string) {
	o.Remove = v
}

func (o AttributeConfigRemove) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Remove != nil {
		toSerialize["remove"] = o.Remove
	}
	return json.Marshal(toSerialize)
}

type NullableAttributeConfigRemove struct {
	value *AttributeConfigRemove
	isSet bool
}

func (v NullableAttributeConfigRemove) Get() *AttributeConfigRemove {
	return v.value
}

func (v *NullableAttributeConfigRemove) Set(val *AttributeConfigRemove) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributeConfigRemove) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributeConfigRemove) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributeConfigRemove(val *AttributeConfigRemove) *NullableAttributeConfigRemove {
	return &NullableAttributeConfigRemove{value: val, isSet: true}
}

func (v NullableAttributeConfigRemove) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributeConfigRemove) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



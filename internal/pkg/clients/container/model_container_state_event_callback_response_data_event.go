/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package container_client

import (
	"encoding/json"
)

// ContainerStateEventCallbackResponseDataEvent struct for ContainerStateEventCallbackResponseDataEvent
type ContainerStateEventCallbackResponseDataEvent struct {
	// Represents name of the event for state transition
	Name string `json:"name"`
	// Represents the timestamp of the event occured.
	Timestamp *int32 `json:"timestamp,omitempty"`
	// propagate flag indicate whether these events need to propogate on child containers or not.
	Propagate *bool `json:"propagate,omitempty"`
	// Represents event data values, if any, for this event
	Data map[string]interface{} `json:"data,omitempty"`
	Source *EventSource `json:"source,omitempty"`
}

// NewContainerStateEventCallbackResponseDataEvent instantiates a new ContainerStateEventCallbackResponseDataEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerStateEventCallbackResponseDataEvent(name string) *ContainerStateEventCallbackResponseDataEvent {
	this := ContainerStateEventCallbackResponseDataEvent{}
	this.Name = name
	var propagate bool = false
	this.Propagate = &propagate
	return &this
}

// NewContainerStateEventCallbackResponseDataEventWithDefaults instantiates a new ContainerStateEventCallbackResponseDataEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerStateEventCallbackResponseDataEventWithDefaults() *ContainerStateEventCallbackResponseDataEvent {
	this := ContainerStateEventCallbackResponseDataEvent{}
	var propagate bool = false
	this.Propagate = &propagate
	return &this
}

// GetName returns the Name field value
func (o *ContainerStateEventCallbackResponseDataEvent) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ContainerStateEventCallbackResponseDataEvent) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ContainerStateEventCallbackResponseDataEvent) SetName(v string) {
	o.Name = v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ContainerStateEventCallbackResponseDataEvent) GetTimestamp() int32 {
	if o == nil || o.Timestamp == nil {
		var ret int32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerStateEventCallbackResponseDataEvent) GetTimestampOk() (*int32, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ContainerStateEventCallbackResponseDataEvent) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int32 and assigns it to the Timestamp field.
func (o *ContainerStateEventCallbackResponseDataEvent) SetTimestamp(v int32) {
	o.Timestamp = &v
}

// GetPropagate returns the Propagate field value if set, zero value otherwise.
func (o *ContainerStateEventCallbackResponseDataEvent) GetPropagate() bool {
	if o == nil || o.Propagate == nil {
		var ret bool
		return ret
	}
	return *o.Propagate
}

// GetPropagateOk returns a tuple with the Propagate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerStateEventCallbackResponseDataEvent) GetPropagateOk() (*bool, bool) {
	if o == nil || o.Propagate == nil {
		return nil, false
	}
	return o.Propagate, true
}

// HasPropagate returns a boolean if a field has been set.
func (o *ContainerStateEventCallbackResponseDataEvent) HasPropagate() bool {
	if o != nil && o.Propagate != nil {
		return true
	}

	return false
}

// SetPropagate gets a reference to the given bool and assigns it to the Propagate field.
func (o *ContainerStateEventCallbackResponseDataEvent) SetPropagate(v bool) {
	o.Propagate = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ContainerStateEventCallbackResponseDataEvent) GetData() map[string]interface{} {
	if o == nil || o.Data == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerStateEventCallbackResponseDataEvent) GetDataOk() (map[string]interface{}, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ContainerStateEventCallbackResponseDataEvent) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *ContainerStateEventCallbackResponseDataEvent) SetData(v map[string]interface{}) {
	o.Data = v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *ContainerStateEventCallbackResponseDataEvent) GetSource() EventSource {
	if o == nil || o.Source == nil {
		var ret EventSource
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerStateEventCallbackResponseDataEvent) GetSourceOk() (*EventSource, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *ContainerStateEventCallbackResponseDataEvent) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given EventSource and assigns it to the Source field.
func (o *ContainerStateEventCallbackResponseDataEvent) SetSource(v EventSource) {
	o.Source = &v
}

func (o ContainerStateEventCallbackResponseDataEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.Propagate != nil {
		toSerialize["propagate"] = o.Propagate
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	return json.Marshal(toSerialize)
}

type NullableContainerStateEventCallbackResponseDataEvent struct {
	value *ContainerStateEventCallbackResponseDataEvent
	isSet bool
}

func (v NullableContainerStateEventCallbackResponseDataEvent) Get() *ContainerStateEventCallbackResponseDataEvent {
	return v.value
}

func (v *NullableContainerStateEventCallbackResponseDataEvent) Set(val *ContainerStateEventCallbackResponseDataEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerStateEventCallbackResponseDataEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerStateEventCallbackResponseDataEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerStateEventCallbackResponseDataEvent(val *ContainerStateEventCallbackResponseDataEvent) *NullableContainerStateEventCallbackResponseDataEvent {
	return &NullableContainerStateEventCallbackResponseDataEvent{value: val, isSet: true}
}

func (v NullableContainerStateEventCallbackResponseDataEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerStateEventCallbackResponseDataEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



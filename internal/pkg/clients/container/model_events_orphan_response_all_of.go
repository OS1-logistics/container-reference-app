/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package container_client

import (
	"encoding/json"
)

// EventsOrphanResponseAllOf struct for EventsOrphanResponseAllOf
type EventsOrphanResponseAllOf struct {
	Data []EventOrphanResponse `json:"data,omitempty"`
}

// NewEventsOrphanResponseAllOf instantiates a new EventsOrphanResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventsOrphanResponseAllOf() *EventsOrphanResponseAllOf {
	this := EventsOrphanResponseAllOf{}
	return &this
}

// NewEventsOrphanResponseAllOfWithDefaults instantiates a new EventsOrphanResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventsOrphanResponseAllOfWithDefaults() *EventsOrphanResponseAllOf {
	this := EventsOrphanResponseAllOf{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *EventsOrphanResponseAllOf) GetData() []EventOrphanResponse {
	if o == nil || o.Data == nil {
		var ret []EventOrphanResponse
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventsOrphanResponseAllOf) GetDataOk() ([]EventOrphanResponse, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *EventsOrphanResponseAllOf) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []EventOrphanResponse and assigns it to the Data field.
func (o *EventsOrphanResponseAllOf) SetData(v []EventOrphanResponse) {
	o.Data = v
}

func (o EventsOrphanResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableEventsOrphanResponseAllOf struct {
	value *EventsOrphanResponseAllOf
	isSet bool
}

func (v NullableEventsOrphanResponseAllOf) Get() *EventsOrphanResponseAllOf {
	return v.value
}

func (v *NullableEventsOrphanResponseAllOf) Set(val *EventsOrphanResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableEventsOrphanResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableEventsOrphanResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventsOrphanResponseAllOf(val *EventsOrphanResponseAllOf) *NullableEventsOrphanResponseAllOf {
	return &NullableEventsOrphanResponseAllOf{value: val, isSet: true}
}

func (v NullableEventsOrphanResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventsOrphanResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



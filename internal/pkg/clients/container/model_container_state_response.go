/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package container_client

import (
	"encoding/json"
)

// ContainerStateResponse struct for ContainerStateResponse
type ContainerStateResponse struct {
	Data *ContainerState `json:"data,omitempty"`
	Request *Request `json:"request,omitempty"`
}

// NewContainerStateResponse instantiates a new ContainerStateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerStateResponse() *ContainerStateResponse {
	this := ContainerStateResponse{}
	return &this
}

// NewContainerStateResponseWithDefaults instantiates a new ContainerStateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerStateResponseWithDefaults() *ContainerStateResponse {
	this := ContainerStateResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ContainerStateResponse) GetData() ContainerState {
	if o == nil || o.Data == nil {
		var ret ContainerState
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerStateResponse) GetDataOk() (*ContainerState, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ContainerStateResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given ContainerState and assigns it to the Data field.
func (o *ContainerStateResponse) SetData(v ContainerState) {
	o.Data = &v
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *ContainerStateResponse) GetRequest() Request {
	if o == nil || o.Request == nil {
		var ret Request
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerStateResponse) GetRequestOk() (*Request, bool) {
	if o == nil || o.Request == nil {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *ContainerStateResponse) HasRequest() bool {
	if o != nil && o.Request != nil {
		return true
	}

	return false
}

// SetRequest gets a reference to the given Request and assigns it to the Request field.
func (o *ContainerStateResponse) SetRequest(v Request) {
	o.Request = &v
}

func (o ContainerStateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Request != nil {
		toSerialize["request"] = o.Request
	}
	return json.Marshal(toSerialize)
}

type NullableContainerStateResponse struct {
	value *ContainerStateResponse
	isSet bool
}

func (v NullableContainerStateResponse) Get() *ContainerStateResponse {
	return v.value
}

func (v *NullableContainerStateResponse) Set(val *ContainerStateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerStateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerStateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerStateResponse(val *ContainerStateResponse) *NullableContainerStateResponse {
	return &NullableContainerStateResponse{value: val, isSet: true}
}

func (v NullableContainerStateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerStateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



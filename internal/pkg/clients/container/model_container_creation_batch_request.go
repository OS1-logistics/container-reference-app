/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package container_client

import (
	"encoding/json"
)

// ContainerCreationBatchRequest Object containing payload and call back url for container creation request
type ContainerCreationBatchRequest struct {
	// Array of container creation request
	Payload []ContainerCreateBatchRequest `json:"payload,omitempty"`
	Callback *BatchCallbackURL `json:"callback,omitempty"`
}

// NewContainerCreationBatchRequest instantiates a new ContainerCreationBatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerCreationBatchRequest() *ContainerCreationBatchRequest {
	this := ContainerCreationBatchRequest{}
	return &this
}

// NewContainerCreationBatchRequestWithDefaults instantiates a new ContainerCreationBatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerCreationBatchRequestWithDefaults() *ContainerCreationBatchRequest {
	this := ContainerCreationBatchRequest{}
	return &this
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *ContainerCreationBatchRequest) GetPayload() []ContainerCreateBatchRequest {
	if o == nil || o.Payload == nil {
		var ret []ContainerCreateBatchRequest
		return ret
	}
	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerCreationBatchRequest) GetPayloadOk() ([]ContainerCreateBatchRequest, bool) {
	if o == nil || o.Payload == nil {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *ContainerCreationBatchRequest) HasPayload() bool {
	if o != nil && o.Payload != nil {
		return true
	}

	return false
}

// SetPayload gets a reference to the given []ContainerCreateBatchRequest and assigns it to the Payload field.
func (o *ContainerCreationBatchRequest) SetPayload(v []ContainerCreateBatchRequest) {
	o.Payload = v
}

// GetCallback returns the Callback field value if set, zero value otherwise.
func (o *ContainerCreationBatchRequest) GetCallback() BatchCallbackURL {
	if o == nil || o.Callback == nil {
		var ret BatchCallbackURL
		return ret
	}
	return *o.Callback
}

// GetCallbackOk returns a tuple with the Callback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerCreationBatchRequest) GetCallbackOk() (*BatchCallbackURL, bool) {
	if o == nil || o.Callback == nil {
		return nil, false
	}
	return o.Callback, true
}

// HasCallback returns a boolean if a field has been set.
func (o *ContainerCreationBatchRequest) HasCallback() bool {
	if o != nil && o.Callback != nil {
		return true
	}

	return false
}

// SetCallback gets a reference to the given BatchCallbackURL and assigns it to the Callback field.
func (o *ContainerCreationBatchRequest) SetCallback(v BatchCallbackURL) {
	o.Callback = &v
}

func (o ContainerCreationBatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Payload != nil {
		toSerialize["payload"] = o.Payload
	}
	if o.Callback != nil {
		toSerialize["callback"] = o.Callback
	}
	return json.Marshal(toSerialize)
}

type NullableContainerCreationBatchRequest struct {
	value *ContainerCreationBatchRequest
	isSet bool
}

func (v NullableContainerCreationBatchRequest) Get() *ContainerCreationBatchRequest {
	return v.value
}

func (v *NullableContainerCreationBatchRequest) Set(val *ContainerCreationBatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerCreationBatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerCreationBatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerCreationBatchRequest(val *ContainerCreationBatchRequest) *NullableContainerCreationBatchRequest {
	return &NullableContainerCreationBatchRequest{value: val, isSet: true}
}

func (v NullableContainerCreationBatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerCreationBatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package container_client

import (
	"encoding/json"
)

// ContainerCDCAllOf struct for ContainerCDCAllOf
type ContainerCDCAllOf struct {
	Event Event `json:"event"`
}

// NewContainerCDCAllOf instantiates a new ContainerCDCAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerCDCAllOf(event Event) *ContainerCDCAllOf {
	this := ContainerCDCAllOf{}
	this.Event = event
	return &this
}

// NewContainerCDCAllOfWithDefaults instantiates a new ContainerCDCAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerCDCAllOfWithDefaults() *ContainerCDCAllOf {
	this := ContainerCDCAllOf{}
	return &this
}

// GetEvent returns the Event field value
func (o *ContainerCDCAllOf) GetEvent() Event {
	if o == nil {
		var ret Event
		return ret
	}

	return o.Event
}

// GetEventOk returns a tuple with the Event field value
// and a boolean to check if the value has been set.
func (o *ContainerCDCAllOf) GetEventOk() (*Event, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Event, true
}

// SetEvent sets field value
func (o *ContainerCDCAllOf) SetEvent(v Event) {
	o.Event = v
}

func (o ContainerCDCAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["event"] = o.Event
	}
	return json.Marshal(toSerialize)
}

type NullableContainerCDCAllOf struct {
	value *ContainerCDCAllOf
	isSet bool
}

func (v NullableContainerCDCAllOf) Get() *ContainerCDCAllOf {
	return v.value
}

func (v *NullableContainerCDCAllOf) Set(val *ContainerCDCAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerCDCAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerCDCAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerCDCAllOf(val *ContainerCDCAllOf) *NullableContainerCDCAllOf {
	return &NullableContainerCDCAllOf{value: val, isSet: true}
}

func (v NullableContainerCDCAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerCDCAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



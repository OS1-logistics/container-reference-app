/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package container_client

import (
	"encoding/json"
)

// ContainerDestinationState struct for ContainerDestinationState
type ContainerDestinationState struct {
	// Represents the main state to which we want to override the instance.
	State string `json:"state"`
	// Substate is optional, if not specified then will be populated by default substate of that main state.
	SubState *string `json:"subState,omitempty"`
}

// NewContainerDestinationState instantiates a new ContainerDestinationState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerDestinationState(state string) *ContainerDestinationState {
	this := ContainerDestinationState{}
	this.State = state
	return &this
}

// NewContainerDestinationStateWithDefaults instantiates a new ContainerDestinationState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerDestinationStateWithDefaults() *ContainerDestinationState {
	this := ContainerDestinationState{}
	return &this
}

// GetState returns the State field value
func (o *ContainerDestinationState) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *ContainerDestinationState) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *ContainerDestinationState) SetState(v string) {
	o.State = v
}

// GetSubState returns the SubState field value if set, zero value otherwise.
func (o *ContainerDestinationState) GetSubState() string {
	if o == nil || o.SubState == nil {
		var ret string
		return ret
	}
	return *o.SubState
}

// GetSubStateOk returns a tuple with the SubState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerDestinationState) GetSubStateOk() (*string, bool) {
	if o == nil || o.SubState == nil {
		return nil, false
	}
	return o.SubState, true
}

// HasSubState returns a boolean if a field has been set.
func (o *ContainerDestinationState) HasSubState() bool {
	if o != nil && o.SubState != nil {
		return true
	}

	return false
}

// SetSubState gets a reference to the given string and assigns it to the SubState field.
func (o *ContainerDestinationState) SetSubState(v string) {
	o.SubState = &v
}

func (o ContainerDestinationState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["state"] = o.State
	}
	if o.SubState != nil {
		toSerialize["subState"] = o.SubState
	}
	return json.Marshal(toSerialize)
}

type NullableContainerDestinationState struct {
	value *ContainerDestinationState
	isSet bool
}

func (v NullableContainerDestinationState) Get() *ContainerDestinationState {
	return v.value
}

func (v *NullableContainerDestinationState) Set(val *ContainerDestinationState) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerDestinationState) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerDestinationState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerDestinationState(val *ContainerDestinationState) *NullableContainerDestinationState {
	return &NullableContainerDestinationState{value: val, isSet: true}
}

func (v NullableContainerDestinationState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerDestinationState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package container_client

import (
	"encoding/json"
)

// ActionBy struct for ActionBy
type ActionBy struct {
	// Unique ID.
	Id string `json:"id"`
	Name *string `json:"name,omitempty"`
	// App ID.
	AppID *string `json:"appID,omitempty"`
}

// NewActionBy instantiates a new ActionBy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionBy(id string) *ActionBy {
	this := ActionBy{}
	this.Id = id
	return &this
}

// NewActionByWithDefaults instantiates a new ActionBy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionByWithDefaults() *ActionBy {
	this := ActionBy{}
	return &this
}

// GetId returns the Id field value
func (o *ActionBy) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ActionBy) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ActionBy) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ActionBy) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionBy) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ActionBy) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ActionBy) SetName(v string) {
	o.Name = &v
}

// GetAppID returns the AppID field value if set, zero value otherwise.
func (o *ActionBy) GetAppID() string {
	if o == nil || o.AppID == nil {
		var ret string
		return ret
	}
	return *o.AppID
}

// GetAppIDOk returns a tuple with the AppID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionBy) GetAppIDOk() (*string, bool) {
	if o == nil || o.AppID == nil {
		return nil, false
	}
	return o.AppID, true
}

// HasAppID returns a boolean if a field has been set.
func (o *ActionBy) HasAppID() bool {
	if o != nil && o.AppID != nil {
		return true
	}

	return false
}

// SetAppID gets a reference to the given string and assigns it to the AppID field.
func (o *ActionBy) SetAppID(v string) {
	o.AppID = &v
}

func (o ActionBy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.AppID != nil {
		toSerialize["appID"] = o.AppID
	}
	return json.Marshal(toSerialize)
}

type NullableActionBy struct {
	value *ActionBy
	isSet bool
}

func (v NullableActionBy) Get() *ActionBy {
	return v.value
}

func (v *NullableActionBy) Set(val *ActionBy) {
	v.value = val
	v.isSet = true
}

func (v NullableActionBy) IsSet() bool {
	return v.isSet
}

func (v *NullableActionBy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionBy(val *ActionBy) *NullableActionBy {
	return &NullableActionBy{value: val, isSet: true}
}

func (v NullableActionBy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionBy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package container_client

import (
	"encoding/json"
)

// AttributesConfigUpdateRequest struct for AttributesConfigUpdateRequest
type AttributesConfigUpdateRequest struct {
	Callback *map[string]interface{} `json:"callback,omitempty"`
	Attributes []AttributeConfig `json:"attributes"`
}

// NewAttributesConfigUpdateRequest instantiates a new AttributesConfigUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributesConfigUpdateRequest(attributes []AttributeConfig) *AttributesConfigUpdateRequest {
	this := AttributesConfigUpdateRequest{}
	this.Attributes = attributes
	return &this
}

// NewAttributesConfigUpdateRequestWithDefaults instantiates a new AttributesConfigUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributesConfigUpdateRequestWithDefaults() *AttributesConfigUpdateRequest {
	this := AttributesConfigUpdateRequest{}
	return &this
}

// GetCallback returns the Callback field value if set, zero value otherwise.
func (o *AttributesConfigUpdateRequest) GetCallback() map[string]interface{} {
	if o == nil || o.Callback == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Callback
}

// GetCallbackOk returns a tuple with the Callback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributesConfigUpdateRequest) GetCallbackOk() (*map[string]interface{}, bool) {
	if o == nil || o.Callback == nil {
		return nil, false
	}
	return o.Callback, true
}

// HasCallback returns a boolean if a field has been set.
func (o *AttributesConfigUpdateRequest) HasCallback() bool {
	if o != nil && o.Callback != nil {
		return true
	}

	return false
}

// SetCallback gets a reference to the given map[string]interface{} and assigns it to the Callback field.
func (o *AttributesConfigUpdateRequest) SetCallback(v map[string]interface{}) {
	o.Callback = &v
}

// GetAttributes returns the Attributes field value
func (o *AttributesConfigUpdateRequest) GetAttributes() []AttributeConfig {
	if o == nil {
		var ret []AttributeConfig
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *AttributesConfigUpdateRequest) GetAttributesOk() ([]AttributeConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.Attributes, true
}

// SetAttributes sets field value
func (o *AttributesConfigUpdateRequest) SetAttributes(v []AttributeConfig) {
	o.Attributes = v
}

func (o AttributesConfigUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Callback != nil {
		toSerialize["callback"] = o.Callback
	}
	if true {
		toSerialize["attributes"] = o.Attributes
	}
	return json.Marshal(toSerialize)
}

type NullableAttributesConfigUpdateRequest struct {
	value *AttributesConfigUpdateRequest
	isSet bool
}

func (v NullableAttributesConfigUpdateRequest) Get() *AttributesConfigUpdateRequest {
	return v.value
}

func (v *NullableAttributesConfigUpdateRequest) Set(val *AttributesConfigUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributesConfigUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributesConfigUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributesConfigUpdateRequest(val *AttributesConfigUpdateRequest) *NullableAttributesConfigUpdateRequest {
	return &NullableAttributesConfigUpdateRequest{value: val, isSet: true}
}

func (v NullableAttributesConfigUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributesConfigUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



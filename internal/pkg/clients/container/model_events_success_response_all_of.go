/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package container_client

import (
	"encoding/json"
)

// EventsSuccessResponseAllOf struct for EventsSuccessResponseAllOf
type EventsSuccessResponseAllOf struct {
	Data *EventsResponse `json:"data,omitempty"`
}

// NewEventsSuccessResponseAllOf instantiates a new EventsSuccessResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventsSuccessResponseAllOf() *EventsSuccessResponseAllOf {
	this := EventsSuccessResponseAllOf{}
	return &this
}

// NewEventsSuccessResponseAllOfWithDefaults instantiates a new EventsSuccessResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventsSuccessResponseAllOfWithDefaults() *EventsSuccessResponseAllOf {
	this := EventsSuccessResponseAllOf{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *EventsSuccessResponseAllOf) GetData() EventsResponse {
	if o == nil || o.Data == nil {
		var ret EventsResponse
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventsSuccessResponseAllOf) GetDataOk() (*EventsResponse, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *EventsSuccessResponseAllOf) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given EventsResponse and assigns it to the Data field.
func (o *EventsSuccessResponseAllOf) SetData(v EventsResponse) {
	o.Data = &v
}

func (o EventsSuccessResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableEventsSuccessResponseAllOf struct {
	value *EventsSuccessResponseAllOf
	isSet bool
}

func (v NullableEventsSuccessResponseAllOf) Get() *EventsSuccessResponseAllOf {
	return v.value
}

func (v *NullableEventsSuccessResponseAllOf) Set(val *EventsSuccessResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableEventsSuccessResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableEventsSuccessResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventsSuccessResponseAllOf(val *EventsSuccessResponseAllOf) *NullableEventsSuccessResponseAllOf {
	return &NullableEventsSuccessResponseAllOf{value: val, isSet: true}
}

func (v NullableEventsSuccessResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventsSuccessResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



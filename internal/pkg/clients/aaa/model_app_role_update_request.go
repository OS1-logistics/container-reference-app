/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaa_client

import (
	"encoding/json"
)

// AppRoleUpdateRequest struct for AppRoleUpdateRequest
type AppRoleUpdateRequest struct {
	// Boolean field to identify whether to assign or remove role. The same action(assign or remove) will be applicable on all the roles.
	Assign bool `json:"assign"`
	// List of roles to be added/removed from group.
	Roles []string `json:"roles"`
}

// NewAppRoleUpdateRequest instantiates a new AppRoleUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppRoleUpdateRequest(assign bool, roles []string) *AppRoleUpdateRequest {
	this := AppRoleUpdateRequest{}
	this.Assign = assign
	this.Roles = roles
	return &this
}

// NewAppRoleUpdateRequestWithDefaults instantiates a new AppRoleUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleUpdateRequestWithDefaults() *AppRoleUpdateRequest {
	this := AppRoleUpdateRequest{}
	return &this
}

// GetAssign returns the Assign field value
func (o *AppRoleUpdateRequest) GetAssign() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Assign
}

// GetAssignOk returns a tuple with the Assign field value
// and a boolean to check if the value has been set.
func (o *AppRoleUpdateRequest) GetAssignOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Assign, true
}

// SetAssign sets field value
func (o *AppRoleUpdateRequest) SetAssign(v bool) {
	o.Assign = v
}

// GetRoles returns the Roles field value
func (o *AppRoleUpdateRequest) GetRoles() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value
// and a boolean to check if the value has been set.
func (o *AppRoleUpdateRequest) GetRolesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Roles, true
}

// SetRoles sets field value
func (o *AppRoleUpdateRequest) SetRoles(v []string) {
	o.Roles = v
}

func (o AppRoleUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["assign"] = o.Assign
	}
	if true {
		toSerialize["roles"] = o.Roles
	}
	return json.Marshal(toSerialize)
}

type NullableAppRoleUpdateRequest struct {
	value *AppRoleUpdateRequest
	isSet bool
}

func (v NullableAppRoleUpdateRequest) Get() *AppRoleUpdateRequest {
	return v.value
}

func (v *NullableAppRoleUpdateRequest) Set(val *AppRoleUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAppRoleUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAppRoleUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppRoleUpdateRequest(val *AppRoleUpdateRequest) *NullableAppRoleUpdateRequest {
	return &NullableAppRoleUpdateRequest{value: val, isSet: true}
}

func (v NullableAppRoleUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppRoleUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



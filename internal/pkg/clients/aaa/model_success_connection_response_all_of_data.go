/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaa_client

import (
	"encoding/json"
)

// SuccessConnectionResponseAllOfData struct for SuccessConnectionResponseAllOfData
type SuccessConnectionResponseAllOfData struct {
	// Unique ID of connection.
	ConnectionId *string `json:"connectionId,omitempty"`
	// Name of connection.
	ConnectionName *string `json:"connectionName,omitempty"`
	// Type of the connection (Google, Github, etc.).
	ConnectionType *string `json:"connectionType,omitempty"`
}

// NewSuccessConnectionResponseAllOfData instantiates a new SuccessConnectionResponseAllOfData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuccessConnectionResponseAllOfData() *SuccessConnectionResponseAllOfData {
	this := SuccessConnectionResponseAllOfData{}
	return &this
}

// NewSuccessConnectionResponseAllOfDataWithDefaults instantiates a new SuccessConnectionResponseAllOfData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuccessConnectionResponseAllOfDataWithDefaults() *SuccessConnectionResponseAllOfData {
	this := SuccessConnectionResponseAllOfData{}
	return &this
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise.
func (o *SuccessConnectionResponseAllOfData) GetConnectionId() string {
	if o == nil || o.ConnectionId == nil {
		var ret string
		return ret
	}
	return *o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuccessConnectionResponseAllOfData) GetConnectionIdOk() (*string, bool) {
	if o == nil || o.ConnectionId == nil {
		return nil, false
	}
	return o.ConnectionId, true
}

// HasConnectionId returns a boolean if a field has been set.
func (o *SuccessConnectionResponseAllOfData) HasConnectionId() bool {
	if o != nil && o.ConnectionId != nil {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given string and assigns it to the ConnectionId field.
func (o *SuccessConnectionResponseAllOfData) SetConnectionId(v string) {
	o.ConnectionId = &v
}

// GetConnectionName returns the ConnectionName field value if set, zero value otherwise.
func (o *SuccessConnectionResponseAllOfData) GetConnectionName() string {
	if o == nil || o.ConnectionName == nil {
		var ret string
		return ret
	}
	return *o.ConnectionName
}

// GetConnectionNameOk returns a tuple with the ConnectionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuccessConnectionResponseAllOfData) GetConnectionNameOk() (*string, bool) {
	if o == nil || o.ConnectionName == nil {
		return nil, false
	}
	return o.ConnectionName, true
}

// HasConnectionName returns a boolean if a field has been set.
func (o *SuccessConnectionResponseAllOfData) HasConnectionName() bool {
	if o != nil && o.ConnectionName != nil {
		return true
	}

	return false
}

// SetConnectionName gets a reference to the given string and assigns it to the ConnectionName field.
func (o *SuccessConnectionResponseAllOfData) SetConnectionName(v string) {
	o.ConnectionName = &v
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise.
func (o *SuccessConnectionResponseAllOfData) GetConnectionType() string {
	if o == nil || o.ConnectionType == nil {
		var ret string
		return ret
	}
	return *o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuccessConnectionResponseAllOfData) GetConnectionTypeOk() (*string, bool) {
	if o == nil || o.ConnectionType == nil {
		return nil, false
	}
	return o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *SuccessConnectionResponseAllOfData) HasConnectionType() bool {
	if o != nil && o.ConnectionType != nil {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given string and assigns it to the ConnectionType field.
func (o *SuccessConnectionResponseAllOfData) SetConnectionType(v string) {
	o.ConnectionType = &v
}

func (o SuccessConnectionResponseAllOfData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConnectionId != nil {
		toSerialize["connectionId"] = o.ConnectionId
	}
	if o.ConnectionName != nil {
		toSerialize["connectionName"] = o.ConnectionName
	}
	if o.ConnectionType != nil {
		toSerialize["connectionType"] = o.ConnectionType
	}
	return json.Marshal(toSerialize)
}

type NullableSuccessConnectionResponseAllOfData struct {
	value *SuccessConnectionResponseAllOfData
	isSet bool
}

func (v NullableSuccessConnectionResponseAllOfData) Get() *SuccessConnectionResponseAllOfData {
	return v.value
}

func (v *NullableSuccessConnectionResponseAllOfData) Set(val *SuccessConnectionResponseAllOfData) {
	v.value = val
	v.isSet = true
}

func (v NullableSuccessConnectionResponseAllOfData) IsSet() bool {
	return v.isSet
}

func (v *NullableSuccessConnectionResponseAllOfData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuccessConnectionResponseAllOfData(val *SuccessConnectionResponseAllOfData) *NullableSuccessConnectionResponseAllOfData {
	return &NullableSuccessConnectionResponseAllOfData{value: val, isSet: true}
}

func (v NullableSuccessConnectionResponseAllOfData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuccessConnectionResponseAllOfData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



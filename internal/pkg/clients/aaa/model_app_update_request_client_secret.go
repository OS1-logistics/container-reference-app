/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaa_client

import (
	"encoding/json"
)

// AppUpdateRequestClientSecret `clientSecret` of the app.
type AppUpdateRequestClientSecret struct {
	Iv *string `json:"iv,omitempty"`
	EncryptedText *string `json:"encryptedText,omitempty"`
}

// NewAppUpdateRequestClientSecret instantiates a new AppUpdateRequestClientSecret object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppUpdateRequestClientSecret() *AppUpdateRequestClientSecret {
	this := AppUpdateRequestClientSecret{}
	return &this
}

// NewAppUpdateRequestClientSecretWithDefaults instantiates a new AppUpdateRequestClientSecret object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppUpdateRequestClientSecretWithDefaults() *AppUpdateRequestClientSecret {
	this := AppUpdateRequestClientSecret{}
	return &this
}

// GetIv returns the Iv field value if set, zero value otherwise.
func (o *AppUpdateRequestClientSecret) GetIv() string {
	if o == nil || o.Iv == nil {
		var ret string
		return ret
	}
	return *o.Iv
}

// GetIvOk returns a tuple with the Iv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppUpdateRequestClientSecret) GetIvOk() (*string, bool) {
	if o == nil || o.Iv == nil {
		return nil, false
	}
	return o.Iv, true
}

// HasIv returns a boolean if a field has been set.
func (o *AppUpdateRequestClientSecret) HasIv() bool {
	if o != nil && o.Iv != nil {
		return true
	}

	return false
}

// SetIv gets a reference to the given string and assigns it to the Iv field.
func (o *AppUpdateRequestClientSecret) SetIv(v string) {
	o.Iv = &v
}

// GetEncryptedText returns the EncryptedText field value if set, zero value otherwise.
func (o *AppUpdateRequestClientSecret) GetEncryptedText() string {
	if o == nil || o.EncryptedText == nil {
		var ret string
		return ret
	}
	return *o.EncryptedText
}

// GetEncryptedTextOk returns a tuple with the EncryptedText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppUpdateRequestClientSecret) GetEncryptedTextOk() (*string, bool) {
	if o == nil || o.EncryptedText == nil {
		return nil, false
	}
	return o.EncryptedText, true
}

// HasEncryptedText returns a boolean if a field has been set.
func (o *AppUpdateRequestClientSecret) HasEncryptedText() bool {
	if o != nil && o.EncryptedText != nil {
		return true
	}

	return false
}

// SetEncryptedText gets a reference to the given string and assigns it to the EncryptedText field.
func (o *AppUpdateRequestClientSecret) SetEncryptedText(v string) {
	o.EncryptedText = &v
}

func (o AppUpdateRequestClientSecret) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Iv != nil {
		toSerialize["iv"] = o.Iv
	}
	if o.EncryptedText != nil {
		toSerialize["encryptedText"] = o.EncryptedText
	}
	return json.Marshal(toSerialize)
}

type NullableAppUpdateRequestClientSecret struct {
	value *AppUpdateRequestClientSecret
	isSet bool
}

func (v NullableAppUpdateRequestClientSecret) Get() *AppUpdateRequestClientSecret {
	return v.value
}

func (v *NullableAppUpdateRequestClientSecret) Set(val *AppUpdateRequestClientSecret) {
	v.value = val
	v.isSet = true
}

func (v NullableAppUpdateRequestClientSecret) IsSet() bool {
	return v.isSet
}

func (v *NullableAppUpdateRequestClientSecret) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppUpdateRequestClientSecret(val *AppUpdateRequestClientSecret) *NullableAppUpdateRequestClientSecret {
	return &NullableAppUpdateRequestClientSecret{value: val, isSet: true}
}

func (v NullableAppUpdateRequestClientSecret) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppUpdateRequestClientSecret) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



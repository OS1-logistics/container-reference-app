openapi: 3.0.3
info:
  description: This swagger documentation provides all AAA API details. AAA service
    provides authentication and authorization capabilities for users.
  license:
    name: AAA
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: Authentication And Authorization (AAA) Service
  version: 1.0.0
servers:
- url: "https://{tenantSubdomain}.fxtrt.io/core/api/"
  variables:
    tenantSubdomain:
      default: delhivery.dev
      description: Subdomain assigned to the Tenant
paths:
  /v1/aaa/alias:
    get:
      description: "Get tenant Id mapped to current tenant hostname alias. e.g. Hostname\
        \ is delhivery.dev.fxtrt.io, Then this API will return tenantId mapped to\
        \ this hostname part i.e. delhivery"
      operationId: getTenantIdAlias
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessTenantIdResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get tenant Id mapped to current tenant hostname alias.
      tags:
      - GET tenant id
  /v1/aaa/apps:
    get:
      operationId: getApps
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessAppsResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get all app specific information.
      tags:
      - App Management
    post:
      description: Create an app. Secret is encrypted using aes-256-ctr algorithm.
      operationId: createApp
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AppCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessAppSecretCreateResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Create an app.
      tags:
      - App Management
  /v1/aaa/apps/{appId}:
    get:
      operationId: getApp
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessAppResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get app specific information.
      tags:
      - App Management
    put:
      operationId: updateApp
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AppUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessAppIdResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Update the app.
      tags:
      - App Management
  /v1/aaa/apps/{appId}/app-roles:
    get:
      description: Get all roles of apps.
      operationId: getAllAppRoles
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessAppRolesResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get all roles of the apps.
      tags:
      - App Management
    put:
      description: "Assign specified roles to apps types.In case of backend/internal\
        \ apps, client credentials grant can be used to generate token for these roles.\
        \ For web/mobile apps, token generated will intersection of user and app roles."
      operationId: assignRoleToTheApp
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AppRoleUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Assign specified roles to the apps..
      tags:
      - App Management
  /v1/aaa/apps/{appId}/rotate-secret:
    post:
      description: "Rotate the secret of internal/backend apps types so that client\
        \ credentials grant can be used to generate token for these roles using new\
        \ client secret. After rotating secret old secret becomes invalid, so apps/services\
        \ need to be restarted with new secret that are using that old secret.Secret\
        \ is encrypted using aes-256-ctr algorithm."
      operationId: rotateAppSecret
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessAppSecretCreateResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: "Rotate the secret of the app. Applicable for backend and internal\
        \ app. After rotating secret old secret becomes invalid, so apps/services\
        \ need to be restarted with new secret that are using that old secret.Secret\
        \ is encrypted using aes-256-ctr algorithm."
      tags:
      - App Management
  /v1/aaa/apps/{appId}/roles:
    get:
      description: This endpoint retrieves details of all created Roles.
      operationId: getAllRoles
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessRolesResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get all Roles
      tags:
      - Role Management
    post:
      description: This endpoint creates an App Role. Role is a generic representation
        of a set of permissions or resources of a specific app or service.
      operationId: createAppRole
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/RoleCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Create App Role
      tags:
      - Role Management
  /v1/aaa/apps/{appId}/roles/{roleId}:
    get:
      operationId: getRoleDetails
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: The App for which the permissions in the role belong.
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          description: The App for which the permissions in the role belong.
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessRoleResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get specific role information.
      tags:
      - Role Management
    put:
      description: This endpoint updates an existing Role.
      operationId: updateGlobalRole
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: The App for which the permissions in the role belong.
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          description: The App for which the permissions in the role belong.
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/RoleUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Update a Role
      tags:
      - Role Management
  /v1/aaa/users:
    get:
      description: This endpoint retrieves details of all the existing Users.
      operationId: getAllUsers
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessUsersResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get all Users
      tags:
      - User Management
    post:
      description: "This endpoint creates a new User. In case a user with the email/mobileNumber\
        \ already exists, it returns id of the user in additionalInfo section of error."
      operationId: createUser
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UserCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreateResponse'
          description: OK - The request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Create User
      tags:
      - User Management
  /v1/aaa/users/{userId}:
    get:
      description: This endpoint retrieves User information by User ID.
      operationId: getUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessUserResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get User
      tags:
      - User Management
    put:
      description: This endpoint updates a User.
      operationId: updateUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UserUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Update User
      tags:
      - User Management
  /v1/aaa/users/{userId}/roles:
    get:
      description: This endpoint retrieves Roles of a user by User ID.
      operationId: getUserRoles
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessUserRoleMappingResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get User Roles
      tags:
      - User Management
  /v1/aaa/users/{userId}/apps:
    get:
      description: This endpoint retrieves Apps assigned to a User by User ID.
      operationId: getUsersAssignedApps
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessUserAppMappingResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get Apps assigned to User
      tags:
      - User Management
  /v1/aaa/users/{userId}/deactivate:
    post:
      description: This endpoint is used to block or deactivate a User from a Tenant.
      operationId: deactivateUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Block a User
      tags:
      - User Management
  /v1/aaa/users/activate:
    post:
      description: This endpoint is used to unblock a blocked User from a Tenant.
        Email or primary mobile number needs to be provided for unblocking the User.
      operationId: activateUser
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UserEnableRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Unblock a blocked User
      tags:
      - User Management
  /v1/aaa/users/self:
    get:
      description: Get the user info from the access token specified.
      operationId: getUserInfo
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessUserInfoResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get the user info from access token
      tags:
      - User Management
  /v1/aaa/auth/request-otp:
    post:
      description: Use this endpoint to directly request otp so that user can use
        it to authenticate successfully using verify-otp endpoint.
      operationId: otpSendRequest
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/MobileAuthReqOtpRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessAuthenticationLoginResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Otp generate request to Grant Token using otp mode of authentication
      tags:
      - Authentication
  /v1/aaa/auth/verify-otp:
    post:
      description: Use this endpoint to directly to verify to otp and get userId in
        case of successful authentication
      operationId: otpVerification
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AuthReqOtpRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessVerifyOtpResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Otp verification to get the userId associated with that api.
      tags:
      - Authentication
  /v1/aaa/auth/client-credentials:
    post:
      description: This endpoint request an Access Token by using the Client's credentials
        (Client ID and Client Secret). This is the OAuth 2.0 grant that server processes
        use to access an API.
      operationId: authClientCredentials
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ClientCredentialsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessAuthorizationResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Client credentials grant token
      tags:
      - Authentication
  /v1/aaa/apps/{appId}/resources:
    get:
      description: API is used to fetch information about all resources
      operationId: getAllResources
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResourcesResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get all resource's information
      tags:
      - Resource Management
    post:
      description: API is used to create a resource for an app. Based on resource
        we can grant access to APIs
      operationId: createResource
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ResourceCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a resource
      tags:
      - Resource Management
  /v1/aaa/apps/{appId}/resources/{resourceId}:
    get:
      description: API is used to fetch information about a resource
      operationId: getResourceById
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - explode: false
        in: path
        name: resourceId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResourceResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get resource information
      tags:
      - Resource Management
    put:
      description: API is used to update a resource
      operationId: UpdateResource
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - explode: false
        in: path
        name: resourceId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ResourceUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Update resource information
      tags:
      - Resource Management
  /v1/aaa/apps/{appId}/permissions:
    get:
      description: API is used to fetch information about all permissions
      operationId: getPermissions
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessPermissionsResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get permission's information
      tags:
      - Permission Management
    post:
      description: API is used to create a permission
      operationId: createPermission
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/PermissionCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a permission
      tags:
      - Permission Management
  /v1/aaa/apps/{appId}/permissions/{permissionId}:
    get:
      description: API is used to fetch information about a permission
      operationId: getPermissionById
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - explode: false
        in: path
        name: permissionId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessPermissionResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get permission information
      tags:
      - Permission Management
    put:
      description: API is used to update a permission
      operationId: UpdatePermission
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - explode: false
        in: path
        name: permissionId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/PermissionUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Update permission information
      tags:
      - Permission Management
  /v1/aaa/connection:
    get:
      description: This endpoint retrieves all Connections for a Tenant.
      operationId: getAllConnections
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessConnectionResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get all Connections
      tags:
      - Connection Management
  /v1/aaa/connection/social:
    post:
      description: This endpoint creates a Social Connection
      operationId: createSocialConnection
      parameters:
      - explode: true
        in: query
        name: connectionType
        required: true
        schema:
          enum:
          - google-oauth2
          - github
          type: string
        style: form
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ConnectionCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a Social Connection
      tags:
      - Connection Management
  /v1/aaa/connection/social/{connectionId}:
    get:
      description: This endpoint retrieves a Social Connection.
      operationId: get social connection
      parameters:
      - explode: false
        in: path
        name: connectionId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - explode: true
        in: query
        name: connectionType
        required: true
        schema:
          enum:
          - google-oauth2
          - github
          type: string
        style: form
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessConnectionResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get Social Connection
      tags:
      - Connection Management
    put:
      description: This endpoint updates a Social Connection
      operationId: update social connection
      parameters:
      - explode: false
        in: path
        name: connectionId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - explode: true
        in: query
        name: connectionType
        required: true
        schema:
          enum:
          - google-oauth2
          - github
          type: string
        style: form
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ConnectionUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Update Social Connection
      tags:
      - Connection Management
  /v1/aaa/connection/saml:
    post:
      description: This endpoint creates a SAML Connection.
      operationId: createSamlConnection
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ConnectionSamlCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Create SAML Connection
      tags:
      - Connection Management
  /v1/aaa/connection/saml/{connectionId}:
    get:
      description: This endpoint retrieves a SAML Connection.
      operationId: get Saml Connection
      parameters:
      - explode: false
        in: path
        name: connectionId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessSamlConnectionResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get SAML Connection
      tags:
      - Connection Management
    put:
      description: This endpoint updates a SAML Connection.
      operationId: update Saml Connection
      parameters:
      - explode: false
        in: path
        name: connectionId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ConnectionSamlUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Update SAML Connection
      tags:
      - Connection Management
  /v1/aaa/connection/oidc/:
    post:
      description: This endpoint creates a new OIDC provider configuration.
      operationId: create OIDC connection
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/OIDCPostRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Create OIDC client
      tags:
      - Connection Management
  /v1/aaa/connection/oidc/{connectionId}:
    get:
      description: This endpoint retrieves OIDC connection details.
      operationId: get OIDC connection
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: connectionId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OIDCGetResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get OIDC connection
      tags:
      - Connection Management
    put:
      description: This API updates an OIDC provider configuration.
      operationId: putOIDCclient
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: connectionId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/OIDCUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Update OIDC client
      tags:
      - Connection Management
  /v1/aaa/groups:
    get:
      description: This API retrieves the details of all Groups of Users and Roles.
      operationId: getGroup
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessGroupsResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get all Group
      tags:
      - Group Management
    post:
      description: This endpoint creates a Group of Users and Roles.
      operationId: createGroup
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/GroupCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Create Group
      tags:
      - Group Management
  /v1/aaa/groups/{groupId}:
    get:
      description: This endpoint retrieves details of a Group of a Tenant by groupId.
      operationId: getAllGroups
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessGroupResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get Groups
      tags:
      - Group Management
    put:
      description: This endpoint updates a Group of Users and Roles.
      operationId: updateGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/GroupUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Update Group
      tags:
      - Group Management
  /v1/aaa/groups/{groupId}/users:
    put:
      description: "This endpoint updates the User mapping for a Group membership.\
        \ Default value: true. membership=true => Add specified Users to the Group;\
        \ membership=false => remove specified Users from Group."
      operationId: updateGroupUsersMapping
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/GroupUsersMappingUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Update roles mapping for a Group
      tags:
      - Group Management
  /v1/aaa/groups/{groupId}/roles:
    put:
      description: "This endpoint updates the Roles mapping for a Group membership.\
        \ Default value: true. membership=true => Add specified Roles to the Group;\
        \ membership=false => remove specified Roles from Group."
      operationId: updateGroupRolesMapping
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/GroupRolesMappingUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Update Roles mapping for a Group
      tags:
      - Group Management
  /v1/aaa/tenants:
    post:
      description: API is used to create a tenant
      operationId: createTenant
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/TenantCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a new tenant
      tags:
      - Tenant Management
  /v1/aaa/tenants/{tenantId}:
    get:
      description: API is used to get a tenant's details
      operationId: getTenant
      parameters:
      - explode: false
        in: path
        name: tenantId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get tenant details
      tags:
      - Tenant Management
    put:
      description: API is used to create a tenant
      operationId: updateTenant
      parameters:
      - explode: false
        in: path
        name: tenantId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/TenantUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Update a created tenant
      tags:
      - Tenant Management
  /v1/aaa/apps/upload:
    post:
      description: "API is used to upload yaml to create resource,permission,roles\
        \ and assign roles. Only appId and rolesRequired section can be added to yaml\
        \ if the app doesn't expose any protected endpoints, but requires access to\
        \ other apps for its working."
      operationId: automateCreation
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/FileUploadRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: "Automate creating resource,permission,roles"
      tags:
      - App Management
  /v1/aaa/apps/upload/{statusId}:
    get:
      description: API is used to get current status of uploaded yaml
      operationId: getUploadStatus
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os access token
        explode: false
        in: header
        name: X-COREOS-ACCESS
        required: true
        schema:
          type: string
        style: simple
      - description: Core-os authentication token.
        explode: false
        in: header
        name: X-COREOS-AUTH
        required: false
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: statusId
        required: true
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileStatusResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get status of yaml upload
      tags:
      - App Management
  /v1/aaa/sms/send:
    post:
      description: API is used to send the OTP to the recipient mobile number.
      operationId: sendOTP
      parameters:
      - description: Bearer authorization access token.
        example: Bearer JWT_TOKEN
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/SMSSendRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessStatusResponse'
          description: OK - The request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: SMS gateway for sending OTP to the recipient mobile number. Tenant
        name for sms gateway will be picked from hostname.
      tags:
      - SMS Gateway
  /v1/aaa/admin/apps:
    post:
      description: "Create an app. If response doesn't return secretId (There was\
        \ some issue in storing secret in SDS), then use '/rotate-secret' API to rotate\
        \ secret and get the secretId."
      operationId: createAppM
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: core-os hmac code
        explode: false
        in: header
        name: X-AUTH-KEY
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AppCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessAppSecretCreateResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Create an app.
      tags:
      - Admin Management
  /v1/aaa/admin/apps/upload:
    post:
      description: "API is used to upload yaml to create resource,permission,roles\
        \ and assign roles"
      operationId: automateCreationAdmin
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: core-os hmac code
        explode: false
        in: header
        name: X-AUTH-KEY
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/FileUploadRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: "Automate creating resource,permission,roles"
      tags:
      - Admin Management
  /v1/aaa/admin/apps/{appId}:
    put:
      operationId: updateAppAdmin
      parameters:
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: core-os hmac code
        explode: false
        in: header
        name: X-AUTH-KEY
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AppUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessAppIdResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Update the app.
      tags:
      - Admin Management
  /v1/aaa/admin/users/{userId}/apps:
    get:
      operationId: getUsersAssignedAppsAdmin
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Unique request ID
        explode: false
        in: header
        name: X-COREOS-REQUEST-ID
        required: true
        schema:
          type: string
        style: simple
      - description: User info
        explode: false
        in: header
        name: X-COREOS-USERINFO
        required: false
        schema:
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: header
        name: X-COREOS-TID
        required: true
        schema:
          type: string
        style: simple
      - description: core-os hmac code
        explode: false
        in: header
        name: X-AUTH-KEY
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessUserAppMappingResponse'
          description: OK - The request succeeded.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request - The server is unable to process the request due
            to something that is perceived to be a client error.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized -  The client's identity is unknown to the server.
            Verify that you are accessing the correct tenant and that your client
            ID and client secret are valid on that Tenant.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden - The client's identity is known to the server but
            it does not have access rights to the requested resource. Verify that
            you're using the correct client ID and client secret or grant the client
            the necessary roles to access the resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found - The server can not find the requested resource.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Server error - The server is not ready to handle the request.
            This could be due to maintenance downtime or system resource constraints.
          headers:
            X-COREOS-REQUEST-ID:
              description: Unique request ID that was passed as header parameter in
                the request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Get apps assigned to user with given userId.
      tags:
      - Admin Management
components:
  parameters:
    RequestId:
      description: Unique request ID
      explode: false
      in: header
      name: X-COREOS-REQUEST-ID
      required: true
      schema:
        type: string
      style: simple
    Url:
      description: Url
      explode: false
      in: header
      name: X-URL
      required: true
      schema:
        type: string
      style: simple
    HttpMethod:
      description: Http Method
      explode: false
      in: header
      name: X-HTTP-METHOD
      required: true
      schema:
        enum:
        - get
        - put
        - post
        - delete
        - patch
        type: string
      style: simple
    TenantId:
      description: Tenant ID
      explode: false
      in: header
      name: X-COREOS-TID
      required: true
      schema:
        type: string
      style: simple
    TenantIdOptional:
      description: Tenant ID
      explode: false
      in: header
      name: X-COREOS-TID
      required: false
      schema:
        type: string
      style: simple
    UserInfo:
      description: User info
      explode: false
      in: header
      name: X-COREOS-USERINFO
      required: false
      schema:
        type: string
      style: simple
    roleIdPathReq:
      description: The App for which the permissions in the role belong.
      explode: false
      in: path
      name: roleId
      required: true
      schema:
        description: The App for which the permissions in the role belong.
        pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
        type: string
      style: simple
    userIdPathReq:
      explode: false
      in: path
      name: userId
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    appIdPathParam:
      explode: false
      in: path
      name: appId
      required: true
      schema:
        pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
        type: string
      style: simple
    connectionIdPathReq:
      explode: false
      in: path
      name: connectionId
      required: true
      schema:
        pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
        type: string
      style: simple
    ClientId:
      description: Client ID of the oAuth Application.
      explode: false
      in: header
      name: X-COREOS-CLIENT-ID
      required: true
      schema:
        type: string
      style: simple
    ClientSecret:
      description: Client secret of the oAuth Application.
      explode: false
      in: header
      name: X-COREOS-CLIENT-SECRET
      required: true
      schema:
        type: string
      style: simple
    AccessToken:
      description: Core-os access token
      explode: false
      in: header
      name: X-COREOS-ACCESS
      required: true
      schema:
        type: string
      style: simple
    AuthenticationToken:
      description: Core-os authentication token.
      explode: false
      in: header
      name: X-COREOS-AUTH
      required: false
      schema:
        type: string
      style: simple
    AuthorizationHeader:
      description: Bearer authorization access token.
      example: Bearer JWT_TOKEN
      explode: false
      in: header
      name: Authorization
      required: true
      schema:
        type: string
      style: simple
    RefreshToken:
      description: Core-os refresh token.
      explode: false
      in: header
      name: X-COREOS-REFRESH
      required: true
      schema:
        type: string
      style: simple
    resourceIdPathReq:
      explode: false
      in: path
      name: resourceId
      required: true
      schema:
        pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
        type: string
      style: simple
    appIdPathReq:
      explode: false
      in: path
      name: appId
      required: true
      schema:
        pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
        type: string
      style: simple
    permissionIdPathReq:
      explode: false
      in: path
      name: permissionId
      required: true
      schema:
        pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
        type: string
      style: simple
    connectionTypePathReq:
      explode: true
      in: query
      name: connectionType
      required: true
      schema:
        enum:
        - google-oauth2
        - github
        type: string
      style: form
    connectionTypeOtpPathReq:
      explode: false
      in: path
      name: connectionType
      required: true
      schema:
        enum:
        - sms
        - email
        type: string
      style: simple
    groupIdPathReq:
      explode: false
      in: path
      name: groupId
      required: true
      schema:
        pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
        type: string
      style: simple
    tenantIdPathReq:
      explode: false
      in: path
      name: tenantId
      required: true
      schema:
        pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
        type: string
      style: simple
    statusId:
      explode: false
      in: path
      name: statusId
      required: true
      schema:
        type: string
      style: simple
    OrderBy:
      description: fetching data in ascending(asc) or descending(desc) order.
      explode: true
      in: query
      name: sortBy
      required: false
      schema:
        $ref: '#/components/schemas/OrderBy'
      style: form
    PageSize:
      description: Number of items to return. Value should be between 1 to 100.
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 50
        maximum: 100
        minimum: 1
        type: integer
      style: form
    PageOffset:
      description: Number of items to skip from start.
      explode: true
      in: query
      name: offset
      required: false
      schema:
        default: 0
        minimum: 0
        type: integer
      style: form
    StartDateTime:
      description: Start time of the change log in unix epoch format.
      explode: true
      in: query
      name: from
      required: false
      schema:
        $ref: '#/components/schemas/EpochTimestamp'
      style: form
    Duration:
      description: Number of days for which change log is to be returned.
      explode: true
      in: query
      name: timeDuration
      required: false
      schema:
        default: 1
        maximum: 31
        minimum: 1
        type: integer
      style: form
    SortKey:
      description: "key to be used for sort data, sorting allow only number and string\
        \ type of values."
      explode: true
      in: query
      name: sortKey
      required: false
      schema:
        maximum: 128
        minimum: 1
        type: string
      style: form
    SelectFields:
      description: |
        Specifies list of attributes to be included in response (id is always included in response). If not specified, all attributes are included in response.
      explode: true
      in: query
      name: select
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    Query:
      allowReserved: true
      description: "Query criteria. Refer following links for more details:<br/> -\
        \ [match](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query.html)<br/>\
        \ - [multi_match](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-multi-match-query.html)<br/>\
        \ - [term](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-term-query.html)<br/>\
        \ - [terms](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-terms-query.html)<br/>\
        \ - [range](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-range-query.html)<br/>\
        \ - [regexp](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-regexp-query.html)<br/>\
        \ - [exists](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-exists-query.html)<br/>\
        \ - [fuzzy](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-fuzzy-query.html)<br/>\
        \ - [prefix](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-prefix-query.html)<br/>\
        \ - [wildcard](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-wildcard-query.html)<br/>\
        \ - [match_phrase](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query-phrase.html)<br/>\
        \ - [match_phrase_prefix](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query-phrase-prefix.html)"
      explode: true
      in: query
      name: query
      required: false
      schema:
        $ref: '#/components/schemas/Query'
      style: form
    url:
      description: URL that needs to be verified for access.
      explode: true
      in: query
      name: url
      required: true
      schema:
        type: string
      style: form
    httpMethod:
      description: HTTP method of the URL for which the access will be evaluated.
      explode: true
      in: query
      name: httpMethod
      required: true
      schema:
        enum:
        - get
        - put
        - post
        - delete
        - patch
        type: string
      style: form
    HmacAccessToken:
      description: core-os hmac code
      explode: false
      in: header
      name: X-AUTH-KEY
      required: true
      schema:
        type: string
      style: simple
  requestBodies:
    AppCreateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppCreateRequest'
      description: ""
      required: true
    AppUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppUpdateRequest'
      description: ""
      required: true
    AppRoleUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppRoleUpdateRequest'
      description: ""
      required: true
    RotateAppSecretRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RotateAppSecretRequest'
      description: ""
      required: true
    RoleCreateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoleCreateRequest'
      description: ""
      required: true
    RoleUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoleUpdateRequest'
      description: ""
      required: true
    RoleMappingRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoleMappingRequest'
      description: ""
      required: true
    UserCreateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserCreateRequest'
      description: ""
      required: true
    UserUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserUpdateRequest'
      description: ""
      required: true
    UserEnableRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserEnableRequest'
      description: ""
      required: true
    AuthReqOtpRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthReqOtpRequest'
      description: ""
      required: true
    AbacConfigRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AbacConfigRequest'
      description: ""
      required: true
    ClientCredentialsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClientCredentialsRequest'
      description: ""
      required: true
    EmailAuthReqOtpRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthReqOtpRequest'
      description: ""
      required: true
    MobileAuthReqOtpRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MobileAuthReqOtpRequest'
      description: ""
      required: true
    MobileOTPAuthLoginRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OTPAuthLoginRequest'
      description: ""
      required: true
    EmailOTPAuthRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmailOTPAuthRequest'
      description: ""
      required: true
    ResourceCreateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCreateRequest'
      description: ""
      required: true
    ResourceUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceUpdateRequest'
      description: ""
      required: true
    PermissionCreateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PermissionCreateRequest'
      description: ""
      required: true
    PermissionUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PermissionUpdateRequest'
      description: ""
      required: true
    ConnectionCreateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectionCreateRequest'
      description: ""
      required: true
    ConnectionUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectionUpdateRequest'
      description: ""
      required: true
    ConnectionSamlCreateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectionSamlCreateRequest'
      description: ""
      required: true
    ConnectionSamlUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectionSamlUpdateRequest'
      description: ""
      required: true
    IdentityLoginCredentialsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IdentityLoginCredentials'
      description: ""
    GroupCreateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GroupCreateRequest'
      description: ""
      required: true
    TenantCreateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TenantCreateRequest'
      description: ""
      required: true
    TenantUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TenantUpdateRequest'
      description: ""
      required: true
    FileUploadRequest:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/MultipartFileUploadRequest'
      description: ""
    GroupUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GroupUpdateRequest'
      description: ""
      required: true
    GroupRolesMappingUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GroupRolesMappingUpdateRequest'
      description: ""
      required: true
    GroupUsersMappingUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GroupUsersMappingUpdateRequest'
      description: ""
      required: true
    SMSSendRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SMSSendRequest'
      description: ""
      required: true
    OIDCPostRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OIDCPostRequest'
      description: ""
      required: true
    OIDCUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OIDCUpdateRequest'
      description: ""
      required: true
  responses:
    SuccessAppIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessAppIdResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    ErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Error Occurred
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    BadRequestErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Bad request - The server is unable to process the request due to
        something that is perceived to be a client error.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    UnauthorizedErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Unauthorized -  The client's identity is unknown to the server.
        Verify that you are accessing the correct tenant and that your client ID and
        client secret are valid on that Tenant.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    ForbiddenErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Forbidden - The client's identity is known to the server but it
        does not have access rights to the requested resource. Verify that you're
        using the correct client ID and client secret or grant the client the necessary
        roles to access the resource.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    NotFoundErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Not found - The server can not find the requested resource.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    ServiceUnavailableErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Server error - The server is not ready to handle the request. This
        could be due to maintenance downtime or system resource constraints.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    PutErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PutErrorResponse'
      description: Error Occurred
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    PostErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostErrorResponse'
      description: Error Occurred
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    GetErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetErrorResponse'
      description: Error Occurred
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessStatusResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessStatusResponse'
      description: OK - The request succeeded.
    SuccessAbacResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessAbacResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    FileStatusResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FileStatusResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    UserChangeLogResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserChangeLogResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    GroupChangeLogResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GroupChangeLogResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessOIDCResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OIDCGetResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessConnectionResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessConnectionResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessSamlConnectionResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessSamlConnectionResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    AcceptedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AcceptedResponse'
      description: ACCEPTED
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessResourceResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessResourceResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessResourcesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessResourcesResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessPermissionResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessPermissionResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessPermissionsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessPermissionsResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    ResourceCreateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCreateRequest'
      description: ""
    ResourceUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceUpdateRequest'
      description: ""
    PermissionCreateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PermissionCreateRequest'
      description: ""
    PermissionUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PermissionUpdateRequest'
      description: ""
    SuccessAppSecretCreateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessAppSecretCreateResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessAppResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessAppResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessTenantIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessTenantIdResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessAppsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessAppsResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    TenantResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TenantResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessRoleResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessRoleResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessRolesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessRolesResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessRolesResponseV2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessRolesResponseV2'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessAppRolesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessAppRolesResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessUserRoleMappingResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessUserRoleMappingResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessUserAppMappingResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessUserAppMappingResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessUserCreateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserCreateResponse'
      description: OK - The request succeeded.
    SuccessUserResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessUserResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessUsersResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessUsersResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessUsersResponseV2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessUsersResponseV2'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessAuthenticationLoginResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessAuthenticationLoginResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessVerifyOtpResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessVerifyOtpResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessIdentityResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessIdentityResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
        X-COREOS-TID:
          description: tenant-id
          explode: false
          schema:
            type: string
          style: simple
    SuccessAuthorizationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessAuthorizationResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    ConnectionCreateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectionCreateRequest'
      description: OK - The request succeeded.
    SuccessGroupResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessGroupResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessGroupsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessGroupsResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessGroupsResponseV2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessGroupsResponseV2'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
    SuccessUserInfoResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessUserInfoResponse'
      description: OK - The request succeeded.
      headers:
        X-COREOS-REQUEST-ID:
          description: Unique request ID that was passed as header parameter in the
            request.
          explode: false
          schema:
            type: string
          style: simple
  schemas:
    EpochTimestamp:
      description: Represents a date time as number of seconds elapsed since 00:00Hrs
        of 1st January 1970 UTC.
      format: int64
      type: integer
    Query:
      properties:
        match:
          items:
            type: object
          type: array
        multi_match:
          items:
            type: object
          type: array
        term:
          items:
            type: object
          type: array
        terms:
          items:
            type: object
          type: array
        range:
          items:
            type: object
          type: array
        regexp:
          items:
            type: object
          type: array
        exists:
          items:
            type: object
          type: array
        match_phrase:
          items:
            type: object
          type: array
        match_phrase_prefix:
          items:
            type: object
          type: array
        prefix:
          items:
            type: object
          type: array
        fuzzy:
          items:
            type: object
          type: array
      type: object
    OrderBy:
      default: desc
      description: ordering of data
      enum:
      - desc
      - asc
      type: string
    AppCore:
      properties:
        description:
          description: Description of the application.
          maxLength: 50
          minLength: 0
          nullable: true
          pattern: "^([a-zA-Z])([a-zA-Z0-9,\\s]*)$"
          type: string
        isPrivateApp:
          default: false
          description: Set if app is private and can be allocated only to the Tenant
            specified in the field `privateTenantId`.
          type: boolean
        privateTenantId:
          description: Will be ignored if `isPrivate` is false.
          nullable: false
          type: string
        isActive:
          description: "When `isActive` = False OR `isDeleted` = False, the role will\
            \ be ignored for granting permissions."
          type: boolean
        redirectUri:
          description: Array of allowed redirect URIs.
          items:
            description: Redirect URIs allowed.
            example: http://localhost:8000/
            type: string
          minItems: 1
          type: array
      type: object
    App:
      allOf:
      - $ref: '#/components/schemas/AppCore'
      - $ref: '#/components/schemas/App_allOf'
    TenantIdInfo:
      additionalProperties: false
      example:
        tenantId: tenantId
        orgId: orgId
      properties:
        tenantId:
          description: Tenant ID pertaining to the provided alias.
          type: string
        orgId:
          description: Denotes the auth0 organization this platform Tenant belongs
            to.
          type: string
      type: object
    AppInfo:
      allOf:
      - $ref: '#/components/schemas/App'
      - $ref: '#/components/schemas/AppInfo_allOf'
    AppMutableData:
      allOf:
      - $ref: '#/components/schemas/AppCore'
      - $ref: '#/components/schemas/AppMutableData_allOf'
    OIDCPostRequest:
      additionalProperties: false
      example:
        userInfoUrl: userInfoUrl
        tokenUrl: tokenUrl
        clientId: clientId
        authorizationUrl: authorizationUrl
        jwksUrl: jwksUrl
        displayName: displayName
        logoutUrl: logoutUrl
        clientSecret: clientSecret
        connectionName: connectionName
        enabled: true
        guiOrder: 0.8008281904610115
        issuer: issuer
      properties:
        connectionName:
          description: Alias of the OIDC provider.
          maxLength: 50
          minLength: 2
          pattern: "^[a-zA-Z]+(-[a-zA-Z]+)*$"
          type: string
        displayName:
          description: Display name of the OIDC provider.
          maxLength: 50
          minLength: 2
          pattern: "^[a-zA-Z ]*$"
          type: string
        enabled:
          description: The provider is enabled.
          type: boolean
        guiOrder:
          description: Order of the provider in GUI.
          type: number
        userInfoUrl:
          description: User info URL.
          pattern: "https:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        logoutUrl:
          description: Log out URL.
          pattern: "https:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        authorizationUrl:
          description: Authorization URL.
          pattern: "https:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        tokenUrl:
          description: Token URL.
          pattern: "https:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        clientId:
          description: Client identifier registered with identity provider.
          minLength: 1
          type: string
        clientSecret:
          description: Client secret.
          minLength: 1
          type: string
        issuer:
          description: Issuer of response.
          minLength: 1
          type: string
        jwksUrl:
          description: JWKS URL.
          pattern: "https:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
      required:
      - authorizationUrl
      - clientId
      - clientSecret
      - connectionName
      - tokenUrl
      type: object
    OIDCUpdateRequest:
      additionalProperties: false
      example:
        userInfoUrl: userInfoUrl
        tokenUrl: tokenUrl
        clientId: clientId
        authorizationUrl: authorizationUrl
        jwksUrl: jwksUrl
        displayName: displayName
        logoutUrl: logoutUrl
        clientSecret: clientSecret
        enabled: true
        guiOrder: 0.8008281904610115
        issuer: issuer
      minProperties: 1
      properties:
        displayName:
          description: Display name of the OIDC provider.
          maxLength: 50
          minLength: 2
          pattern: "^[a-zA-Z ]*$"
          type: string
        enabled:
          description: When on the provider is enabled.
          type: boolean
        guiOrder:
          description: Order of the provider in GUI.
          type: number
        userInfoUrl:
          description: User info URL.
          pattern: "https:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        logoutUrl:
          description: Log out URL.
          pattern: "https:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        authorizationUrl:
          description: Authorization URL.
          pattern: "https:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        tokenUrl:
          description: Token URL.
          pattern: "https:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        clientId:
          description: Client identifier registered with identity provider.
          minLength: 1
          type: string
        clientSecret:
          description: Client secret.
          minLength: 1
          type: string
        issuer:
          description: Issuer of response.
          minLength: 1
          type: string
        jwksUrl:
          description: JWKS URL.
          pattern: "https:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
      type: object
    AppCreateRequest:
      additionalProperties: false
      example:
        isPrivateApp: true
        privateTenantId: privateTenantId
        redirectUri:
        - http://localhost:8000/
        - http://localhost:8000/
        clientId: clientId
        appType: backend
        appName: appName
        description: description
        clientSecret:
          encryptedText: encryptedText
          iv: iv
      properties:
        appType:
          description: Type of app.
          enum:
          - backend
          - mobile
          - web
          - internal
          type: string
        appName:
          description: Name of the app. Starts with alphabet. Only alphabets & hyphens
            allowed in the name.
          maxLength: 50
          pattern: "^[a-zA-Z]+(-[a-zA-Z]+)*$"
          type: string
        description:
          description: Description of the app.
          maxLength: 50
          minLength: 0
          pattern: "^([a-zA-Z])([a-zA-Z0-9,\\s-]*)$"
          type: string
        isPrivateApp:
          description: Set if app is private and can be allocated only to the Tenant
            specified in the field `privateTenantId`.
          type: boolean
        privateTenantId:
          description: Will be ignored if `isPrivate` is false.
          nullable: false
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        redirectUri:
          description: Array of redirect URIs allowed.
          items:
            description: Redirect URI allowed.
            example: http://localhost:8000/
            type: string
          minItems: 1
          type: array
        clientId:
          description: '`clientId` of the app.'
          nullable: false
          type: string
        clientSecret:
          $ref: '#/components/schemas/AppCreateRequest_clientSecret'
      required:
      - appName
      - appType
      type: object
    AppUpdateRequest:
      additionalProperties: false
      example:
        redirectUri:
        - http://localhost:8000/
        - http://localhost:8000/
        clientId: clientId
        isDeleted: true
        description: description
        clientSecret:
          encryptedText: encryptedText
          iv: iv
        isActive: true
      minProperties: 1
      properties:
        description:
          description: Description of the app.
          maxLength: 50
          nullable: true
          pattern: "^([a-zA-Z])([a-zA-Z0-9,\\s-]*)$"
          type: string
        isActive:
          description: "When `isActive` = False, the app will be ignored for update."
          type: boolean
        isDeleted:
          description: "If app is not mapped to any other tenant, deleted the app."
          type: boolean
        redirectUri:
          description: Array of redirect URIs allowed.
          items:
            description: Redirect URI allowed.
            example: http://localhost:8000/
            type: string
          minItems: 1
          type: array
        clientId:
          description: Client ID of the app.
          nullable: false
          type: string
        clientSecret:
          $ref: '#/components/schemas/AppUpdateRequest_clientSecret'
      type: object
    Error:
      description: Information of error occurred during operation.
      example:
        code: code
        additionalInfo: "{}"
        description: description
      properties:
        code:
          description: "12 digits long code that is assigned to each error. It contains\
            \ service code, method code, and error code."
          type: string
        description:
          description: Error description that provides summary of error.
          maxLength: 256
          minLength: 0
          type: string
        additionalInfo:
          description: Additional information related to the error.
          type: object
      type: object
    Request:
      example:
        method: POST
        queryString: queryString
        body: "{}"
        uri: uri
      properties:
        uri:
          description: The API endpoint where the request was received.
          type: string
        method:
          description: HTTP method requested on the API endpoint.
          enum:
          - POST
          - GET
          - PUT
          type: string
        queryString:
          description: Query string received by the server.
          type: string
        body:
          description: Request body data received by the server.
          type: object
      type: object
    RoleBase:
      properties:
        roleId:
          description: Unique ID assigned to each role at the time of creation.
          type: string
        roleName:
          description: Name of  the role
          type: string
        description:
          description: "Description of the role (for example, role created for admin\
            \ users)."
          maxLength: 36
          minLength: 2
          nullable: false
          pattern: "^([a-zA-Z])([a-zA-Z0-9,\\s]*)$"
          type: string
        permissions:
          description: Permissions attached with the role.
          items:
            description: Permission names
            type: string
          nullable: true
          type: array
        isActive:
          description: "When `isActive` = False OR `isDeleted` = False, the role will\
            \ be ignored for granting permissions."
          type: boolean
        isDeleted:
          description: "Whether the role is deleted or not. When `isActive` = False\
            \ OR `isDeleted` = False, the role will be ignored for granting permissions."
          type: boolean
        canGrantToUsers:
          description: Boolean value indicates if this Role can be granted to user
            groups.
          type: boolean
        securityLevel:
          description: Security level of the the role. Default is OPEN. Used to restrict
            the access level for the role.
          type: string
      type: object
    AppRoleUpdateRequest:
      additionalProperties: false
      example:
        roles:
        - Platform:Role:FaaS:FaaSAdmin
        - Platform:Role:HQ:User
        assign: true
      properties:
        assign:
          description: Boolean field to identify whether to assign or remove role.
            The same action(assign or remove) will be applicable on all the roles.
          type: boolean
        roles:
          description: List of roles to be added/removed from group.
          example:
          - Platform:Role:FaaS:FaaSAdmin
          - Platform:Role:HQ:User
          items:
            description: Role Id
            nullable: false
            pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
            type: string
          minItems: 1
          type: array
      required:
      - assign
      - roles
      type: object
    RotateAppSecretRequest:
      additionalProperties: false
      type: object
    RoleCreateRequest:
      additionalProperties: false
      example:
        securityLevel: SENSITIVE
        permissions:
        - permissions
        - permissions
        roleName: roleName
        canGrantToUsers: true
        description: description
        canGrantToApps: false
      properties:
        roleName:
          description: Name of the role (each role should be assigned with a name).
          maxLength: 50
          pattern: "^[a-zA-Z]+(-[a-zA-Z]+)*$"
          type: string
        description:
          description: "Description of the role, for example, role created for admin\
            \ users."
          maxLength: 50
          minLength: 2
          nullable: false
          pattern: "^([a-zA-Z])([a-zA-Z0-9,\\s-]*)$"
          type: string
        securityLevel:
          description: Security level of the the role. Default is OPEN. Used to restrict
            the access level for the role.
          enum:
          - SENSITIVE
          - RESTRICTED
          - OPEN
          type: string
        permissions:
          description: Permissions attached with the role.
          items:
            description: Permission IDs.
            pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
            type: string
          nullable: true
          type: array
        canGrantToApps:
          default: false
          description: Boolean value indicates if the role can be granted to other
            apps/services.
          type: boolean
        canGrantToUsers:
          default: true
          description: Boolean value indicates if the Role can be granted to user
            groups.
          type: boolean
      required:
      - description
      - roleName
      type: object
    RoleUpdateRequest:
      additionalProperties: false
      example:
        assignPermissions: true
        securityLevel: SENSITIVE
        isDeleted: true
        permissions:
        - permissions
        - permissions
        canGrantToUsers: true
        description: description
        isActive: true
        canGrantToApps: true
      minProperties: 1
      properties:
        description:
          description: "Description of the role (for example, role created for admin\
            \ users)."
          maxLength: 50
          minLength: 2
          nullable: false
          pattern: "^([a-zA-Z])([a-zA-Z0-9,\\s-]*)$"
          type: string
        assignPermissions:
          description: "When `assignPermissions` =true, permissions will be added\
            \ to the role. When `assignPermissions`= false, provided permissions will\
            \ be removed from role."
          type: boolean
        permissions:
          description: Permissions attached with this role. It contains array of permission
            IDs.
          items:
            description: Permission IDs.
            pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
            type: string
          nullable: true
          type: array
        isActive:
          description: "When `isActive` = False, the role will be ignored for granting\
            \ permissions."
          type: boolean
        isDeleted:
          description: "When `isDeleted` = true, the role will be deleted and can't\
            \ be accessed."
          type: boolean
        canGrantToApps:
          description: Boolean value indicates if the role can be granted to other
            apps or services.
          type: boolean
        canGrantToUsers:
          description: Boolean value indicates if this Role can be granted to user
            groups.
          type: boolean
        securityLevel:
          description: Security level of the the role. Default is OPEN. Used to restrict
            the access level for the role.
          enum:
          - SENSITIVE
          - RESTRICTED
          - OPEN
          type: string
      type: object
    RoleMapping:
      description: Role-mapping is used for the assignment of roles to a user.
      example:
        id: id
      properties:
        id:
          description: ID of the role.
          minLength: 2
          nullable: false
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
      required:
      - id
      type: object
    RoleMappingRequest:
      properties:
        assign:
          description: Boolean field to identify whether to assign or remove role.
            The same action (assign or remove) will be applicable on all the roles.
          type: boolean
        roles:
          description: List of roles to be added or removed from group.
          items:
            $ref: '#/components/schemas/RoleMapping'
          minItems: 1
          type: array
      required:
      - assign
      - roles
      type: object
    UserRoleMappingResponse:
      example:
        roles:
        - id: id
        - id: id
        tenantId: tenantId
      properties:
        tenantId:
          description: Tenant ID of the user.
          type: string
        roles:
          items:
            $ref: '#/components/schemas/RoleMapping'
          type: array
      type: object
    UserAppMappingResponse:
      example:
        userId: userId
        apps:
        - apps
        - apps
      properties:
        userId:
          description: ID of the user.
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        apps:
          items:
            description: App ID assigned to user.
            type: string
          type: array
      type: object
    AppRolesResponse:
      example:
        appId: appId
        roles:
        - Platform:Role:FaaS:FaaSAdmin
        - Platform:Role:FaaS:FaaSAdmin
      properties:
        appId:
          description: App ID of the M2M app.
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        roles:
          description: List of roles assigned to the app.
          items:
            description: Role IDs.
            example: Platform:Role:FaaS:FaaSAdmin
            pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
            type: string
          type: array
      type: object
    SuccessAppRolesResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data:
          appId: appId
          roles:
          - Platform:Role:FaaS:FaaSAdmin
          - Platform:Role:FaaS:FaaSAdmin
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/AppRolesResponse'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    SuccessUserRoleMappingResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data:
          roles:
          - id: id
          - id: id
          tenantId: tenantId
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/UserRoleMappingResponse'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    SuccessUserAppMappingResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data:
          userId: userId
          apps:
          - apps
          - apps
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/UserAppMappingResponse'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    UserCreateRequest:
      additionalProperties: false
      example:
        firstName: string
        middleName: string
        lastName: string
        email: user@example.com
        primaryMobile:
          countryCode: +91
          number: "1234567890"
        secondaryMobile:
          countryCode: +91
          number: "1234567889"
        participantId: string
        allowSocialAuth:
          google: true
        allowSAMLAuth: true
        samlConnector: string
        samlUserId: string
      properties:
        userId:
          description: '`userId` in UUID format.'
          format: uuid
          type: string
        email:
          description: Email of the user.
          format: email
          minLength: 1
          nullable: false
          pattern: "^([a-zA-Z0-9_\\.\\+-]+)@([\\da-zA-Z0-9_\\.-]+)\\.([a-zA-Z\\.]{2,6})$"
          type: string
        primaryMobile:
          $ref: '#/components/schemas/MobileNumber'
        firstName:
          description: First name of the user.
          maxLength: 36
          minLength: 1
          nullable: false
          type: string
        middleName:
          description: Middle name of the user.
          maxLength: 36
          minLength: 1
          nullable: true
          type: string
        lastName:
          description: Last name of the user.
          maxLength: 36
          minLength: 1
          nullable: false
          type: string
        secondaryMobile:
          $ref: '#/components/schemas/MobileNumber'
        participantId:
          description: ID of the participant.
          maxLength: 255
          minLength: 2
          nullable: true
          type: string
        allowSocialAuth:
          $ref: '#/components/schemas/SocialAuth'
        allowSAMLAuth:
          description: A boolean value that specifies whether SAML 2.0 Login is allowed.
          nullable: true
          type: boolean
        samlConnector:
          nullable: true
          type: string
        samlUserId:
          nullable: true
          type: string
      required:
      - firstName
      type: object
    UserUpdateRequest:
      additionalProperties: false
      example:
        participantId: participantId
        firstName: firstName
        lastName: lastName
        primaryMobile:
          number: number
          countryCode: countryCode
        samlConnector: samlConnector
        secondaryMobile:
          number: number
          countryCode: countryCode
        allowSocialAuth:
          google: true
        middleName: middleName
        allowSAMLAuth: true
        email: email
        samlUserId: samlUserId
      minProperties: 1
      properties:
        firstName:
          description: First Name of the user.
          maxLength: 36
          minLength: 1
          nullable: false
          type: string
        middleName:
          description: Middle name of the user.
          maxLength: 36
          minLength: 1
          nullable: true
          type: string
        lastName:
          description: Last name of the user.
          maxLength: 36
          minLength: 1
          nullable: true
          type: string
        participantId:
          description: The Participant Identifier of the user as generated by the
            Participant Service.
          maxLength: 255
          minLength: 2
          nullable: true
          type: string
        secondaryMobile:
          $ref: '#/components/schemas/MobileNumber'
        primaryMobile:
          $ref: '#/components/schemas/MobileNumber'
        email:
          description: Email of the user.
          format: email
          minLength: 1
          nullable: false
          pattern: "^([a-zA-Z0-9_\\.\\+-]+)@([\\da-zA-Z0-9_\\.-]+)\\.([a-zA-Z\\.]{2,6})$"
          type: string
        allowSocialAuth:
          $ref: '#/components/schemas/SocialAuth'
        allowSAMLAuth:
          description: A Boolean value that specifies whether SAML Login is allowed.
          nullable: true
          type: boolean
        samlConnector:
          nullable: true
          type: string
        samlUserId:
          nullable: true
          type: string
      type: object
    UserEnableRequest:
      additionalProperties: false
      example:
        mobile:
          number: number
          countryCode: countryCode
        email: email
      properties:
        email:
          description: Email of the user.
          format: email
          minLength: 1
          nullable: false
          pattern: "^([a-zA-Z0-9_\\.\\+-]+)@([\\da-zA-Z0-9_\\.-]+)\\.([a-zA-Z\\.]{2,6})$"
          type: string
        mobile:
          $ref: '#/components/schemas/MobileNumber'
      type: object
    UserResponse:
      example:
        lastName: lastName
        groups:
        - groups
        - groups
        isActive: true
        userId: userId
        samlUserId: samlUserId
        participantId: participantId
        firstName: firstName
        primaryMobile:
          number: number
          countryCode: countryCode
        samlConnector: samlConnector
        allowSocialAuth:
          google: true
        secondaryMobile:
          number: number
          countryCode: countryCode
        middleName: middleName
        allowSAMLAuth: true
        email: email
      properties:
        userId:
          description: Unique ID of user created at the time of creation.
          type: string
        email:
          description: "User email. Email is in masked format, it reveals first 2\
            \ characters of email masking remaining characters with asterisk. However,\
            \ the domain part is not masked."
          format: email
          type: string
        firstName:
          description: First name of user.
          type: string
        middleName:
          description: Middle name of user.
          type: string
        lastName:
          description: Last name of user.
          type: string
        participantId:
          description: The participant identifier of the user. There are no validations
            for this field.
          maxLength: 255
          minLength: 2
          nullable: true
          type: string
        allowSocialAuth:
          $ref: '#/components/schemas/SocialAuth'
        allowSAMLAuth:
          description: A Boolean value that specifies whether SAML 2.0 Login is allowed.
          nullable: true
          type: boolean
        samlConnector:
          type: string
        samlUserId:
          type: string
        isActive:
          default: true
          description: Whether user is active or not.
          type: boolean
        primaryMobile:
          $ref: '#/components/schemas/MobileNumber'
        secondaryMobile:
          $ref: '#/components/schemas/MobileNumber'
        groups:
          description: List of the group IDs user belong to.
          items:
            description: Group ID assigned to user.
            type: string
          type: array
      type: object
    MobileNumber:
      example:
        number: number
        countryCode: countryCode
      properties:
        countryCode:
          description: Country code for mobile number.
          maxLength: 4
          minLength: 2
          nullable: false
          pattern: "^\\+(\\d{1}\\-)?(\\d{1,3})$"
          type: string
        number:
          description: "Mobile number. In `Get` calls, mobile number is masked excluding\
            \ last 4 digits of number."
          maxLength: 10
          minLength: 4
          nullable: false
          pattern: "^[0-9]{4,14}$"
          type: string
      required:
      - countryCode
      - number
      type: object
    SocialAuth:
      example:
        google: true
      properties:
        google:
          description: A Boolean value that specifies whether Google Login is allowed.
          nullable: true
          type: boolean
      type: object
    Email:
      description: Email of the user.
      format: email
      minLength: 1
      nullable: false
      pattern: "^([a-zA-Z0-9_\\.\\+-]+)@([\\da-zA-Z0-9_\\.-]+)\\.([a-zA-Z\\.]{2,6})$"
      type: string
    IdentityLoginType:
      description: Connection type for the user.
      enum:
      - google
      - github
      - saml
      type: string
    Meta:
      description: Metadata about the search result
      properties:
        totalElements:
          description: Total Number of elements matching the search criteria
          type: integer
      type: object
    AppSecretResponse:
      example:
        clientId: clientId
        appId: appId
        secret:
          encryptedText: encryptedText
          iv: iv
      properties:
        appId:
          description: Unique ID of the app.
          type: string
        clientId:
          description: Unique client-id of the app as registered on keycloak
          type: string
        secret:
          $ref: '#/components/schemas/AppCreateRequest_clientSecret'
      type: object
    OIDCResponse:
      example:
        userInfoUrl: userInfoUrl
        tokenUrl: tokenUrl
        clientId: clientId
        jwksUrl: jwksUrl
        displayName: displayName
        connectionType: connectionType
        enabled: true
        issuer: issuer
        authorizationUrl: authorizationUrl
        logoutUrl: logoutUrl
        connectionId: connectionId
        connectionName: connectionName
        guiOrder: 0.8008281904610115
      properties:
        connectionId:
          description: Connection ID.
          type: string
        connectionName:
          description: Alias of identity provider.
          type: string
        displayName:
          description: Display name of the OIDC provider.
          type: string
        connectionType:
          description: Type of connection.
          type: string
        enabled:
          description: When on the provider is enabled.
          type: boolean
        authorizationUrl:
          description: Authorization URL.
          type: string
        tokenUrl:
          description: Token URL.
          type: string
        clientId:
          description: Client identifier registered with identity provider.
          type: string
        userInfoUrl:
          description: User info URL.
          type: string
        logoutUrl:
          description: Logout URL.
          type: string
        guiOrder:
          description: GUI order.
          type: number
        issuer:
          description: Issuer of response.
          type: string
        jwksUrl:
          description: JWKS URL.
          type: string
      type: object
    AppDataResponse:
      allOf:
      - $ref: '#/components/schemas/AppCore'
      properties:
        id:
          description: Unique app ID of the app.
          type: string
      type: object
    RoleResponse:
      allOf:
      - $ref: '#/components/schemas/RoleResponse_allOf'
      - $ref: '#/components/schemas/RoleBase'
    AppIdResponse:
      example:
        appId: appId
      properties:
        appId:
          description: Unique ID assigned to each role at the time of creation.
          type: string
      type: object
    UserCreateResponseObject:
      example:
        id: id
      properties:
        id:
          type: string
      type: object
    UserCreateResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data:
          id: id
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/UserCreateResponseObject'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    UserChangeLogResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/UserChangeLogResponse_data'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    GroupChangeLogResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/GroupChangeLogResponse_data'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    UserChange:
      allOf:
      - $ref: '#/components/schemas/BaseChange'
      - $ref: '#/components/schemas/UserChange_allOf'
      description: user change information.
    GroupChange:
      allOf:
      - $ref: '#/components/schemas/BaseChange'
      - $ref: '#/components/schemas/GroupChange_allOf'
      description: user change information.
    BaseChange:
      properties:
        action:
          $ref: '#/components/schemas/ChangeAction'
        actionTime:
          description: Represents a date time as number of seconds elapsed since 00:00Hrs
            of 1st January 1970 UTC.
          format: int64
          type: integer
        actionBy:
          type: object
        channel:
          maxLength: 64
          minLength: 1
          type: string
      required:
      - action
      - actionBy
      - actionTime
      - channel
      type: object
    ChangeAction:
      description: Action for data auditing
      enum:
      - CREATE
      - UPDATE
      - GET
      - DELETE
      type: string
    ActionBy:
      type: object
    SuccessAppSecretCreateResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data:
          clientId: clientId
          appId: appId
          secret:
            encryptedText: encryptedText
            iv: iv
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/AppSecretResponse'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    OIDCGetResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data:
          userInfoUrl: userInfoUrl
          tokenUrl: tokenUrl
          clientId: clientId
          jwksUrl: jwksUrl
          displayName: displayName
          connectionType: connectionType
          enabled: true
          issuer: issuer
          authorizationUrl: authorizationUrl
          logoutUrl: logoutUrl
          connectionId: connectionId
          connectionName: connectionName
          guiOrder: 0.8008281904610115
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/OIDCResponse'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    SuccessAppResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data: null
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/AppInfo'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    TenantResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data:
          abacConfig:
            headers: "{}"
            isActive: false
            contentType: contentType
            url: url
          metadata: "{}"
          displayName: Alpha Ltd
          name: alpha
          tenantId: alpha
          id: alpha:61f047b4-4ff8-41d6-bbaf-73e7aee92851
          enabled: true
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/Tenant'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    SuccessTenantIdResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data:
          tenantId: tenantId
          orgId: orgId
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/TenantIdInfo'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    SuccessAppsResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data:
        - null
        - null
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          items:
            $ref: '#/components/schemas/AppInfo'
          type: array
        request:
          $ref: '#/components/schemas/Request'
      type: object
    SuccessRoleResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data: null
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/RoleResponse'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    SuccessAppIdResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data:
          appId: appId
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/AppIdResponse'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    SuccessRolesResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data:
        - null
        - null
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          items:
            $ref: '#/components/schemas/RoleResponse'
          type: array
        request:
          $ref: '#/components/schemas/Request'
      type: object
    SuccessRolesResponseV2:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/SuccessRolesResponseV2_data'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    ErrorResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    FileStatus:
      description: Status of the file uploaded
      example:
        reason:
        - reason
        - reason
        statusId: statusId
        tenantId: tenantId
        status: status
      properties:
        tenantId:
          description: Unique Id of tenant
          type: string
        statusId:
          description: Id of the yaml upload
          type: string
        status:
          description: Current status of uploaded file
          type: string
        reason:
          items:
            type: string
          type: array
      type: object
    FileStatusResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data:
        - reason:
          - reason
          - reason
          statusId: statusId
          tenantId: tenantId
          status: status
        - reason:
          - reason
          - reason
          statusId: statusId
          tenantId: tenantId
          status: status
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          items:
            $ref: '#/components/schemas/FileStatus'
          type: array
        request:
          $ref: '#/components/schemas/Request'
      type: object
    SuccessResponse:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - $ref: '#/components/schemas/SuccessResponse_allOf'
    SuccessConnectionResponse:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - $ref: '#/components/schemas/SuccessConnectionResponse_allOf'
    SuccessSamlConnectionResponse:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - $ref: '#/components/schemas/SuccessSamlConnectionResponse_allOf'
    SuccessUserResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data:
          lastName: lastName
          groups:
          - groups
          - groups
          isActive: true
          userId: userId
          samlUserId: samlUserId
          participantId: participantId
          firstName: firstName
          primaryMobile:
            number: number
            countryCode: countryCode
          samlConnector: samlConnector
          allowSocialAuth:
            google: true
          secondaryMobile:
            number: number
            countryCode: countryCode
          middleName: middleName
          allowSAMLAuth: true
          email: email
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/UserResponse'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    SuccessUsersResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data:
        - lastName: lastName
          groups:
          - groups
          - groups
          isActive: true
          userId: userId
          samlUserId: samlUserId
          participantId: participantId
          firstName: firstName
          primaryMobile:
            number: number
            countryCode: countryCode
          samlConnector: samlConnector
          allowSocialAuth:
            google: true
          secondaryMobile:
            number: number
            countryCode: countryCode
          middleName: middleName
          allowSAMLAuth: true
          email: email
        - lastName: lastName
          groups:
          - groups
          - groups
          isActive: true
          userId: userId
          samlUserId: samlUserId
          participantId: participantId
          firstName: firstName
          primaryMobile:
            number: number
            countryCode: countryCode
          samlConnector: samlConnector
          allowSocialAuth:
            google: true
          secondaryMobile:
            number: number
            countryCode: countryCode
          middleName: middleName
          allowSAMLAuth: true
          email: email
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
        request:
          $ref: '#/components/schemas/Request'
      type: object
    SuccessUsersResponseV2:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/SuccessUsersResponseV2_data'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    MobileAuthReqOtpRequest:
      additionalProperties: false
      example:
        mode: sms
        mobile:
          number: number
          countryCode: countryCode
        emailId: emailId
      properties:
        mobile:
          $ref: '#/components/schemas/MobileNumber'
        emailId:
          type: string
        mode:
          description: Can be only one of email or sms. If email is provided in this
            field then `emailId` key has to be present. If SMS is provided in this
            field then mobile object has to be present in the request payload.
          enum:
          - sms
          - email
          type: string
      required:
      - mode
      type: object
    AuthReqOtpRequest:
      additionalProperties: false
      example:
        mode: sms
        mobile:
          number: number
          countryCode: countryCode
        emailId: emailId
        otp: otp
      properties:
        emailId:
          description: Email of the user.
          format: email
          minLength: 1
          nullable: false
          pattern: "^([a-zA-Z0-9_\\.\\+-]+)@([\\da-zA-Z0-9_\\.-]+)\\.([a-zA-Z\\.]{2,6})$"
          type: string
        mobile:
          $ref: '#/components/schemas/AuthReqOtpRequest_mobile'
        otp:
          description: Received OTP through mobile or email.
          type: string
        mode:
          description: Can be only one of email or sms. If email is provided in this
            field then `emailId` key has to be present. If SMS is provided in this
            field then mobile object has to be present in the request payload.
          enum:
          - sms
          - email
          type: string
      required:
      - mode
      - otp
      type: object
    AbacConfigRequest:
      additionalProperties: false
      description: Setting for ABAC Configuration for a tenant.
      example:
        headers: "{}"
        isActive: false
        contentType: contentType
        url: url
      properties:
        url:
          description: url on which ABAC authorization requests will be sent.
          type: string
        contentType:
          description: "Content-type header of the request. Currently application/json,\
            \ application/x-www-form-urlencoded are supported."
          type: string
        headers:
          description: Headers required for sending the validation request.
          type: object
        isActive:
          default: false
          description: Whether the ABAC is enabled during authorization.
          type: boolean
      type: object
    ClientCredentialsRequest:
      additionalProperties: false
      example:
        audience: audience
        clientId: clientId
        clientSecret: clientSecret
      properties:
        clientId:
          description: Your application's Client ID.
          nullable: false
          type: string
        clientSecret:
          description: Your application's Client Secret.
          nullable: false
          type: string
        audience:
          description: App ID for which you need token. Not required in keycloak API
            calls.
          nullable: true
          type: string
      required:
      - clientId
      - clientSecret
      type: object
    SMSSendRequest:
      additionalProperties: false
      example:
        sender: sender
        recipient: recipient
        body: body
        req:
          ip: ip
          user-agent: user-agent
      properties:
        recipient:
          type: string
        body:
          type: string
        sender:
          type: string
        req:
          $ref: '#/components/schemas/SMSSendRequest_req'
      required:
      - body
      - recipient
      - sender
      type: object
    SuccessStatusResponse:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - $ref: '#/components/schemas/SuccessStatusResponse_allOf'
    SuccessAbacResponse:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - $ref: '#/components/schemas/SuccessAbacResponse_allOf'
    OTPAuthLoginRequest:
      $ref: '#/components/schemas/MobileOTPAuthData'
    EmailOTPAuthRequest:
      $ref: '#/components/schemas/EmailPayload'
    MobileOTPAuthData:
      example:
        mobile:
          countryCode: string
          number: string
        otp: string
        audience: string
      properties:
        mobile:
          $ref: '#/components/schemas/MobileNumber'
        otp:
          type: string
        audience:
          type: string
      required:
      - audience
      - credentials
      - email
      type: object
    EmailPayload:
      properties:
        emailId:
          description: Email of the user.
          format: email
          minLength: 1
          nullable: false
          pattern: "^([a-zA-Z0-9_\\.\\+-]+)@([\\da-zA-Z0-9_\\.-]+)\\.([a-zA-Z\\.]{2,6})$"
          type: string
        mobile:
          $ref: '#/components/schemas/AuthReqOtpRequest_mobile'
        otp:
          description: The six digit number that the user may have received on their
            mobile or email.
          type: string
        audience:
          description: The resource or API which needs to be authenticated using the
            OTP.
          type: string
        mode:
          description: Can be only one of email or sms. If email is provided in this
            field then `emailId` key has to be present. If SMS is provided in this
            field then mobile object has to be present in the request payload.
          type: string
      required:
      - audience
      - otp
      type: object
    SuccessAuthenticationLoginResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data: OTP sent successfully.
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          description: Data will contain 'OTp sent successfully' message when OTP
            is sent.
          example: OTP sent successfully.
          type: string
        request:
          $ref: '#/components/schemas/Request'
      type: object
    SuccessVerifyOtpResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data:
          userId: userId
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/SuccessVerifyOtpResponse_data'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    SuccessAuthorizationResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data:
          expiresIn: 0.8008281904610115
          accessToken: accessToken
          tokenType: Bearer
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/SuccessAuthorizationResponse_data'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    OTPErrorResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    PostErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - $ref: '#/components/schemas/PostErrorResponse_allOf'
    ResourceCreateRequest:
      example:
        resourcePathFormatted: resourcePathFormatted
        requestParameter: requestParameter
        resourcePath: resourcePath
        name: name
        description: description
        allowedHttpMethods:
        - get
        - get
        attributePath: attributePath
      properties:
        name:
          description: Name of the entity exposed by this resource.
          maxLength: 50
          minLength: 2
          nullable: false
          pattern: "^[a-zA-Z]+(-[a-zA-Z]+)*$"
          type: string
        description:
          description: ' Description of the entity exposed by this resource.'
          maxLength: 50
          minLength: 2
          pattern: "^([a-zA-Z])([a-zA-Z0-9,\\s-]*)$"
          type: string
        resourcePath:
          description: URI for resource. Example "/core/api/v1/containers/**"
          nullable: false
          type: string
        resourcePathFormatted:
          description: "Formatted resourcePath. Example \"/core/api/v1/containers/{{containerId}}\""
          nullable: true
          type: string
        attributePath:
          description: JSON path in ValidateAPI response for requestParameter value.
            JSON path value will be matched with requestParameter value. This field
            will only be present in abac related resources.
          nullable: true
          type: string
        requestParameter:
          description: Request Path Param name for the attribute. It will save the
            name of the ABAC attribute.
          nullable: true
          type: string
        allowedHttpMethods:
          description: "Scopes of resource: get, update, create."
          items:
            enum:
            - get
            - put
            - post
            - delete
            - patch
            type: string
          nullable: false
          type: array
      required:
      - allowedHttpMethods
      - name
      - resourcePath
      type: object
    ResourceResponse:
      example:
        resourceId: resourceId
        resourcePath: resourcePath
        name: name
        description: description
        allowedHttpMethods:
        - allowedHttpMethods
        - allowedHttpMethods
        isActive: isActive
      properties:
        name:
          description: Name of the entity exposed by this resource.
          type: string
        description:
          description: Description of the entity exposed by this resource.
          type: string
        resourcePath:
          description: List of URIs for resource. Example "/core/api/v1/containers/**"
          type: string
        allowedHttpMethods:
          description: "Scopes of resource: get, put, post, patch."
          items:
            type: string
          type: array
        isActive:
          type: string
        resourceId:
          description: Unique resource ID assigned to resource at the time of creation.
          type: string
      type: object
    ResourcesResponse:
      items:
        $ref: '#/components/schemas/ResourceResponse'
      type: array
    ResourceUpdateRequest:
      example:
        resourcePathFormatted: resourcePathFormatted
        requestParameter: requestParameter
        isDeleted: true
        resourcePath: resourcePath
        description: description
        allowedHttpMethods:
        - get
        - get
        isActive: true
        attributePath: attributePath
      properties:
        description:
          description: Description of the entity exposed by this resource.
          maxLength: 50
          minLength: 2
          pattern: "^([a-zA-Z])([a-zA-Z0-9,\\s-]*)$"
          type: string
        resourcePath:
          description: List of URIs for resource. Example "/core/api/v1/containers/**"
          type: string
        allowedHttpMethods:
          description: "Scopes of resource- get, put, post, patch, delete."
          items:
            enum:
            - get
            - put
            - post
            - delete
            - patch
            type: string
          type: array
        isActive:
          description: "When `isActive` = False, the resource will be ignored from\
            \ updating, until is `isActive` = True."
          type: boolean
        isDeleted:
          description: "When `isDeleted` = True, the resource will be deleted and\
            \ can't be accessed."
          type: boolean
        resourcePathFormatted:
          description: "Formatted resourcePath. Example \"/core/api/v1/containers/{{containerId}}\"\
            . If set null, ABAC policies will not be applied on this resource."
          nullable: true
          type: string
        attributePath:
          description: JSON path in ValidateAPI response for requestParameter value.
            JSON path value will be matched with requestParameter value. This field
            will only be present in abac related resources.
          nullable: true
          type: string
        requestParameter:
          description: Request Path Param name for the attribute. It will save the
            name of the ABAC attribute.
          nullable: true
          type: string
      type: object
    SuccessResourceResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data:
          resourceId: resourceId
          resourcePath: resourcePath
          name: name
          description: description
          allowedHttpMethods:
          - allowedHttpMethods
          - allowedHttpMethods
          isActive: isActive
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/ResourceResponse'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    SuccessResourcesResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data:
        - resourceId: resourceId
          resourcePath: resourcePath
          name: name
          description: description
          allowedHttpMethods:
          - allowedHttpMethods
          - allowedHttpMethods
          isActive: isActive
        - resourceId: resourceId
          resourcePath: resourcePath
          name: name
          description: description
          allowedHttpMethods:
          - allowedHttpMethods
          - allowedHttpMethods
          isActive: isActive
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          items:
            $ref: '#/components/schemas/ResourceResponse'
          type: array
        request:
          $ref: '#/components/schemas/Request'
      type: object
    PermissionCreateRequest:
      additionalProperties: false
      example:
        resourceId: resourceId
        action: action
        description: description
        httpMethod: get
      properties:
        action:
          description: Named action that describes the operation permitted to be performed.
          maxLength: 50
          nullable: false
          pattern: "^[a-zA-Z]+(-[a-zA-Z]+)*$"
          type: string
        resourceId:
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: string
        httpMethod:
          enum:
          - get
          - put
          - post
          - delete
          - patch
          type: string
        description:
          description: Description of the permission.
          maxLength: 50
          minLength: 0
          nullable: false
          pattern: "^([a-zA-Z])([a-zA-Z0-9,\\s-]*)$"
          type: string
      required:
      - action
      - description
      - httpMethod
      - resourceId
      type: object
    PermissionResponse:
      example:
        permissionId: permissionId
        resourceId: resourceId
        isDeleted: true
        appId: ""
        action: action
        description: description
        httpMethod: get
        isActive: true
      properties:
        permissionId:
          description: Unique ID for permission assigned at the time of creation.
          type: string
        action:
          description: Named action that describes the operation permitted to be performed.
          maxLength: 50
          nullable: false
          pattern: "^[a-zA-Z]+(-[a-zA-Z]+)*$"
          type: string
        appId:
          description: Unique ID of the app to which this permission belong. Format
            of ID is platform:app:<appName>.
        resourceId:
          type: string
        httpMethod:
          enum:
          - get
          - put
          - post
          - delete
          - patch
          type: string
        description:
          description: Description of the permission.
          maxLength: 50
          type: string
        isActive:
          type: boolean
        isDeleted:
          type: boolean
      type: object
    PermissionsResponse:
      items:
        $ref: '#/components/schemas/PermissionResponse'
      type: array
    PermissionUpdateRequest:
      additionalProperties: false
      example:
        isDeleted: true
        description: description
        isActive: true
      minProperties: 1
      properties:
        description:
          description: Name of the permission. Permission name is unique for application.
          maxLength: 50
          nullable: false
          pattern: "^([a-zA-Z])([a-zA-Z0-9,\\s-]*)$"
          type: string
        isActive:
          description: "When `isActive` = False, the permision will be ignored from\
            \ updating, until is `isActive` = True."
          type: boolean
        isDeleted:
          description: "When `isDeleted` = True, the permission will be deleted and\
            \ can't be accessed."
          type: boolean
      type: object
    SuccessPermissionResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data:
          permissionId: permissionId
          resourceId: resourceId
          isDeleted: true
          appId: ""
          action: action
          description: description
          httpMethod: get
          isActive: true
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/PermissionResponse'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    SuccessPermissionsResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data:
        - permissionId: permissionId
          resourceId: resourceId
          isDeleted: true
          appId: ""
          action: action
          description: description
          httpMethod: get
          isActive: true
        - permissionId: permissionId
          resourceId: resourceId
          isDeleted: true
          appId: ""
          action: action
          description: description
          httpMethod: get
          isActive: true
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          items:
            $ref: '#/components/schemas/PermissionResponse'
          type: array
        request:
          $ref: '#/components/schemas/Request'
      type: object
    AcceptedResponse:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - $ref: '#/components/schemas/SuccessResponse_allOf'
    GetErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - $ref: '#/components/schemas/SuccessResponse_allOf'
    PutErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - $ref: '#/components/schemas/SuccessResponse_allOf'
    SuccessIdentityResponse:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - $ref: '#/components/schemas/SuccessIdentityResponse_allOf'
    SuccessUserInfoResponse:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - $ref: '#/components/schemas/SuccessUserInfoResponse_allOf'
    UserInfo:
      properties:
        nickname:
          description: User nick name. Its combination of first name and last name.
          type: string
        email:
          format: email
          type: string
        mobileNumber:
          $ref: '#/components/schemas/MobileNumber'
        firstName:
          description: First name of the user.
          type: string
        middleName:
          description: Middle name of the user.
          type: string
        lastName:
          description: Last Name of the user.
          type: string
        userId:
          description: User ID of the user.
          type: string
        tenantId:
          description: Tenant ID of the user.
          type: string
        participantId:
          description: Participant ID of the user.
          type: string
      type: object
    ConnectionCreateRequest:
      example:
        connectionClientId: connectionClientId
        connectionName: connectionName
        connectionClientSecret: connectionClientSecret
      properties:
        connectionName:
          description: Unique name of the connection.
          maxLength: 50
          minLength: 2
          pattern: "^[a-zA-Z]+(-[a-zA-Z]+)*$"
          type: string
        connectionClientId:
          description: Client ID of the social application.
          type: string
        connectionClientSecret:
          description: Client Secret of the social application.
          type: string
      required:
      - connectionClientId
      - connectionClientSecret
      - connectionName
      type: object
    ConnectionUpdateRequest:
      additionalProperties: false
      example:
        connectionClientId: connectionClientId
        connectionClientSecret: connectionClientSecret
      properties:
        connectionClientId:
          description: Client ID of the social application.
          type: string
        connectionClientSecret:
          description: Client Secret of the social application.
          type: string
      type: object
    ConnectionSamlCreateRequest:
      example:
        displayName: displayName
        publicKeyCertificate: publicKeyCertificate
        signOutEndpoint: signOutEndpoint
        connectionName: connectionName
        guiOrder: 0.8008281904610115
        signInEndpoint: signInEndpoint
      properties:
        connectionName:
          description: Unique name of the connection.
          maxLength: 50
          minLength: 2
          pattern: "^[a-zA-Z]+(-[a-zA-Z]+)*$"
          type: string
        displayName:
          description: Display Name of the SAML provider
          maxLength: 50
          minLength: 2
          pattern: "^[a-zA-Z]+([a-zA-Z0-9 ])*$"
          type: string
        guiOrder:
          description: order of the provider in gui
          type: number
        signInEndpoint:
          description: Sign In endpoint of the SAML connection.
          type: string
        signOutEndpoint:
          description: Sign Out endpoint of the SAML connection.
          type: string
        publicKeyCertificate:
          description: The certificate required for Saml connection should be of x509Cert
            format.
          type: string
      required:
      - connectionName
      - publicKeyCertificate
      type: object
    ConnectionSamlUpdateRequest:
      additionalProperties: false
      example:
        displayName: displayName
        publicKeyCertificate: publicKeyCertificate
        signOutEndpoint: signOutEndpoint
        guiOrder: 0.8008281904610115
        signInEndpoint: signInEndpoint
      properties:
        displayName:
          description: DisplayName of the Saml provider on login page
          maxLength: 50
          minLength: 2
          pattern: "^[a-zA-Z]+([a-zA-Z0-9 ])*$"
          type: string
        guiOrder:
          description: Order of the provider in gui
          type: number
        signInEndpoint:
          description: Sign In endpoint of the SAML connection.
          type: string
        signOutEndpoint:
          description: Sign Out endpoint of the SAML connection.
          type: string
        publicKeyCertificate:
          description: The certificate required for saml connection should be of x509Cert
            format
          type: string
      type: object
    IdentityLoginCredentials:
      properties:
        clientId:
          description: Client ID for the application.
          type: string
        connectionName:
          description: Name of the connection.
          maxLength: 50
          minLength: 2
          pattern: "^[a-zA-Z]+(-[a-zA-Z]+)*$"
          type: string
        redirectUrl:
          description: Redirect URL after success for login.
          type: string
        state:
          description: Used for avoiding CSRF attacks.
          type: string
      required:
      - clientId
      - connectionName
      - redirectUrl
      - state
      type: object
    GroupCreateRequest:
      additionalProperties: false
      example:
        name: name
        description: description
      properties:
        name:
          description: Name of the group. Group name is unique for application.
          maxLength: 50
          minLength: 2
          pattern: "^[a-zA-Z]+(-[a-zA-Z]+)*$"
          type: string
        description:
          maxLength: 50
          minLength: 2
          type: string
      type: object
    TenantUpdateRequest:
      additionalProperties: false
      example:
        abacConfig:
          headers: "{}"
          isActive: false
          contentType: contentType
          url: url
        metadata: "{}"
        displayName: displayName
        id: id
        enabled: true
      minProperties: 1
      properties:
        id:
          description: Tenant UUID scope
          type: string
        displayName:
          description: Display name of the Tenant.
          maxLength: 50
          minLength: 2
          pattern: "^([a-zA-Z])([a-zA-Z0-9\\s-]*)$"
          type: string
        enabled:
          description: This parameter is used to make Tenant active or inactive.
          type: boolean
        metadata:
          description: Metadata associated with the Tenant.
          type: object
        abacConfig:
          $ref: '#/components/schemas/AbacConfigRequest'
      type: object
    TenantCreateRequest:
      allOf:
      - $ref: '#/components/schemas/Tenant'
      required:
      - id
      - name
      - tenantId
    Tenant:
      additionalProperties: false
      example:
        abacConfig:
          headers: "{}"
          isActive: false
          contentType: contentType
          url: url
        metadata: "{}"
        displayName: Alpha Ltd
        name: alpha
        tenantId: alpha
        id: alpha:61f047b4-4ff8-41d6-bbaf-73e7aee92851
        enabled: true
      properties:
        name:
          description: Name of the Tenant.
          example: alpha
          maxLength: 50
          minLength: 2
          pattern: "^[a-zA-Z]+(-[a-zA-Z0-9]+)*$"
          type: string
        tenantId:
          description: tenant id of the tenant
          example: alpha
          maxLength: 16
          minLength: 1
          pattern: "^[a-z][a-z0-9]{1,15}$"
          type: string
        id:
          description: Tenant FPA Tenant UUID having format tenantId:uuid
          example: alpha:61f047b4-4ff8-41d6-bbaf-73e7aee92851
          type: string
        displayName:
          description: Display name of the Tenant.
          example: Alpha Ltd
          maxLength: 50
          minLength: 2
          pattern: "^([a-zA-Z])([a-zA-Z0-9,\\s-]*)$"
          type: string
        metadata:
          description: Metadata associated with the Tenant.
          type: object
        enabled:
          description: whether Tenant is enabled or not.
          type: boolean
        abacConfig:
          $ref: '#/components/schemas/AbacConfigRequest'
      type: object
    GroupResponse:
      example:
        groupId: groupId
        roles:
        - roles
        - roles
        name: name
        description: description
        isActive: true
        users:
        - users
        - users
      properties:
        groupId:
          description: Unique ID for group assigned at the time of creation.
          type: string
        name:
          description: Name of the group. Group name is unique for application.
          type: string
        description:
          maxLength: 50
          minLength: 2
          type: string
        users:
          items:
            type: string
          type: array
        roles:
          items:
            type: string
          type: array
        isActive:
          type: boolean
      type: object
    GroupsResponse:
      items:
        $ref: '#/components/schemas/GroupResponse'
      type: array
    GroupsResponseV2:
      items:
        $ref: '#/components/schemas/GroupsResponseV2_inner'
      type: array
    GroupUpdateRequest:
      additionalProperties: false
      example:
        isDeleted: true
        description: description
        isActive: true
        users:
          userIds:
          - userIds
          - userIds
          membership: true
      minProperties: 1
      properties:
        description:
          maxLength: 50
          type: string
        users:
          $ref: '#/components/schemas/GroupUpdateRequest_users'
        isActive:
          description: "When `isActive` = False, the group will be ignored from updating\
            \ until is `isActive` = True."
          type: boolean
        isDeleted:
          description: "When `isDeleted` = True, the group will be deleted and can't\
            \ be accessed."
          type: boolean
      type: object
    MultipartFileUploadRequest:
      properties:
        file:
          format: binary
          type: string
        callback:
          description: URL to notify the outcome of the request.
          pattern: "https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
      required:
      - callback
      - file
      type: object
    Callback:
      description: URL to notify the outcome of the request.
      pattern: "https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\\
        b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
      type: string
    GroupRolesMappingUpdateRequest:
      additionalProperties: false
      example:
        membership: true
      properties:
        membership:
          default: true
          description: "This is used to add or remove roles to a group. Default: true.\
            \ membership=true => Add specified roles to the group; membership=false\
            \ => remove specified roles from group."
          type: boolean
      type: object
    GroupUsersMappingUpdateRequest:
      additionalProperties: false
      example:
        membership: true
        users:
        - users
        - users
      properties:
        users:
          description: List of user IDs.
          items:
            type: string
          minItems: 1
          pattern: "^([a-zA-Z])([-:a-zA-Z0-9]*)$"
          type: array
        membership:
          default: true
          description: "This is used to add or remove users to a group Membership.\
            \ Default value: true. membership=true => Add specified users to the group\
            \ membership=false => remove specified users from group."
          type: boolean
      required:
      - users
      type: object
    SuccessGroupResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data:
          groupId: groupId
          roles:
          - roles
          - roles
          name: name
          description: description
          isActive: true
          users:
          - users
          - users
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/GroupResponse'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    SuccessGroupsResponse:
      example:
        request:
          method: POST
          queryString: queryString
          body: "{}"
          uri: uri
        data:
        - groupId: groupId
          roles:
          - roles
          - roles
          name: name
          description: description
          isActive: true
          users:
          - users
          - users
        - groupId: groupId
          roles:
          - roles
          - roles
          name: name
          description: description
          isActive: true
          users:
          - users
          - users
        error:
          code: code
          additionalInfo: "{}"
          description: description
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          items:
            $ref: '#/components/schemas/GroupResponse'
          type: array
        request:
          $ref: '#/components/schemas/Request'
      type: object
    SuccessGroupsResponseV2:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/SuccessGroupsResponseV2_data'
        request:
          $ref: '#/components/schemas/Request'
      type: object
    App_allOf:
      properties:
        appId:
          description: Unique ID of the App. Format of ID is platform:app:<appName>
        appType:
          description: Type of app.
          enum:
          - backend
          - mobile
          - web
          - internal
          type: string
        appName:
          description: Name of the app. Starts with alphabet and may contain hypen.
          maxLength: 50
          pattern: "^[a-zA-Z]+(-[a-zA-Z]+)*$"
          type: string
        clientId:
          description: '`clientId` of the app.'
          nullable: false
          type: string
        secretId:
          description: SDS ID where client secret is stored. Secrets are applicable
            for backend and internal apps only.
          nullable: true
          type: string
      required:
      - appId
      - appName
      - appType
      - isActive
      - isPrivateApp
      type: object
      example: null
    AppInfo_allOf:
      properties:
        isDeleted:
          default: false
          type: boolean
      type: object
      example: null
    AppMutableData_allOf:
      properties:
        isDeleted:
          type: boolean
      type: object
      example: null
    AppCreateRequest_clientSecret:
      description: clientSecret of the app
      example:
        encryptedText: encryptedText
        iv: iv
      nullable: false
      properties:
        iv:
          type: string
        encryptedText:
          type: string
      type: object
    AppUpdateRequest_clientSecret:
      description: '`clientSecret` of the app.'
      example:
        encryptedText: encryptedText
        iv: iv
      nullable: false
      properties:
        iv:
          type: string
        encryptedText:
          type: string
      type: object
    RoleResponse_allOf:
      properties:
        canGrantToApps:
          description: Boolean value indicates if the role can be granted to other
            apps or services.
          type: boolean
      type: object
      example: null
    UserChangeLogResponse_data_meta:
      properties:
        totalElements:
          format: int64
          type: integer
      type: object
    UserChangeLogResponse_data:
      properties:
        meta:
          $ref: '#/components/schemas/UserChangeLogResponse_data_meta'
        log:
          items:
            $ref: '#/components/schemas/UserChange'
          type: array
      type: object
    GroupChangeLogResponse_data:
      properties:
        meta:
          $ref: '#/components/schemas/UserChangeLogResponse_data_meta'
        log:
          items:
            $ref: '#/components/schemas/GroupChange'
          type: array
      type: object
    UserChange_allOf:
      properties:
        cdc:
          $ref: '#/components/schemas/UserResponse'
      required:
      - cdc
      type: object
      example: null
    GroupChange_allOf:
      properties:
        cdc:
          $ref: '#/components/schemas/GroupResponse'
      required:
      - cdc
      type: object
      example: null
    SuccessRolesResponseV2_data:
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        roles:
          items:
            $ref: '#/components/schemas/RoleResponse'
          type: array
      type: object
    SuccessResponse_allOf_data:
      properties:
        id:
          description: Unique ID of resource.
          type: string
      type: object
      example: null
    SuccessResponse_allOf:
      properties:
        data:
          $ref: '#/components/schemas/SuccessResponse_allOf_data'
        request:
          $ref: '#/components/schemas/Request'
      type: object
      example: null
    SuccessConnectionResponse_allOf_data:
      properties:
        connectionId:
          description: Unique ID of connection.
          type: string
        connectionName:
          description: Name of connection.
          type: string
        connectionType:
          description: "Type of the connection (Google, Github, etc.)."
          type: string
      type: object
      example: null
    SuccessConnectionResponse_allOf:
      properties:
        data:
          $ref: '#/components/schemas/SuccessConnectionResponse_allOf_data'
        request:
          $ref: '#/components/schemas/Request'
      type: object
      example: null
    SuccessSamlConnectionResponse_allOf_data:
      properties:
        connectionId:
          description: Unique ID of connection.
          type: string
        connectionName:
          description: Name of connection.
          type: string
        displayName:
          description: Display Name of the connection
          type: string
        connectionType:
          description: "Type of the connection (Google, Github, etc.)."
          type: string
        signInEndpoint:
          description: Sign In endpoint of connection
          type: string
        signOutEndpoint:
          description: Sign Out Endpoint of connection
          type: string
        publicKeyCertificate:
          description: The certificate required for saml connection should be of x509Cert
            format
          type: string
        entityId:
          description: The Entity ID that will be used to uniquely identify this SAML
            Service Provider
          type: string
        redirectUri:
          description: The redirect uri to use when configuring the identity provider.
          type: string
        metadataUri:
          description: The URL on which saml connection metadata is present
          type: string
        guiOrder:
          description: GUI order of connection on Login page.
          type: string
      type: object
      example: null
    SuccessSamlConnectionResponse_allOf:
      properties:
        data:
          $ref: '#/components/schemas/SuccessSamlConnectionResponse_allOf_data'
        request:
          $ref: '#/components/schemas/Request'
      type: object
      example: null
    SuccessUsersResponseV2_data:
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        users:
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
      type: object
    AuthReqOtpRequest_mobile:
      description: Mobile object has to be present if mode is SMS.
      example:
        number: number
        countryCode: countryCode
      properties:
        countryCode:
          description: Country code for mobile number.
          maxLength: 4
          minLength: 2
          nullable: false
          type: string
        number:
          description: Mobile number.
          maxLength: 10
          minLength: 4
          nullable: false
          type: string
    SMSSendRequest_req:
      example:
        ip: ip
        user-agent: user-agent
      properties:
        ip:
          type: string
        user-agent:
          type: string
      type: object
    SuccessStatusResponse_allOf_data:
      properties:
        status:
          description: Status message of the operation.
          type: string
      type: object
      example: null
    SuccessStatusResponse_allOf:
      properties:
        data:
          $ref: '#/components/schemas/SuccessStatusResponse_allOf_data'
        request:
          $ref: '#/components/schemas/Request'
      type: object
      example: null
    SuccessAbacResponse_allOf:
      properties:
        data:
          $ref: '#/components/schemas/AbacConfigRequest'
        request:
          $ref: '#/components/schemas/Request'
      type: object
      example: null
    SuccessVerifyOtpResponse_data:
      example:
        userId: userId
      properties:
        userId:
          description: UserId of the user which is authenticated using email or mobile
            Number.
          type: string
      type: object
    SuccessAuthorizationResponse_data:
      example:
        expiresIn: 0.8008281904610115
        accessToken: accessToken
        tokenType: Bearer
      properties:
        accessToken:
          description: Generated access token.
          type: string
        tokenType:
          default: Bearer
          type: string
        expiresIn:
          description: Expiry time in seconds.
          type: number
      type: object
    PostErrorResponse_allOf:
      properties:
        request:
          $ref: '#/components/schemas/Request'
      type: object
      example: null
    SuccessIdentityResponse_allOf_data:
      properties:
        loginUrl:
          description: Login URL for the identity login flows.
          type: string
      type: object
      example: null
    SuccessIdentityResponse_allOf:
      properties:
        data:
          $ref: '#/components/schemas/SuccessIdentityResponse_allOf_data'
        request:
          $ref: '#/components/schemas/Request'
      type: object
      example: null
    SuccessUserInfoResponse_allOf:
      properties:
        data:
          $ref: '#/components/schemas/UserInfo'
        request:
          $ref: '#/components/schemas/Request'
      type: object
      example: null
    GroupsResponseV2_inner:
      properties:
        groupId:
          description: Unique id for group assigned at the time of creation.
          type: string
        name:
          description: Name of the group. Group name is unique for application.
          type: string
        description:
          maxLength: 50
          minLength: 2
          type: string
        roles:
          items:
            type: string
          type: array
        isActive:
          type: boolean
      type: object
    GroupUpdateRequest_users:
      example:
        userIds:
        - userIds
        - userIds
        membership: true
      properties:
        userIds:
          description: list of user IDs.
          items:
            type: string
          type: array
        membership:
          description: This is used for add/remove users membership of a group
          type: boolean
      type: object
    SuccessGroupsResponseV2_data:
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        groups:
          items:
            $ref: '#/components/schemas/GroupsResponseV2_inner'
          type: array
      type: object

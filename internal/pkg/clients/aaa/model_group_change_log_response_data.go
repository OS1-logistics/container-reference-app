/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaa_client

import (
	"encoding/json"
)

// GroupChangeLogResponseData struct for GroupChangeLogResponseData
type GroupChangeLogResponseData struct {
	Meta *UserChangeLogResponseDataMeta `json:"meta,omitempty"`
	Log []GroupChange `json:"log,omitempty"`
}

// NewGroupChangeLogResponseData instantiates a new GroupChangeLogResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupChangeLogResponseData() *GroupChangeLogResponseData {
	this := GroupChangeLogResponseData{}
	return &this
}

// NewGroupChangeLogResponseDataWithDefaults instantiates a new GroupChangeLogResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupChangeLogResponseDataWithDefaults() *GroupChangeLogResponseData {
	this := GroupChangeLogResponseData{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *GroupChangeLogResponseData) GetMeta() UserChangeLogResponseDataMeta {
	if o == nil || o.Meta == nil {
		var ret UserChangeLogResponseDataMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupChangeLogResponseData) GetMetaOk() (*UserChangeLogResponseDataMeta, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *GroupChangeLogResponseData) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given UserChangeLogResponseDataMeta and assigns it to the Meta field.
func (o *GroupChangeLogResponseData) SetMeta(v UserChangeLogResponseDataMeta) {
	o.Meta = &v
}

// GetLog returns the Log field value if set, zero value otherwise.
func (o *GroupChangeLogResponseData) GetLog() []GroupChange {
	if o == nil || o.Log == nil {
		var ret []GroupChange
		return ret
	}
	return o.Log
}

// GetLogOk returns a tuple with the Log field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupChangeLogResponseData) GetLogOk() ([]GroupChange, bool) {
	if o == nil || o.Log == nil {
		return nil, false
	}
	return o.Log, true
}

// HasLog returns a boolean if a field has been set.
func (o *GroupChangeLogResponseData) HasLog() bool {
	if o != nil && o.Log != nil {
		return true
	}

	return false
}

// SetLog gets a reference to the given []GroupChange and assigns it to the Log field.
func (o *GroupChangeLogResponseData) SetLog(v []GroupChange) {
	o.Log = v
}

func (o GroupChangeLogResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	if o.Log != nil {
		toSerialize["log"] = o.Log
	}
	return json.Marshal(toSerialize)
}

type NullableGroupChangeLogResponseData struct {
	value *GroupChangeLogResponseData
	isSet bool
}

func (v NullableGroupChangeLogResponseData) Get() *GroupChangeLogResponseData {
	return v.value
}

func (v *NullableGroupChangeLogResponseData) Set(val *GroupChangeLogResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupChangeLogResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupChangeLogResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupChangeLogResponseData(val *GroupChangeLogResponseData) *NullableGroupChangeLogResponseData {
	return &NullableGroupChangeLogResponseData{value: val, isSet: true}
}

func (v NullableGroupChangeLogResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupChangeLogResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



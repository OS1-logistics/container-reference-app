/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package containerdomain

import (
	"encoding/json"
)

// CompletedStateAllOf struct for CompletedStateAllOf
type CompletedStateAllOf struct {
	// terminal-state
	TerminalStates []string `json:"terminalStates,omitempty"`
}

// NewCompletedStateAllOf instantiates a new CompletedStateAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompletedStateAllOf() *CompletedStateAllOf {
	this := CompletedStateAllOf{}
	return &this
}

// NewCompletedStateAllOfWithDefaults instantiates a new CompletedStateAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompletedStateAllOfWithDefaults() *CompletedStateAllOf {
	this := CompletedStateAllOf{}
	return &this
}

// GetTerminalStates returns the TerminalStates field value if set, zero value otherwise.
func (o *CompletedStateAllOf) GetTerminalStates() []string {
	if o == nil || isNil(o.TerminalStates) {
		var ret []string
		return ret
	}
	return o.TerminalStates
}

// GetTerminalStatesOk returns a tuple with the TerminalStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompletedStateAllOf) GetTerminalStatesOk() ([]string, bool) {
	if o == nil || isNil(o.TerminalStates) {
    return nil, false
	}
	return o.TerminalStates, true
}

// HasTerminalStates returns a boolean if a field has been set.
func (o *CompletedStateAllOf) HasTerminalStates() bool {
	if o != nil && !isNil(o.TerminalStates) {
		return true
	}

	return false
}

// SetTerminalStates gets a reference to the given []string and assigns it to the TerminalStates field.
func (o *CompletedStateAllOf) SetTerminalStates(v []string) {
	o.TerminalStates = v
}

func (o CompletedStateAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.TerminalStates) {
		toSerialize["terminalStates"] = o.TerminalStates
	}
	return json.Marshal(toSerialize)
}

type NullableCompletedStateAllOf struct {
	value *CompletedStateAllOf
	isSet bool
}

func (v NullableCompletedStateAllOf) Get() *CompletedStateAllOf {
	return v.value
}

func (v *NullableCompletedStateAllOf) Set(val *CompletedStateAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCompletedStateAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCompletedStateAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompletedStateAllOf(val *CompletedStateAllOf) *NullableCompletedStateAllOf {
	return &NullableCompletedStateAllOf{value: val, isSet: true}
}

func (v NullableCompletedStateAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompletedStateAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



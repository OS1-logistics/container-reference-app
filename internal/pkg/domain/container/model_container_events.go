/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package containerdomain

import (
	"encoding/json"
)

// ContainerEvents struct for ContainerEvents
type ContainerEvents struct {
	ContainerId []string `json:"containerId,omitempty"`
}

// NewContainerEvents instantiates a new ContainerEvents object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerEvents() *ContainerEvents {
	this := ContainerEvents{}
	return &this
}

// NewContainerEventsWithDefaults instantiates a new ContainerEvents object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerEventsWithDefaults() *ContainerEvents {
	this := ContainerEvents{}
	return &this
}

// GetContainerId returns the ContainerId field value if set, zero value otherwise.
func (o *ContainerEvents) GetContainerId() []string {
	if o == nil || isNil(o.ContainerId) {
		var ret []string
		return ret
	}
	return o.ContainerId
}

// GetContainerIdOk returns a tuple with the ContainerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerEvents) GetContainerIdOk() ([]string, bool) {
	if o == nil || isNil(o.ContainerId) {
    return nil, false
	}
	return o.ContainerId, true
}

// HasContainerId returns a boolean if a field has been set.
func (o *ContainerEvents) HasContainerId() bool {
	if o != nil && !isNil(o.ContainerId) {
		return true
	}

	return false
}

// SetContainerId gets a reference to the given []string and assigns it to the ContainerId field.
func (o *ContainerEvents) SetContainerId(v []string) {
	o.ContainerId = v
}

func (o ContainerEvents) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ContainerId) {
		toSerialize["containerId"] = o.ContainerId
	}
	return json.Marshal(toSerialize)
}

type NullableContainerEvents struct {
	value *ContainerEvents
	isSet bool
}

func (v NullableContainerEvents) Get() *ContainerEvents {
	return v.value
}

func (v *NullableContainerEvents) Set(val *ContainerEvents) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerEvents) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerEvents) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerEvents(val *ContainerEvents) *NullableContainerEvents {
	return &NullableContainerEvents{value: val, isSet: true}
}

func (v NullableContainerEvents) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerEvents) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



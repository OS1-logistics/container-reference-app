/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package containerdomain

import (
	"encoding/json"
)

// ParentIdRequest struct for ParentIdRequest
type ParentIdRequest struct {
	Callback *map[string]interface{} `json:"callback,omitempty"`
	// Field to represent container ID of the parent container. During the containerization process, this value is assigned to represent which container contains this container.
	ParentId string `json:"parentId"`
	// Field to represent action to be performed on the container.
	Action string `json:"action"`
}

// NewParentIdRequest instantiates a new ParentIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParentIdRequest(parentId string, action string) *ParentIdRequest {
	this := ParentIdRequest{}
	this.ParentId = parentId
	this.Action = action
	return &this
}

// NewParentIdRequestWithDefaults instantiates a new ParentIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParentIdRequestWithDefaults() *ParentIdRequest {
	this := ParentIdRequest{}
	return &this
}

// GetCallback returns the Callback field value if set, zero value otherwise.
func (o *ParentIdRequest) GetCallback() map[string]interface{} {
	if o == nil || isNil(o.Callback) {
		var ret map[string]interface{}
		return ret
	}
	return *o.Callback
}

// GetCallbackOk returns a tuple with the Callback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParentIdRequest) GetCallbackOk() (*map[string]interface{}, bool) {
	if o == nil || isNil(o.Callback) {
    return nil, false
	}
	return o.Callback, true
}

// HasCallback returns a boolean if a field has been set.
func (o *ParentIdRequest) HasCallback() bool {
	if o != nil && !isNil(o.Callback) {
		return true
	}

	return false
}

// SetCallback gets a reference to the given map[string]interface{} and assigns it to the Callback field.
func (o *ParentIdRequest) SetCallback(v map[string]interface{}) {
	o.Callback = &v
}

// GetParentId returns the ParentId field value
func (o *ParentIdRequest) GetParentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value
// and a boolean to check if the value has been set.
func (o *ParentIdRequest) GetParentIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ParentId, true
}

// SetParentId sets field value
func (o *ParentIdRequest) SetParentId(v string) {
	o.ParentId = v
}

// GetAction returns the Action field value
func (o *ParentIdRequest) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *ParentIdRequest) GetActionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *ParentIdRequest) SetAction(v string) {
	o.Action = v
}

func (o ParentIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Callback) {
		toSerialize["callback"] = o.Callback
	}
	if true {
		toSerialize["parentId"] = o.ParentId
	}
	if true {
		toSerialize["action"] = o.Action
	}
	return json.Marshal(toSerialize)
}

type NullableParentIdRequest struct {
	value *ParentIdRequest
	isSet bool
}

func (v NullableParentIdRequest) Get() *ParentIdRequest {
	return v.value
}

func (v *NullableParentIdRequest) Set(val *ParentIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableParentIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableParentIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParentIdRequest(val *ParentIdRequest) *NullableParentIdRequest {
	return &NullableParentIdRequest{value: val, isSet: true}
}

func (v NullableParentIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParentIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



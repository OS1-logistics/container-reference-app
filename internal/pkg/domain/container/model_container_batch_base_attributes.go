/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package containerdomain

import (
	"encoding/json"
)

// ContainerBatchBaseAttributes Base attributes that defines a container. This attributes are set on container creation and cannot be updated.
type ContainerBatchBaseAttributes struct {
	// Reference Id received for each container create request
	RefID string `json:"refID"`
}

// NewContainerBatchBaseAttributes instantiates a new ContainerBatchBaseAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerBatchBaseAttributes(refID string) *ContainerBatchBaseAttributes {
	this := ContainerBatchBaseAttributes{}
	this.RefID = refID
	return &this
}

// NewContainerBatchBaseAttributesWithDefaults instantiates a new ContainerBatchBaseAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerBatchBaseAttributesWithDefaults() *ContainerBatchBaseAttributes {
	this := ContainerBatchBaseAttributes{}
	return &this
}

// GetRefID returns the RefID field value
func (o *ContainerBatchBaseAttributes) GetRefID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefID
}

// GetRefIDOk returns a tuple with the RefID field value
// and a boolean to check if the value has been set.
func (o *ContainerBatchBaseAttributes) GetRefIDOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.RefID, true
}

// SetRefID sets field value
func (o *ContainerBatchBaseAttributes) SetRefID(v string) {
	o.RefID = v
}

func (o ContainerBatchBaseAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["refID"] = o.RefID
	}
	return json.Marshal(toSerialize)
}

type NullableContainerBatchBaseAttributes struct {
	value *ContainerBatchBaseAttributes
	isSet bool
}

func (v NullableContainerBatchBaseAttributes) Get() *ContainerBatchBaseAttributes {
	return v.value
}

func (v *NullableContainerBatchBaseAttributes) Set(val *ContainerBatchBaseAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerBatchBaseAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerBatchBaseAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerBatchBaseAttributes(val *ContainerBatchBaseAttributes) *NullableContainerBatchBaseAttributes {
	return &NullableContainerBatchBaseAttributes{value: val, isSet: true}
}

func (v NullableContainerBatchBaseAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerBatchBaseAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



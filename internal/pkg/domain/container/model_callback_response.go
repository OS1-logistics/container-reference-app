/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package containerdomain

import (
	"encoding/json"
)

// CallbackResponse struct for CallbackResponse
type CallbackResponse struct {
	// Unique ID.
	Id string `json:"id"`
	Status string `json:"status"`
	Reason *string `json:"reason,omitempty"`
}

// NewCallbackResponse instantiates a new CallbackResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallbackResponse(id string, status string) *CallbackResponse {
	this := CallbackResponse{}
	this.Id = id
	this.Status = status
	return &this
}

// NewCallbackResponseWithDefaults instantiates a new CallbackResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallbackResponseWithDefaults() *CallbackResponse {
	this := CallbackResponse{}
	return &this
}

// GetId returns the Id field value
func (o *CallbackResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CallbackResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CallbackResponse) SetId(v string) {
	o.Id = v
}

// GetStatus returns the Status field value
func (o *CallbackResponse) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CallbackResponse) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CallbackResponse) SetStatus(v string) {
	o.Status = v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *CallbackResponse) GetReason() string {
	if o == nil || o.Reason == nil {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackResponse) GetReasonOk() (*string, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *CallbackResponse) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *CallbackResponse) SetReason(v string) {
	o.Reason = &v
}

func (o CallbackResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.Reason != nil {
		toSerialize["reason"] = o.Reason
	}
	return json.Marshal(toSerialize)
}

type NullableCallbackResponse struct {
	value *CallbackResponse
	isSet bool
}

func (v NullableCallbackResponse) Get() *CallbackResponse {
	return v.value
}

func (v *NullableCallbackResponse) Set(val *CallbackResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCallbackResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCallbackResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallbackResponse(val *CallbackResponse) *NullableCallbackResponse {
	return &NullableCallbackResponse{value: val, isSet: true}
}

func (v NullableCallbackResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallbackResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



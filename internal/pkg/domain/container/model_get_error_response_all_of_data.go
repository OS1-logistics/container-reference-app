/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package containerdomain

import (
	"encoding/json"
)

// GetErrorResponseAllOfData struct for GetErrorResponseAllOfData
type GetErrorResponseAllOfData struct {
	Id *string `json:"id,omitempty"`
}

// NewGetErrorResponseAllOfData instantiates a new GetErrorResponseAllOfData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetErrorResponseAllOfData() *GetErrorResponseAllOfData {
	this := GetErrorResponseAllOfData{}
	return &this
}

// NewGetErrorResponseAllOfDataWithDefaults instantiates a new GetErrorResponseAllOfData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetErrorResponseAllOfDataWithDefaults() *GetErrorResponseAllOfData {
	this := GetErrorResponseAllOfData{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetErrorResponseAllOfData) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetErrorResponseAllOfData) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetErrorResponseAllOfData) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetErrorResponseAllOfData) SetId(v string) {
	o.Id = &v
}

func (o GetErrorResponseAllOfData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableGetErrorResponseAllOfData struct {
	value *GetErrorResponseAllOfData
	isSet bool
}

func (v NullableGetErrorResponseAllOfData) Get() *GetErrorResponseAllOfData {
	return v.value
}

func (v *NullableGetErrorResponseAllOfData) Set(val *GetErrorResponseAllOfData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetErrorResponseAllOfData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetErrorResponseAllOfData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetErrorResponseAllOfData(val *GetErrorResponseAllOfData) *NullableGetErrorResponseAllOfData {
	return &NullableGetErrorResponseAllOfData{value: val, isSet: true}
}

func (v NullableGetErrorResponseAllOfData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetErrorResponseAllOfData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



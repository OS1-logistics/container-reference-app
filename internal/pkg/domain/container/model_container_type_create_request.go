/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package containerdomain

import (
	"encoding/json"
)

// ContainerTypeCreateRequest Create new container type
type ContainerTypeCreateRequest struct {
	Callback *Callback `json:"callback,omitempty"`
	// Unique code of an entity.
	EntityCode *string `json:"entityCode,omitempty"`
	// A unique name to represent type of a container.
	Name string `json:"name"`
	// Defines whether this container-type will have actual physical items or not. Such type of containers is termed as leaf container.
	IsLeaf *bool `json:"isLeaf,omitempty"`
	AllowedParent *ContainerTypeAllowedParent `json:"allowedParent,omitempty"`
}

// NewContainerTypeCreateRequest instantiates a new ContainerTypeCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerTypeCreateRequest(name string) *ContainerTypeCreateRequest {
	this := ContainerTypeCreateRequest{}
	this.Name = name
	var isLeaf bool = false
	this.IsLeaf = &isLeaf
	return &this
}

// NewContainerTypeCreateRequestWithDefaults instantiates a new ContainerTypeCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerTypeCreateRequestWithDefaults() *ContainerTypeCreateRequest {
	this := ContainerTypeCreateRequest{}
	var isLeaf bool = false
	this.IsLeaf = &isLeaf
	return &this
}

// GetCallback returns the Callback field value if set, zero value otherwise.
func (o *ContainerTypeCreateRequest) GetCallback() Callback {
	if o == nil || isNil(o.Callback) {
		var ret Callback
		return ret
	}
	return *o.Callback
}

// GetCallbackOk returns a tuple with the Callback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTypeCreateRequest) GetCallbackOk() (*Callback, bool) {
	if o == nil || isNil(o.Callback) {
    return nil, false
	}
	return o.Callback, true
}

// HasCallback returns a boolean if a field has been set.
func (o *ContainerTypeCreateRequest) HasCallback() bool {
	if o != nil && !isNil(o.Callback) {
		return true
	}

	return false
}

// SetCallback gets a reference to the given Callback and assigns it to the Callback field.
func (o *ContainerTypeCreateRequest) SetCallback(v Callback) {
	o.Callback = &v
}

// GetEntityCode returns the EntityCode field value if set, zero value otherwise.
func (o *ContainerTypeCreateRequest) GetEntityCode() string {
	if o == nil || isNil(o.EntityCode) {
		var ret string
		return ret
	}
	return *o.EntityCode
}

// GetEntityCodeOk returns a tuple with the EntityCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTypeCreateRequest) GetEntityCodeOk() (*string, bool) {
	if o == nil || isNil(o.EntityCode) {
    return nil, false
	}
	return o.EntityCode, true
}

// HasEntityCode returns a boolean if a field has been set.
func (o *ContainerTypeCreateRequest) HasEntityCode() bool {
	if o != nil && !isNil(o.EntityCode) {
		return true
	}

	return false
}

// SetEntityCode gets a reference to the given string and assigns it to the EntityCode field.
func (o *ContainerTypeCreateRequest) SetEntityCode(v string) {
	o.EntityCode = &v
}

// GetName returns the Name field value
func (o *ContainerTypeCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ContainerTypeCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ContainerTypeCreateRequest) SetName(v string) {
	o.Name = v
}

// GetIsLeaf returns the IsLeaf field value if set, zero value otherwise.
func (o *ContainerTypeCreateRequest) GetIsLeaf() bool {
	if o == nil || isNil(o.IsLeaf) {
		var ret bool
		return ret
	}
	return *o.IsLeaf
}

// GetIsLeafOk returns a tuple with the IsLeaf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTypeCreateRequest) GetIsLeafOk() (*bool, bool) {
	if o == nil || isNil(o.IsLeaf) {
    return nil, false
	}
	return o.IsLeaf, true
}

// HasIsLeaf returns a boolean if a field has been set.
func (o *ContainerTypeCreateRequest) HasIsLeaf() bool {
	if o != nil && !isNil(o.IsLeaf) {
		return true
	}

	return false
}

// SetIsLeaf gets a reference to the given bool and assigns it to the IsLeaf field.
func (o *ContainerTypeCreateRequest) SetIsLeaf(v bool) {
	o.IsLeaf = &v
}

// GetAllowedParent returns the AllowedParent field value if set, zero value otherwise.
func (o *ContainerTypeCreateRequest) GetAllowedParent() ContainerTypeAllowedParent {
	if o == nil || isNil(o.AllowedParent) {
		var ret ContainerTypeAllowedParent
		return ret
	}
	return *o.AllowedParent
}

// GetAllowedParentOk returns a tuple with the AllowedParent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTypeCreateRequest) GetAllowedParentOk() (*ContainerTypeAllowedParent, bool) {
	if o == nil || isNil(o.AllowedParent) {
    return nil, false
	}
	return o.AllowedParent, true
}

// HasAllowedParent returns a boolean if a field has been set.
func (o *ContainerTypeCreateRequest) HasAllowedParent() bool {
	if o != nil && !isNil(o.AllowedParent) {
		return true
	}

	return false
}

// SetAllowedParent gets a reference to the given ContainerTypeAllowedParent and assigns it to the AllowedParent field.
func (o *ContainerTypeCreateRequest) SetAllowedParent(v ContainerTypeAllowedParent) {
	o.AllowedParent = &v
}

func (o ContainerTypeCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Callback) {
		toSerialize["callback"] = o.Callback
	}
	if !isNil(o.EntityCode) {
		toSerialize["entityCode"] = o.EntityCode
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.IsLeaf) {
		toSerialize["isLeaf"] = o.IsLeaf
	}
	if !isNil(o.AllowedParent) {
		toSerialize["allowedParent"] = o.AllowedParent
	}
	return json.Marshal(toSerialize)
}

type NullableContainerTypeCreateRequest struct {
	value *ContainerTypeCreateRequest
	isSet bool
}

func (v NullableContainerTypeCreateRequest) Get() *ContainerTypeCreateRequest {
	return v.value
}

func (v *NullableContainerTypeCreateRequest) Set(val *ContainerTypeCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerTypeCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerTypeCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerTypeCreateRequest(val *ContainerTypeCreateRequest) *NullableContainerTypeCreateRequest {
	return &NullableContainerTypeCreateRequest{value: val, isSet: true}
}

func (v NullableContainerTypeCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerTypeCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package containerdomain

import (
	"encoding/json"
)

// ContainerBaseChangeLogResponse struct for ContainerBaseChangeLogResponse
type ContainerBaseChangeLogResponse struct {
	Action ChangeAction `json:"action"`
	ActionTime int64 `json:"actionTime"`
	ActionBy ActionBy `json:"actionBy"`
	Cdc ContainerCDC `json:"cdc"`
}

// NewContainerBaseChangeLogResponse instantiates a new ContainerBaseChangeLogResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerBaseChangeLogResponse(action ChangeAction, actionTime int64, actionBy ActionBy, cdc ContainerCDC) *ContainerBaseChangeLogResponse {
	this := ContainerBaseChangeLogResponse{}
	this.Action = action
	this.ActionTime = actionTime
	this.ActionBy = actionBy
	this.Cdc = cdc
	return &this
}

// NewContainerBaseChangeLogResponseWithDefaults instantiates a new ContainerBaseChangeLogResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerBaseChangeLogResponseWithDefaults() *ContainerBaseChangeLogResponse {
	this := ContainerBaseChangeLogResponse{}
	return &this
}

// GetAction returns the Action field value
func (o *ContainerBaseChangeLogResponse) GetAction() ChangeAction {
	if o == nil {
		var ret ChangeAction
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *ContainerBaseChangeLogResponse) GetActionOk() (*ChangeAction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *ContainerBaseChangeLogResponse) SetAction(v ChangeAction) {
	o.Action = v
}

// GetActionTime returns the ActionTime field value
func (o *ContainerBaseChangeLogResponse) GetActionTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ActionTime
}

// GetActionTimeOk returns a tuple with the ActionTime field value
// and a boolean to check if the value has been set.
func (o *ContainerBaseChangeLogResponse) GetActionTimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActionTime, true
}

// SetActionTime sets field value
func (o *ContainerBaseChangeLogResponse) SetActionTime(v int64) {
	o.ActionTime = v
}

// GetActionBy returns the ActionBy field value
func (o *ContainerBaseChangeLogResponse) GetActionBy() ActionBy {
	if o == nil {
		var ret ActionBy
		return ret
	}

	return o.ActionBy
}

// GetActionByOk returns a tuple with the ActionBy field value
// and a boolean to check if the value has been set.
func (o *ContainerBaseChangeLogResponse) GetActionByOk() (*ActionBy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActionBy, true
}

// SetActionBy sets field value
func (o *ContainerBaseChangeLogResponse) SetActionBy(v ActionBy) {
	o.ActionBy = v
}

// GetCdc returns the Cdc field value
func (o *ContainerBaseChangeLogResponse) GetCdc() ContainerCDC {
	if o == nil {
		var ret ContainerCDC
		return ret
	}

	return o.Cdc
}

// GetCdcOk returns a tuple with the Cdc field value
// and a boolean to check if the value has been set.
func (o *ContainerBaseChangeLogResponse) GetCdcOk() (*ContainerCDC, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cdc, true
}

// SetCdc sets field value
func (o *ContainerBaseChangeLogResponse) SetCdc(v ContainerCDC) {
	o.Cdc = v
}

func (o ContainerBaseChangeLogResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["action"] = o.Action
	}
	if true {
		toSerialize["actionTime"] = o.ActionTime
	}
	if true {
		toSerialize["actionBy"] = o.ActionBy
	}
	if true {
		toSerialize["cdc"] = o.Cdc
	}
	return json.Marshal(toSerialize)
}

type NullableContainerBaseChangeLogResponse struct {
	value *ContainerBaseChangeLogResponse
	isSet bool
}

func (v NullableContainerBaseChangeLogResponse) Get() *ContainerBaseChangeLogResponse {
	return v.value
}

func (v *NullableContainerBaseChangeLogResponse) Set(val *ContainerBaseChangeLogResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerBaseChangeLogResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerBaseChangeLogResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerBaseChangeLogResponse(val *ContainerBaseChangeLogResponse) *NullableContainerBaseChangeLogResponse {
	return &NullableContainerBaseChangeLogResponse{value: val, isSet: true}
}

func (v NullableContainerBaseChangeLogResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerBaseChangeLogResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



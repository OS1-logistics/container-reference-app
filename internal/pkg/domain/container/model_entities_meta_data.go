/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package containerdomain

import (
	"encoding/json"
)

// EntitiesMetaData struct for EntitiesMetaData
type EntitiesMetaData struct {
	EntityCode *string `json:"entityCode,omitempty"`
	Description *string `json:"description,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewEntitiesMetaData instantiates a new EntitiesMetaData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitiesMetaData() *EntitiesMetaData {
	this := EntitiesMetaData{}
	return &this
}

// NewEntitiesMetaDataWithDefaults instantiates a new EntitiesMetaData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitiesMetaDataWithDefaults() *EntitiesMetaData {
	this := EntitiesMetaData{}
	return &this
}

// GetEntityCode returns the EntityCode field value if set, zero value otherwise.
func (o *EntitiesMetaData) GetEntityCode() string {
	if o == nil || o.EntityCode == nil {
		var ret string
		return ret
	}
	return *o.EntityCode
}

// GetEntityCodeOk returns a tuple with the EntityCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitiesMetaData) GetEntityCodeOk() (*string, bool) {
	if o == nil || o.EntityCode == nil {
		return nil, false
	}
	return o.EntityCode, true
}

// HasEntityCode returns a boolean if a field has been set.
func (o *EntitiesMetaData) HasEntityCode() bool {
	if o != nil && o.EntityCode != nil {
		return true
	}

	return false
}

// SetEntityCode gets a reference to the given string and assigns it to the EntityCode field.
func (o *EntitiesMetaData) SetEntityCode(v string) {
	o.EntityCode = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *EntitiesMetaData) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitiesMetaData) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *EntitiesMetaData) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *EntitiesMetaData) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EntitiesMetaData) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitiesMetaData) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EntitiesMetaData) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EntitiesMetaData) SetName(v string) {
	o.Name = &v
}

func (o EntitiesMetaData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EntityCode != nil {
		toSerialize["entityCode"] = o.EntityCode
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableEntitiesMetaData struct {
	value *EntitiesMetaData
	isSet bool
}

func (v NullableEntitiesMetaData) Get() *EntitiesMetaData {
	return v.value
}

func (v *NullableEntitiesMetaData) Set(val *EntitiesMetaData) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitiesMetaData) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitiesMetaData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitiesMetaData(val *EntitiesMetaData) *NullableEntitiesMetaData {
	return &NullableEntitiesMetaData{value: val, isSet: true}
}

func (v NullableEntitiesMetaData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitiesMetaData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package containerdomain

import (
	"encoding/json"
)

// ContainerTypeUpdateRequest Update container type configuration
type ContainerTypeUpdateRequest struct {
	AllowedParent ContainerTypeAllowedParent `json:"allowedParent"`
	Callback *ContainerTypeUpdateRequestCallback `json:"callback,omitempty"`
}

// NewContainerTypeUpdateRequest instantiates a new ContainerTypeUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerTypeUpdateRequest(allowedParent ContainerTypeAllowedParent) *ContainerTypeUpdateRequest {
	this := ContainerTypeUpdateRequest{}
	this.AllowedParent = allowedParent
	return &this
}

// NewContainerTypeUpdateRequestWithDefaults instantiates a new ContainerTypeUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerTypeUpdateRequestWithDefaults() *ContainerTypeUpdateRequest {
	this := ContainerTypeUpdateRequest{}
	return &this
}

// GetAllowedParent returns the AllowedParent field value
func (o *ContainerTypeUpdateRequest) GetAllowedParent() ContainerTypeAllowedParent {
	if o == nil {
		var ret ContainerTypeAllowedParent
		return ret
	}

	return o.AllowedParent
}

// GetAllowedParentOk returns a tuple with the AllowedParent field value
// and a boolean to check if the value has been set.
func (o *ContainerTypeUpdateRequest) GetAllowedParentOk() (*ContainerTypeAllowedParent, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AllowedParent, true
}

// SetAllowedParent sets field value
func (o *ContainerTypeUpdateRequest) SetAllowedParent(v ContainerTypeAllowedParent) {
	o.AllowedParent = v
}

// GetCallback returns the Callback field value if set, zero value otherwise.
func (o *ContainerTypeUpdateRequest) GetCallback() ContainerTypeUpdateRequestCallback {
	if o == nil || isNil(o.Callback) {
		var ret ContainerTypeUpdateRequestCallback
		return ret
	}
	return *o.Callback
}

// GetCallbackOk returns a tuple with the Callback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTypeUpdateRequest) GetCallbackOk() (*ContainerTypeUpdateRequestCallback, bool) {
	if o == nil || isNil(o.Callback) {
    return nil, false
	}
	return o.Callback, true
}

// HasCallback returns a boolean if a field has been set.
func (o *ContainerTypeUpdateRequest) HasCallback() bool {
	if o != nil && !isNil(o.Callback) {
		return true
	}

	return false
}

// SetCallback gets a reference to the given ContainerTypeUpdateRequestCallback and assigns it to the Callback field.
func (o *ContainerTypeUpdateRequest) SetCallback(v ContainerTypeUpdateRequestCallback) {
	o.Callback = &v
}

func (o ContainerTypeUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["allowedParent"] = o.AllowedParent
	}
	if !isNil(o.Callback) {
		toSerialize["callback"] = o.Callback
	}
	return json.Marshal(toSerialize)
}

type NullableContainerTypeUpdateRequest struct {
	value *ContainerTypeUpdateRequest
	isSet bool
}

func (v NullableContainerTypeUpdateRequest) Get() *ContainerTypeUpdateRequest {
	return v.value
}

func (v *NullableContainerTypeUpdateRequest) Set(val *ContainerTypeUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerTypeUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerTypeUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerTypeUpdateRequest(val *ContainerTypeUpdateRequest) *NullableContainerTypeUpdateRequest {
	return &NullableContainerTypeUpdateRequest{value: val, isSet: true}
}

func (v NullableContainerTypeUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerTypeUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



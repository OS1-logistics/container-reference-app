/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package containerdomain

import (
	"encoding/json"
)

// AttributeValidation Specifies all the validations to be performed on an attribute, when a container of this type is created/updated.
type AttributeValidation struct {
	Range *Range `json:"range,omitempty"`
	// Field to specify the regex pattern that the value of an attribute MUST match.this validation alllowed only for string type of attributes.
	Regex *string `json:"regex,omitempty"`
	// Field to specify if the value for the attribute is mandatory or not. If TRUE, the value MUST be provided.
	Required *bool `json:"required,omitempty"`
}

// NewAttributeValidation instantiates a new AttributeValidation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributeValidation() *AttributeValidation {
	this := AttributeValidation{}
	var required bool = false
	this.Required = &required
	return &this
}

// NewAttributeValidationWithDefaults instantiates a new AttributeValidation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributeValidationWithDefaults() *AttributeValidation {
	this := AttributeValidation{}
	var required bool = false
	this.Required = &required
	return &this
}

// GetRange returns the Range field value if set, zero value otherwise.
func (o *AttributeValidation) GetRange() Range {
	if o == nil || o.Range == nil {
		var ret Range
		return ret
	}
	return *o.Range
}

// GetRangeOk returns a tuple with the Range field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValidation) GetRangeOk() (*Range, bool) {
	if o == nil || o.Range == nil {
		return nil, false
	}
	return o.Range, true
}

// HasRange returns a boolean if a field has been set.
func (o *AttributeValidation) HasRange() bool {
	if o != nil && o.Range != nil {
		return true
	}

	return false
}

// SetRange gets a reference to the given Range and assigns it to the Range field.
func (o *AttributeValidation) SetRange(v Range) {
	o.Range = &v
}

// GetRegex returns the Regex field value if set, zero value otherwise.
func (o *AttributeValidation) GetRegex() string {
	if o == nil || o.Regex == nil {
		var ret string
		return ret
	}
	return *o.Regex
}

// GetRegexOk returns a tuple with the Regex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValidation) GetRegexOk() (*string, bool) {
	if o == nil || o.Regex == nil {
		return nil, false
	}
	return o.Regex, true
}

// HasRegex returns a boolean if a field has been set.
func (o *AttributeValidation) HasRegex() bool {
	if o != nil && o.Regex != nil {
		return true
	}

	return false
}

// SetRegex gets a reference to the given string and assigns it to the Regex field.
func (o *AttributeValidation) SetRegex(v string) {
	o.Regex = &v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *AttributeValidation) GetRequired() bool {
	if o == nil || o.Required == nil {
		var ret bool
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValidation) GetRequiredOk() (*bool, bool) {
	if o == nil || o.Required == nil {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *AttributeValidation) HasRequired() bool {
	if o != nil && o.Required != nil {
		return true
	}

	return false
}

// SetRequired gets a reference to the given bool and assigns it to the Required field.
func (o *AttributeValidation) SetRequired(v bool) {
	o.Required = &v
}

func (o AttributeValidation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Range != nil {
		toSerialize["range"] = o.Range
	}
	if o.Regex != nil {
		toSerialize["regex"] = o.Regex
	}
	if o.Required != nil {
		toSerialize["required"] = o.Required
	}
	return json.Marshal(toSerialize)
}

type NullableAttributeValidation struct {
	value *AttributeValidation
	isSet bool
}

func (v NullableAttributeValidation) Get() *AttributeValidation {
	return v.value
}

func (v *NullableAttributeValidation) Set(val *AttributeValidation) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributeValidation) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributeValidation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributeValidation(val *AttributeValidation) *NullableAttributeValidation {
	return &NullableAttributeValidation{value: val, isSet: true}
}

func (v NullableAttributeValidation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributeValidation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package containerdomain

import (
	"encoding/json"
)

// ContainerStateCallbackResponseData struct for ContainerStateCallbackResponseData
type ContainerStateCallbackResponseData struct {
	Id *string `json:"id,omitempty"`
	// Represents state of the container.The value will of the format <state>:<substate>
	State *string `json:"state,omitempty"`
}

// NewContainerStateCallbackResponseData instantiates a new ContainerStateCallbackResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerStateCallbackResponseData() *ContainerStateCallbackResponseData {
	this := ContainerStateCallbackResponseData{}
	return &this
}

// NewContainerStateCallbackResponseDataWithDefaults instantiates a new ContainerStateCallbackResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerStateCallbackResponseDataWithDefaults() *ContainerStateCallbackResponseData {
	this := ContainerStateCallbackResponseData{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ContainerStateCallbackResponseData) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerStateCallbackResponseData) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ContainerStateCallbackResponseData) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ContainerStateCallbackResponseData) SetId(v string) {
	o.Id = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ContainerStateCallbackResponseData) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerStateCallbackResponseData) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ContainerStateCallbackResponseData) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ContainerStateCallbackResponseData) SetState(v string) {
	o.State = &v
}

func (o ContainerStateCallbackResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableContainerStateCallbackResponseData struct {
	value *ContainerStateCallbackResponseData
	isSet bool
}

func (v NullableContainerStateCallbackResponseData) Get() *ContainerStateCallbackResponseData {
	return v.value
}

func (v *NullableContainerStateCallbackResponseData) Set(val *ContainerStateCallbackResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerStateCallbackResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerStateCallbackResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerStateCallbackResponseData(val *ContainerStateCallbackResponseData) *NullableContainerStateCallbackResponseData {
	return &NullableContainerStateCallbackResponseData{value: val, isSet: true}
}

func (v NullableContainerStateCallbackResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerStateCallbackResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



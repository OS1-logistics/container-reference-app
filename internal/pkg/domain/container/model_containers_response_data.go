/*
Container Service

**API documentation for Container Service**

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package containerdomain

import (
	"encoding/json"
)

// ContainersResponseData struct for ContainersResponseData
type ContainersResponseData struct {
	Meta *ContainerTypesResponseDataMeta `json:"meta,omitempty"`
	Containers []ContainerResponseData `json:"containers,omitempty"`
}

// NewContainersResponseData instantiates a new ContainersResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainersResponseData() *ContainersResponseData {
	this := ContainersResponseData{}
	return &this
}

// NewContainersResponseDataWithDefaults instantiates a new ContainersResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainersResponseDataWithDefaults() *ContainersResponseData {
	this := ContainersResponseData{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ContainersResponseData) GetMeta() ContainerTypesResponseDataMeta {
	if o == nil || isNil(o.Meta) {
		var ret ContainerTypesResponseDataMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainersResponseData) GetMetaOk() (*ContainerTypesResponseDataMeta, bool) {
	if o == nil || isNil(o.Meta) {
    return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ContainersResponseData) HasMeta() bool {
	if o != nil && !isNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ContainerTypesResponseDataMeta and assigns it to the Meta field.
func (o *ContainersResponseData) SetMeta(v ContainerTypesResponseDataMeta) {
	o.Meta = &v
}

// GetContainers returns the Containers field value if set, zero value otherwise.
func (o *ContainersResponseData) GetContainers() []ContainerResponseData {
	if o == nil || isNil(o.Containers) {
		var ret []ContainerResponseData
		return ret
	}
	return o.Containers
}

// GetContainersOk returns a tuple with the Containers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainersResponseData) GetContainersOk() ([]ContainerResponseData, bool) {
	if o == nil || isNil(o.Containers) {
    return nil, false
	}
	return o.Containers, true
}

// HasContainers returns a boolean if a field has been set.
func (o *ContainersResponseData) HasContainers() bool {
	if o != nil && !isNil(o.Containers) {
		return true
	}

	return false
}

// SetContainers gets a reference to the given []ContainerResponseData and assigns it to the Containers field.
func (o *ContainersResponseData) SetContainers(v []ContainerResponseData) {
	o.Containers = v
}

func (o ContainersResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !isNil(o.Containers) {
		toSerialize["containers"] = o.Containers
	}
	return json.Marshal(toSerialize)
}

type NullableContainersResponseData struct {
	value *ContainersResponseData
	isSet bool
}

func (v NullableContainersResponseData) Get() *ContainersResponseData {
	return v.value
}

func (v *NullableContainersResponseData) Set(val *ContainersResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableContainersResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableContainersResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainersResponseData(val *ContainersResponseData) *NullableContainersResponseData {
	return &NullableContainersResponseData{value: val, isSet: true}
}

func (v NullableContainersResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainersResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaadomain

import (
	"encoding/json"
)

// OIDCResponse struct for OIDCResponse
type OIDCResponse struct {
	// Connection ID.
	ConnectionId *string `json:"connectionId,omitempty"`
	// Alias of identity provider.
	ConnectionName *string `json:"connectionName,omitempty"`
	// Display name of the OIDC provider.
	DisplayName *string `json:"displayName,omitempty"`
	// Type of connection.
	ConnectionType *string `json:"connectionType,omitempty"`
	// When on the provider is enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// Authorization URL.
	AuthorizationUrl *string `json:"authorizationUrl,omitempty"`
	// Token URL.
	TokenUrl *string `json:"tokenUrl,omitempty"`
	// Client identifier registered with identity provider.
	ClientId *string `json:"clientId,omitempty"`
	// User info URL.
	UserInfoUrl *string `json:"userInfoUrl,omitempty"`
	// Logout URL.
	LogoutUrl *string `json:"logoutUrl,omitempty"`
	// GUI order.
	GuiOrder *float32 `json:"guiOrder,omitempty"`
	// Issuer of response.
	Issuer *string `json:"issuer,omitempty"`
	// JWKS URL.
	JwksUrl *string `json:"jwksUrl,omitempty"`
}

// NewOIDCResponse instantiates a new OIDCResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOIDCResponse() *OIDCResponse {
	this := OIDCResponse{}
	return &this
}

// NewOIDCResponseWithDefaults instantiates a new OIDCResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCResponseWithDefaults() *OIDCResponse {
	this := OIDCResponse{}
	return &this
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise.
func (o *OIDCResponse) GetConnectionId() string {
	if o == nil || o.ConnectionId == nil {
		var ret string
		return ret
	}
	return *o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCResponse) GetConnectionIdOk() (*string, bool) {
	if o == nil || o.ConnectionId == nil {
		return nil, false
	}
	return o.ConnectionId, true
}

// HasConnectionId returns a boolean if a field has been set.
func (o *OIDCResponse) HasConnectionId() bool {
	if o != nil && o.ConnectionId != nil {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given string and assigns it to the ConnectionId field.
func (o *OIDCResponse) SetConnectionId(v string) {
	o.ConnectionId = &v
}

// GetConnectionName returns the ConnectionName field value if set, zero value otherwise.
func (o *OIDCResponse) GetConnectionName() string {
	if o == nil || o.ConnectionName == nil {
		var ret string
		return ret
	}
	return *o.ConnectionName
}

// GetConnectionNameOk returns a tuple with the ConnectionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCResponse) GetConnectionNameOk() (*string, bool) {
	if o == nil || o.ConnectionName == nil {
		return nil, false
	}
	return o.ConnectionName, true
}

// HasConnectionName returns a boolean if a field has been set.
func (o *OIDCResponse) HasConnectionName() bool {
	if o != nil && o.ConnectionName != nil {
		return true
	}

	return false
}

// SetConnectionName gets a reference to the given string and assigns it to the ConnectionName field.
func (o *OIDCResponse) SetConnectionName(v string) {
	o.ConnectionName = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *OIDCResponse) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCResponse) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *OIDCResponse) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *OIDCResponse) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise.
func (o *OIDCResponse) GetConnectionType() string {
	if o == nil || o.ConnectionType == nil {
		var ret string
		return ret
	}
	return *o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCResponse) GetConnectionTypeOk() (*string, bool) {
	if o == nil || o.ConnectionType == nil {
		return nil, false
	}
	return o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *OIDCResponse) HasConnectionType() bool {
	if o != nil && o.ConnectionType != nil {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given string and assigns it to the ConnectionType field.
func (o *OIDCResponse) SetConnectionType(v string) {
	o.ConnectionType = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *OIDCResponse) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCResponse) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *OIDCResponse) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *OIDCResponse) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetAuthorizationUrl returns the AuthorizationUrl field value if set, zero value otherwise.
func (o *OIDCResponse) GetAuthorizationUrl() string {
	if o == nil || o.AuthorizationUrl == nil {
		var ret string
		return ret
	}
	return *o.AuthorizationUrl
}

// GetAuthorizationUrlOk returns a tuple with the AuthorizationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCResponse) GetAuthorizationUrlOk() (*string, bool) {
	if o == nil || o.AuthorizationUrl == nil {
		return nil, false
	}
	return o.AuthorizationUrl, true
}

// HasAuthorizationUrl returns a boolean if a field has been set.
func (o *OIDCResponse) HasAuthorizationUrl() bool {
	if o != nil && o.AuthorizationUrl != nil {
		return true
	}

	return false
}

// SetAuthorizationUrl gets a reference to the given string and assigns it to the AuthorizationUrl field.
func (o *OIDCResponse) SetAuthorizationUrl(v string) {
	o.AuthorizationUrl = &v
}

// GetTokenUrl returns the TokenUrl field value if set, zero value otherwise.
func (o *OIDCResponse) GetTokenUrl() string {
	if o == nil || o.TokenUrl == nil {
		var ret string
		return ret
	}
	return *o.TokenUrl
}

// GetTokenUrlOk returns a tuple with the TokenUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCResponse) GetTokenUrlOk() (*string, bool) {
	if o == nil || o.TokenUrl == nil {
		return nil, false
	}
	return o.TokenUrl, true
}

// HasTokenUrl returns a boolean if a field has been set.
func (o *OIDCResponse) HasTokenUrl() bool {
	if o != nil && o.TokenUrl != nil {
		return true
	}

	return false
}

// SetTokenUrl gets a reference to the given string and assigns it to the TokenUrl field.
func (o *OIDCResponse) SetTokenUrl(v string) {
	o.TokenUrl = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *OIDCResponse) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCResponse) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *OIDCResponse) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *OIDCResponse) SetClientId(v string) {
	o.ClientId = &v
}

// GetUserInfoUrl returns the UserInfoUrl field value if set, zero value otherwise.
func (o *OIDCResponse) GetUserInfoUrl() string {
	if o == nil || o.UserInfoUrl == nil {
		var ret string
		return ret
	}
	return *o.UserInfoUrl
}

// GetUserInfoUrlOk returns a tuple with the UserInfoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCResponse) GetUserInfoUrlOk() (*string, bool) {
	if o == nil || o.UserInfoUrl == nil {
		return nil, false
	}
	return o.UserInfoUrl, true
}

// HasUserInfoUrl returns a boolean if a field has been set.
func (o *OIDCResponse) HasUserInfoUrl() bool {
	if o != nil && o.UserInfoUrl != nil {
		return true
	}

	return false
}

// SetUserInfoUrl gets a reference to the given string and assigns it to the UserInfoUrl field.
func (o *OIDCResponse) SetUserInfoUrl(v string) {
	o.UserInfoUrl = &v
}

// GetLogoutUrl returns the LogoutUrl field value if set, zero value otherwise.
func (o *OIDCResponse) GetLogoutUrl() string {
	if o == nil || o.LogoutUrl == nil {
		var ret string
		return ret
	}
	return *o.LogoutUrl
}

// GetLogoutUrlOk returns a tuple with the LogoutUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCResponse) GetLogoutUrlOk() (*string, bool) {
	if o == nil || o.LogoutUrl == nil {
		return nil, false
	}
	return o.LogoutUrl, true
}

// HasLogoutUrl returns a boolean if a field has been set.
func (o *OIDCResponse) HasLogoutUrl() bool {
	if o != nil && o.LogoutUrl != nil {
		return true
	}

	return false
}

// SetLogoutUrl gets a reference to the given string and assigns it to the LogoutUrl field.
func (o *OIDCResponse) SetLogoutUrl(v string) {
	o.LogoutUrl = &v
}

// GetGuiOrder returns the GuiOrder field value if set, zero value otherwise.
func (o *OIDCResponse) GetGuiOrder() float32 {
	if o == nil || o.GuiOrder == nil {
		var ret float32
		return ret
	}
	return *o.GuiOrder
}

// GetGuiOrderOk returns a tuple with the GuiOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCResponse) GetGuiOrderOk() (*float32, bool) {
	if o == nil || o.GuiOrder == nil {
		return nil, false
	}
	return o.GuiOrder, true
}

// HasGuiOrder returns a boolean if a field has been set.
func (o *OIDCResponse) HasGuiOrder() bool {
	if o != nil && o.GuiOrder != nil {
		return true
	}

	return false
}

// SetGuiOrder gets a reference to the given float32 and assigns it to the GuiOrder field.
func (o *OIDCResponse) SetGuiOrder(v float32) {
	o.GuiOrder = &v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *OIDCResponse) GetIssuer() string {
	if o == nil || o.Issuer == nil {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCResponse) GetIssuerOk() (*string, bool) {
	if o == nil || o.Issuer == nil {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *OIDCResponse) HasIssuer() bool {
	if o != nil && o.Issuer != nil {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *OIDCResponse) SetIssuer(v string) {
	o.Issuer = &v
}

// GetJwksUrl returns the JwksUrl field value if set, zero value otherwise.
func (o *OIDCResponse) GetJwksUrl() string {
	if o == nil || o.JwksUrl == nil {
		var ret string
		return ret
	}
	return *o.JwksUrl
}

// GetJwksUrlOk returns a tuple with the JwksUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCResponse) GetJwksUrlOk() (*string, bool) {
	if o == nil || o.JwksUrl == nil {
		return nil, false
	}
	return o.JwksUrl, true
}

// HasJwksUrl returns a boolean if a field has been set.
func (o *OIDCResponse) HasJwksUrl() bool {
	if o != nil && o.JwksUrl != nil {
		return true
	}

	return false
}

// SetJwksUrl gets a reference to the given string and assigns it to the JwksUrl field.
func (o *OIDCResponse) SetJwksUrl(v string) {
	o.JwksUrl = &v
}

func (o OIDCResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConnectionId != nil {
		toSerialize["connectionId"] = o.ConnectionId
	}
	if o.ConnectionName != nil {
		toSerialize["connectionName"] = o.ConnectionName
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.ConnectionType != nil {
		toSerialize["connectionType"] = o.ConnectionType
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.AuthorizationUrl != nil {
		toSerialize["authorizationUrl"] = o.AuthorizationUrl
	}
	if o.TokenUrl != nil {
		toSerialize["tokenUrl"] = o.TokenUrl
	}
	if o.ClientId != nil {
		toSerialize["clientId"] = o.ClientId
	}
	if o.UserInfoUrl != nil {
		toSerialize["userInfoUrl"] = o.UserInfoUrl
	}
	if o.LogoutUrl != nil {
		toSerialize["logoutUrl"] = o.LogoutUrl
	}
	if o.GuiOrder != nil {
		toSerialize["guiOrder"] = o.GuiOrder
	}
	if o.Issuer != nil {
		toSerialize["issuer"] = o.Issuer
	}
	if o.JwksUrl != nil {
		toSerialize["jwksUrl"] = o.JwksUrl
	}
	return json.Marshal(toSerialize)
}

type NullableOIDCResponse struct {
	value *OIDCResponse
	isSet bool
}

func (v NullableOIDCResponse) Get() *OIDCResponse {
	return v.value
}

func (v *NullableOIDCResponse) Set(val *OIDCResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOIDCResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOIDCResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOIDCResponse(val *OIDCResponse) *NullableOIDCResponse {
	return &NullableOIDCResponse{value: val, isSet: true}
}

func (v NullableOIDCResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOIDCResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



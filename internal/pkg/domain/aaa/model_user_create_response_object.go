/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaadomain

import (
	"encoding/json"
)

// UserCreateResponseObject struct for UserCreateResponseObject
type UserCreateResponseObject struct {
	Id *string `json:"id,omitempty"`
}

// NewUserCreateResponseObject instantiates a new UserCreateResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserCreateResponseObject() *UserCreateResponseObject {
	this := UserCreateResponseObject{}
	return &this
}

// NewUserCreateResponseObjectWithDefaults instantiates a new UserCreateResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserCreateResponseObjectWithDefaults() *UserCreateResponseObject {
	this := UserCreateResponseObject{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UserCreateResponseObject) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreateResponseObject) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UserCreateResponseObject) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UserCreateResponseObject) SetId(v string) {
	o.Id = &v
}

func (o UserCreateResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableUserCreateResponseObject struct {
	value *UserCreateResponseObject
	isSet bool
}

func (v NullableUserCreateResponseObject) Get() *UserCreateResponseObject {
	return v.value
}

func (v *NullableUserCreateResponseObject) Set(val *UserCreateResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableUserCreateResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableUserCreateResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserCreateResponseObject(val *UserCreateResponseObject) *NullableUserCreateResponseObject {
	return &NullableUserCreateResponseObject{value: val, isSet: true}
}

func (v NullableUserCreateResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserCreateResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



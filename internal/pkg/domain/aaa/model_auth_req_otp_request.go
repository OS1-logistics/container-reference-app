/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaadomain

import (
	"encoding/json"
)

// AuthReqOtpRequest struct for AuthReqOtpRequest
type AuthReqOtpRequest struct {
	// Email of the user.
	EmailId *string `json:"emailId,omitempty"`
	Mobile *AuthReqOtpRequestMobile `json:"mobile,omitempty"`
	// Received OTP through mobile or email.
	Otp string `json:"otp"`
	// Can be only one of email or sms. If email is provided in this field then `emailId` key has to be present. If SMS is provided in this field then mobile object has to be present in the request payload.
	Mode string `json:"mode"`
}

// NewAuthReqOtpRequest instantiates a new AuthReqOtpRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthReqOtpRequest(otp string, mode string) *AuthReqOtpRequest {
	this := AuthReqOtpRequest{}
	this.Otp = otp
	this.Mode = mode
	return &this
}

// NewAuthReqOtpRequestWithDefaults instantiates a new AuthReqOtpRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthReqOtpRequestWithDefaults() *AuthReqOtpRequest {
	this := AuthReqOtpRequest{}
	return &this
}

// GetEmailId returns the EmailId field value if set, zero value otherwise.
func (o *AuthReqOtpRequest) GetEmailId() string {
	if o == nil || o.EmailId == nil {
		var ret string
		return ret
	}
	return *o.EmailId
}

// GetEmailIdOk returns a tuple with the EmailId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthReqOtpRequest) GetEmailIdOk() (*string, bool) {
	if o == nil || o.EmailId == nil {
		return nil, false
	}
	return o.EmailId, true
}

// HasEmailId returns a boolean if a field has been set.
func (o *AuthReqOtpRequest) HasEmailId() bool {
	if o != nil && o.EmailId != nil {
		return true
	}

	return false
}

// SetEmailId gets a reference to the given string and assigns it to the EmailId field.
func (o *AuthReqOtpRequest) SetEmailId(v string) {
	o.EmailId = &v
}

// GetMobile returns the Mobile field value if set, zero value otherwise.
func (o *AuthReqOtpRequest) GetMobile() AuthReqOtpRequestMobile {
	if o == nil || o.Mobile == nil {
		var ret AuthReqOtpRequestMobile
		return ret
	}
	return *o.Mobile
}

// GetMobileOk returns a tuple with the Mobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthReqOtpRequest) GetMobileOk() (*AuthReqOtpRequestMobile, bool) {
	if o == nil || o.Mobile == nil {
		return nil, false
	}
	return o.Mobile, true
}

// HasMobile returns a boolean if a field has been set.
func (o *AuthReqOtpRequest) HasMobile() bool {
	if o != nil && o.Mobile != nil {
		return true
	}

	return false
}

// SetMobile gets a reference to the given AuthReqOtpRequestMobile and assigns it to the Mobile field.
func (o *AuthReqOtpRequest) SetMobile(v AuthReqOtpRequestMobile) {
	o.Mobile = &v
}

// GetOtp returns the Otp field value
func (o *AuthReqOtpRequest) GetOtp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Otp
}

// GetOtpOk returns a tuple with the Otp field value
// and a boolean to check if the value has been set.
func (o *AuthReqOtpRequest) GetOtpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Otp, true
}

// SetOtp sets field value
func (o *AuthReqOtpRequest) SetOtp(v string) {
	o.Otp = v
}

// GetMode returns the Mode field value
func (o *AuthReqOtpRequest) GetMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mode
}

// GetModeOk returns a tuple with the Mode field value
// and a boolean to check if the value has been set.
func (o *AuthReqOtpRequest) GetModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mode, true
}

// SetMode sets field value
func (o *AuthReqOtpRequest) SetMode(v string) {
	o.Mode = v
}

func (o AuthReqOtpRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EmailId != nil {
		toSerialize["emailId"] = o.EmailId
	}
	if o.Mobile != nil {
		toSerialize["mobile"] = o.Mobile
	}
	if true {
		toSerialize["otp"] = o.Otp
	}
	if true {
		toSerialize["mode"] = o.Mode
	}
	return json.Marshal(toSerialize)
}

type NullableAuthReqOtpRequest struct {
	value *AuthReqOtpRequest
	isSet bool
}

func (v NullableAuthReqOtpRequest) Get() *AuthReqOtpRequest {
	return v.value
}

func (v *NullableAuthReqOtpRequest) Set(val *AuthReqOtpRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthReqOtpRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthReqOtpRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthReqOtpRequest(val *AuthReqOtpRequest) *NullableAuthReqOtpRequest {
	return &NullableAuthReqOtpRequest{value: val, isSet: true}
}

func (v NullableAuthReqOtpRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthReqOtpRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



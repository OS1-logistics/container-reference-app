/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaadomain

import (
	"encoding/json"
)

// TenantUpdateRequest struct for TenantUpdateRequest
type TenantUpdateRequest struct {
	// Tenant UUID scope
	Id *string `json:"id,omitempty"`
	// Display name of the Tenant.
	DisplayName *string `json:"displayName,omitempty"`
	// This parameter is used to make Tenant active or inactive.
	Enabled *bool `json:"enabled,omitempty"`
	// Metadata associated with the Tenant.
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	AbacConfig *AbacConfigRequest `json:"abacConfig,omitempty"`
}

// NewTenantUpdateRequest instantiates a new TenantUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantUpdateRequest() *TenantUpdateRequest {
	this := TenantUpdateRequest{}
	return &this
}

// NewTenantUpdateRequestWithDefaults instantiates a new TenantUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantUpdateRequestWithDefaults() *TenantUpdateRequest {
	this := TenantUpdateRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TenantUpdateRequest) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantUpdateRequest) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TenantUpdateRequest) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TenantUpdateRequest) SetId(v string) {
	o.Id = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *TenantUpdateRequest) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantUpdateRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *TenantUpdateRequest) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *TenantUpdateRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *TenantUpdateRequest) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantUpdateRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *TenantUpdateRequest) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *TenantUpdateRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *TenantUpdateRequest) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantUpdateRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *TenantUpdateRequest) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *TenantUpdateRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetAbacConfig returns the AbacConfig field value if set, zero value otherwise.
func (o *TenantUpdateRequest) GetAbacConfig() AbacConfigRequest {
	if o == nil || o.AbacConfig == nil {
		var ret AbacConfigRequest
		return ret
	}
	return *o.AbacConfig
}

// GetAbacConfigOk returns a tuple with the AbacConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantUpdateRequest) GetAbacConfigOk() (*AbacConfigRequest, bool) {
	if o == nil || o.AbacConfig == nil {
		return nil, false
	}
	return o.AbacConfig, true
}

// HasAbacConfig returns a boolean if a field has been set.
func (o *TenantUpdateRequest) HasAbacConfig() bool {
	if o != nil && o.AbacConfig != nil {
		return true
	}

	return false
}

// SetAbacConfig gets a reference to the given AbacConfigRequest and assigns it to the AbacConfig field.
func (o *TenantUpdateRequest) SetAbacConfig(v AbacConfigRequest) {
	o.AbacConfig = &v
}

func (o TenantUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.AbacConfig != nil {
		toSerialize["abacConfig"] = o.AbacConfig
	}
	return json.Marshal(toSerialize)
}

type NullableTenantUpdateRequest struct {
	value *TenantUpdateRequest
	isSet bool
}

func (v NullableTenantUpdateRequest) Get() *TenantUpdateRequest {
	return v.value
}

func (v *NullableTenantUpdateRequest) Set(val *TenantUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantUpdateRequest(val *TenantUpdateRequest) *NullableTenantUpdateRequest {
	return &NullableTenantUpdateRequest{value: val, isSet: true}
}

func (v NullableTenantUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



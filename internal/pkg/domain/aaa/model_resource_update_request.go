/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaadomain

import (
	"encoding/json"
)

// ResourceUpdateRequest struct for ResourceUpdateRequest
type ResourceUpdateRequest struct {
	// Description of the entity exposed by this resource.
	Description *string `json:"description,omitempty"`
	// List of URIs for resource. Example \"/core/api/v1/containers/_**\"
	ResourcePath *string `json:"resourcePath,omitempty"`
	// Scopes of resource- get, put, post, patch, delete.
	AllowedHttpMethods []string `json:"allowedHttpMethods,omitempty"`
	// When `isActive` = False, the resource will be ignored from updating, until is `isActive` = True.
	IsActive *bool `json:"isActive,omitempty"`
	// When `isDeleted` = True, the resource will be deleted and can't be accessed.
	IsDeleted *bool `json:"isDeleted,omitempty"`
	// Formatted resourcePath. Example \"/core/api/v1/containers/{{containerId}}\". If set null, ABAC policies will not be applied on this resource.
	ResourcePathFormatted NullableString `json:"resourcePathFormatted,omitempty"`
	// JSON path in ValidateAPI response for requestParameter value. JSON path value will be matched with requestParameter value. This field will only be present in abac related resources.
	AttributePath NullableString `json:"attributePath,omitempty"`
	// Request Path Param name for the attribute. It will save the name of the ABAC attribute.
	RequestParameter NullableString `json:"requestParameter,omitempty"`
}

// NewResourceUpdateRequest instantiates a new ResourceUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceUpdateRequest() *ResourceUpdateRequest {
	this := ResourceUpdateRequest{}
	return &this
}

// NewResourceUpdateRequestWithDefaults instantiates a new ResourceUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceUpdateRequestWithDefaults() *ResourceUpdateRequest {
	this := ResourceUpdateRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ResourceUpdateRequest) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceUpdateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ResourceUpdateRequest) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ResourceUpdateRequest) SetDescription(v string) {
	o.Description = &v
}

// GetResourcePath returns the ResourcePath field value if set, zero value otherwise.
func (o *ResourceUpdateRequest) GetResourcePath() string {
	if o == nil || isNil(o.ResourcePath) {
		var ret string
		return ret
	}
	return *o.ResourcePath
}

// GetResourcePathOk returns a tuple with the ResourcePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceUpdateRequest) GetResourcePathOk() (*string, bool) {
	if o == nil || isNil(o.ResourcePath) {
    return nil, false
	}
	return o.ResourcePath, true
}

// HasResourcePath returns a boolean if a field has been set.
func (o *ResourceUpdateRequest) HasResourcePath() bool {
	if o != nil && !isNil(o.ResourcePath) {
		return true
	}

	return false
}

// SetResourcePath gets a reference to the given string and assigns it to the ResourcePath field.
func (o *ResourceUpdateRequest) SetResourcePath(v string) {
	o.ResourcePath = &v
}

// GetAllowedHttpMethods returns the AllowedHttpMethods field value if set, zero value otherwise.
func (o *ResourceUpdateRequest) GetAllowedHttpMethods() []string {
	if o == nil || isNil(o.AllowedHttpMethods) {
		var ret []string
		return ret
	}
	return o.AllowedHttpMethods
}

// GetAllowedHttpMethodsOk returns a tuple with the AllowedHttpMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceUpdateRequest) GetAllowedHttpMethodsOk() ([]string, bool) {
	if o == nil || isNil(o.AllowedHttpMethods) {
    return nil, false
	}
	return o.AllowedHttpMethods, true
}

// HasAllowedHttpMethods returns a boolean if a field has been set.
func (o *ResourceUpdateRequest) HasAllowedHttpMethods() bool {
	if o != nil && !isNil(o.AllowedHttpMethods) {
		return true
	}

	return false
}

// SetAllowedHttpMethods gets a reference to the given []string and assigns it to the AllowedHttpMethods field.
func (o *ResourceUpdateRequest) SetAllowedHttpMethods(v []string) {
	o.AllowedHttpMethods = v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *ResourceUpdateRequest) GetIsActive() bool {
	if o == nil || isNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceUpdateRequest) GetIsActiveOk() (*bool, bool) {
	if o == nil || isNil(o.IsActive) {
    return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *ResourceUpdateRequest) HasIsActive() bool {
	if o != nil && !isNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *ResourceUpdateRequest) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *ResourceUpdateRequest) GetIsDeleted() bool {
	if o == nil || isNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceUpdateRequest) GetIsDeletedOk() (*bool, bool) {
	if o == nil || isNil(o.IsDeleted) {
    return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *ResourceUpdateRequest) HasIsDeleted() bool {
	if o != nil && !isNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *ResourceUpdateRequest) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetResourcePathFormatted returns the ResourcePathFormatted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceUpdateRequest) GetResourcePathFormatted() string {
	if o == nil || isNil(o.ResourcePathFormatted.Get()) {
		var ret string
		return ret
	}
	return *o.ResourcePathFormatted.Get()
}

// GetResourcePathFormattedOk returns a tuple with the ResourcePathFormatted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceUpdateRequest) GetResourcePathFormattedOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ResourcePathFormatted.Get(), o.ResourcePathFormatted.IsSet()
}

// HasResourcePathFormatted returns a boolean if a field has been set.
func (o *ResourceUpdateRequest) HasResourcePathFormatted() bool {
	if o != nil && o.ResourcePathFormatted.IsSet() {
		return true
	}

	return false
}

// SetResourcePathFormatted gets a reference to the given NullableString and assigns it to the ResourcePathFormatted field.
func (o *ResourceUpdateRequest) SetResourcePathFormatted(v string) {
	o.ResourcePathFormatted.Set(&v)
}
// SetResourcePathFormattedNil sets the value for ResourcePathFormatted to be an explicit nil
func (o *ResourceUpdateRequest) SetResourcePathFormattedNil() {
	o.ResourcePathFormatted.Set(nil)
}

// UnsetResourcePathFormatted ensures that no value is present for ResourcePathFormatted, not even an explicit nil
func (o *ResourceUpdateRequest) UnsetResourcePathFormatted() {
	o.ResourcePathFormatted.Unset()
}

// GetAttributePath returns the AttributePath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceUpdateRequest) GetAttributePath() string {
	if o == nil || isNil(o.AttributePath.Get()) {
		var ret string
		return ret
	}
	return *o.AttributePath.Get()
}

// GetAttributePathOk returns a tuple with the AttributePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceUpdateRequest) GetAttributePathOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.AttributePath.Get(), o.AttributePath.IsSet()
}

// HasAttributePath returns a boolean if a field has been set.
func (o *ResourceUpdateRequest) HasAttributePath() bool {
	if o != nil && o.AttributePath.IsSet() {
		return true
	}

	return false
}

// SetAttributePath gets a reference to the given NullableString and assigns it to the AttributePath field.
func (o *ResourceUpdateRequest) SetAttributePath(v string) {
	o.AttributePath.Set(&v)
}
// SetAttributePathNil sets the value for AttributePath to be an explicit nil
func (o *ResourceUpdateRequest) SetAttributePathNil() {
	o.AttributePath.Set(nil)
}

// UnsetAttributePath ensures that no value is present for AttributePath, not even an explicit nil
func (o *ResourceUpdateRequest) UnsetAttributePath() {
	o.AttributePath.Unset()
}

// GetRequestParameter returns the RequestParameter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceUpdateRequest) GetRequestParameter() string {
	if o == nil || isNil(o.RequestParameter.Get()) {
		var ret string
		return ret
	}
	return *o.RequestParameter.Get()
}

// GetRequestParameterOk returns a tuple with the RequestParameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceUpdateRequest) GetRequestParameterOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.RequestParameter.Get(), o.RequestParameter.IsSet()
}

// HasRequestParameter returns a boolean if a field has been set.
func (o *ResourceUpdateRequest) HasRequestParameter() bool {
	if o != nil && o.RequestParameter.IsSet() {
		return true
	}

	return false
}

// SetRequestParameter gets a reference to the given NullableString and assigns it to the RequestParameter field.
func (o *ResourceUpdateRequest) SetRequestParameter(v string) {
	o.RequestParameter.Set(&v)
}
// SetRequestParameterNil sets the value for RequestParameter to be an explicit nil
func (o *ResourceUpdateRequest) SetRequestParameterNil() {
	o.RequestParameter.Set(nil)
}

// UnsetRequestParameter ensures that no value is present for RequestParameter, not even an explicit nil
func (o *ResourceUpdateRequest) UnsetRequestParameter() {
	o.RequestParameter.Unset()
}

func (o ResourceUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.ResourcePath) {
		toSerialize["resourcePath"] = o.ResourcePath
	}
	if !isNil(o.AllowedHttpMethods) {
		toSerialize["allowedHttpMethods"] = o.AllowedHttpMethods
	}
	if !isNil(o.IsActive) {
		toSerialize["isActive"] = o.IsActive
	}
	if !isNil(o.IsDeleted) {
		toSerialize["isDeleted"] = o.IsDeleted
	}
	if o.ResourcePathFormatted.IsSet() {
		toSerialize["resourcePathFormatted"] = o.ResourcePathFormatted.Get()
	}
	if o.AttributePath.IsSet() {
		toSerialize["attributePath"] = o.AttributePath.Get()
	}
	if o.RequestParameter.IsSet() {
		toSerialize["requestParameter"] = o.RequestParameter.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableResourceUpdateRequest struct {
	value *ResourceUpdateRequest
	isSet bool
}

func (v NullableResourceUpdateRequest) Get() *ResourceUpdateRequest {
	return v.value
}

func (v *NullableResourceUpdateRequest) Set(val *ResourceUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceUpdateRequest(val *ResourceUpdateRequest) *NullableResourceUpdateRequest {
	return &NullableResourceUpdateRequest{value: val, isSet: true}
}

func (v NullableResourceUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaadomain

import (
	"encoding/json"
)

// UserRoleMappingResponse struct for UserRoleMappingResponse
type UserRoleMappingResponse struct {
	// Tenant ID of the user.
	TenantId *string `json:"tenantId,omitempty"`
	Roles []RoleMapping `json:"roles,omitempty"`
}

// NewUserRoleMappingResponse instantiates a new UserRoleMappingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserRoleMappingResponse() *UserRoleMappingResponse {
	this := UserRoleMappingResponse{}
	return &this
}

// NewUserRoleMappingResponseWithDefaults instantiates a new UserRoleMappingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserRoleMappingResponseWithDefaults() *UserRoleMappingResponse {
	this := UserRoleMappingResponse{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *UserRoleMappingResponse) GetTenantId() string {
	if o == nil || isNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserRoleMappingResponse) GetTenantIdOk() (*string, bool) {
	if o == nil || isNil(o.TenantId) {
    return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *UserRoleMappingResponse) HasTenantId() bool {
	if o != nil && !isNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *UserRoleMappingResponse) SetTenantId(v string) {
	o.TenantId = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *UserRoleMappingResponse) GetRoles() []RoleMapping {
	if o == nil || isNil(o.Roles) {
		var ret []RoleMapping
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserRoleMappingResponse) GetRolesOk() ([]RoleMapping, bool) {
	if o == nil || isNil(o.Roles) {
    return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *UserRoleMappingResponse) HasRoles() bool {
	if o != nil && !isNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []RoleMapping and assigns it to the Roles field.
func (o *UserRoleMappingResponse) SetRoles(v []RoleMapping) {
	o.Roles = v
}

func (o UserRoleMappingResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !isNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	return json.Marshal(toSerialize)
}

type NullableUserRoleMappingResponse struct {
	value *UserRoleMappingResponse
	isSet bool
}

func (v NullableUserRoleMappingResponse) Get() *UserRoleMappingResponse {
	return v.value
}

func (v *NullableUserRoleMappingResponse) Set(val *UserRoleMappingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUserRoleMappingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUserRoleMappingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserRoleMappingResponse(val *UserRoleMappingResponse) *NullableUserRoleMappingResponse {
	return &NullableUserRoleMappingResponse{value: val, isSet: true}
}

func (v NullableUserRoleMappingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserRoleMappingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



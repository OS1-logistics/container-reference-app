/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaadomain

import (
	"encoding/json"
)

// AppRolesResponse struct for AppRolesResponse
type AppRolesResponse struct {
	// App ID of the M2M app.
	AppId *string `json:"appId,omitempty"`
	// List of roles assigned to the app.
	Roles []string `json:"roles,omitempty"`
}

// NewAppRolesResponse instantiates a new AppRolesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppRolesResponse() *AppRolesResponse {
	this := AppRolesResponse{}
	return &this
}

// NewAppRolesResponseWithDefaults instantiates a new AppRolesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRolesResponseWithDefaults() *AppRolesResponse {
	this := AppRolesResponse{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *AppRolesResponse) GetAppId() string {
	if o == nil || isNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRolesResponse) GetAppIdOk() (*string, bool) {
	if o == nil || isNil(o.AppId) {
    return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *AppRolesResponse) HasAppId() bool {
	if o != nil && !isNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *AppRolesResponse) SetAppId(v string) {
	o.AppId = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *AppRolesResponse) GetRoles() []string {
	if o == nil || isNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRolesResponse) GetRolesOk() ([]string, bool) {
	if o == nil || isNil(o.Roles) {
    return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *AppRolesResponse) HasRoles() bool {
	if o != nil && !isNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *AppRolesResponse) SetRoles(v []string) {
	o.Roles = v
}

func (o AppRolesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !isNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	return json.Marshal(toSerialize)
}

type NullableAppRolesResponse struct {
	value *AppRolesResponse
	isSet bool
}

func (v NullableAppRolesResponse) Get() *AppRolesResponse {
	return v.value
}

func (v *NullableAppRolesResponse) Set(val *AppRolesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAppRolesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAppRolesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppRolesResponse(val *AppRolesResponse) *NullableAppRolesResponse {
	return &NullableAppRolesResponse{value: val, isSet: true}
}

func (v NullableAppRolesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppRolesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaadomain

import (
	"encoding/json"
)

// IdentityLoginCredentials struct for IdentityLoginCredentials
type IdentityLoginCredentials struct {
	// Client ID for the application.
	ClientId string `json:"clientId"`
	// Name of the connection.
	ConnectionName string `json:"connectionName"`
	// Redirect URL after success for login.
	RedirectUrl string `json:"redirectUrl"`
	// Used for avoiding CSRF attacks.
	State string `json:"state"`
}

// NewIdentityLoginCredentials instantiates a new IdentityLoginCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityLoginCredentials(clientId string, connectionName string, redirectUrl string, state string) *IdentityLoginCredentials {
	this := IdentityLoginCredentials{}
	this.ClientId = clientId
	this.ConnectionName = connectionName
	this.RedirectUrl = redirectUrl
	this.State = state
	return &this
}

// NewIdentityLoginCredentialsWithDefaults instantiates a new IdentityLoginCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityLoginCredentialsWithDefaults() *IdentityLoginCredentials {
	this := IdentityLoginCredentials{}
	return &this
}

// GetClientId returns the ClientId field value
func (o *IdentityLoginCredentials) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *IdentityLoginCredentials) GetClientIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *IdentityLoginCredentials) SetClientId(v string) {
	o.ClientId = v
}

// GetConnectionName returns the ConnectionName field value
func (o *IdentityLoginCredentials) GetConnectionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionName
}

// GetConnectionNameOk returns a tuple with the ConnectionName field value
// and a boolean to check if the value has been set.
func (o *IdentityLoginCredentials) GetConnectionNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ConnectionName, true
}

// SetConnectionName sets field value
func (o *IdentityLoginCredentials) SetConnectionName(v string) {
	o.ConnectionName = v
}

// GetRedirectUrl returns the RedirectUrl field value
func (o *IdentityLoginCredentials) GetRedirectUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RedirectUrl
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value
// and a boolean to check if the value has been set.
func (o *IdentityLoginCredentials) GetRedirectUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.RedirectUrl, true
}

// SetRedirectUrl sets field value
func (o *IdentityLoginCredentials) SetRedirectUrl(v string) {
	o.RedirectUrl = v
}

// GetState returns the State field value
func (o *IdentityLoginCredentials) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *IdentityLoginCredentials) GetStateOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *IdentityLoginCredentials) SetState(v string) {
	o.State = v
}

func (o IdentityLoginCredentials) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["clientId"] = o.ClientId
	}
	if true {
		toSerialize["connectionName"] = o.ConnectionName
	}
	if true {
		toSerialize["redirectUrl"] = o.RedirectUrl
	}
	if true {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityLoginCredentials struct {
	value *IdentityLoginCredentials
	isSet bool
}

func (v NullableIdentityLoginCredentials) Get() *IdentityLoginCredentials {
	return v.value
}

func (v *NullableIdentityLoginCredentials) Set(val *IdentityLoginCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityLoginCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityLoginCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityLoginCredentials(val *IdentityLoginCredentials) *NullableIdentityLoginCredentials {
	return &NullableIdentityLoginCredentials{value: val, isSet: true}
}

func (v NullableIdentityLoginCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityLoginCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



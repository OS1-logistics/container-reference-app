/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaadomain

import (
	"encoding/json"
)

// SocialAuth struct for SocialAuth
type SocialAuth struct {
	// A Boolean value that specifies whether Google Login is allowed.
	Google NullableBool `json:"google,omitempty"`
}

// NewSocialAuth instantiates a new SocialAuth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSocialAuth() *SocialAuth {
	this := SocialAuth{}
	return &this
}

// NewSocialAuthWithDefaults instantiates a new SocialAuth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSocialAuthWithDefaults() *SocialAuth {
	this := SocialAuth{}
	return &this
}

// GetGoogle returns the Google field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialAuth) GetGoogle() bool {
	if o == nil || o.Google.Get() == nil {
		var ret bool
		return ret
	}
	return *o.Google.Get()
}

// GetGoogleOk returns a tuple with the Google field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialAuth) GetGoogleOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Google.Get(), o.Google.IsSet()
}

// HasGoogle returns a boolean if a field has been set.
func (o *SocialAuth) HasGoogle() bool {
	if o != nil && o.Google.IsSet() {
		return true
	}

	return false
}

// SetGoogle gets a reference to the given NullableBool and assigns it to the Google field.
func (o *SocialAuth) SetGoogle(v bool) {
	o.Google.Set(&v)
}
// SetGoogleNil sets the value for Google to be an explicit nil
func (o *SocialAuth) SetGoogleNil() {
	o.Google.Set(nil)
}

// UnsetGoogle ensures that no value is present for Google, not even an explicit nil
func (o *SocialAuth) UnsetGoogle() {
	o.Google.Unset()
}

func (o SocialAuth) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Google.IsSet() {
		toSerialize["google"] = o.Google.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableSocialAuth struct {
	value *SocialAuth
	isSet bool
}

func (v NullableSocialAuth) Get() *SocialAuth {
	return v.value
}

func (v *NullableSocialAuth) Set(val *SocialAuth) {
	v.value = val
	v.isSet = true
}

func (v NullableSocialAuth) IsSet() bool {
	return v.isSet
}

func (v *NullableSocialAuth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSocialAuth(val *SocialAuth) *NullableSocialAuth {
	return &NullableSocialAuth{value: val, isSet: true}
}

func (v NullableSocialAuth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSocialAuth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



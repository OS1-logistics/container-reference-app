/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaadomain

import (
	"encoding/json"
)

// ConnectionSamlCreateRequest struct for ConnectionSamlCreateRequest
type ConnectionSamlCreateRequest struct {
	// Unique name of the connection.
	ConnectionName string `json:"connectionName"`
	// Display Name of the SAML provider
	DisplayName *string `json:"displayName,omitempty"`
	// order of the provider in gui
	GuiOrder *float32 `json:"guiOrder,omitempty"`
	// Sign In endpoint of the SAML connection.
	SignInEndpoint *string `json:"signInEndpoint,omitempty"`
	// Sign Out endpoint of the SAML connection.
	SignOutEndpoint *string `json:"signOutEndpoint,omitempty"`
	// The certificate required for Saml connection should be of x509Cert format.
	PublicKeyCertificate string `json:"publicKeyCertificate"`
}

// NewConnectionSamlCreateRequest instantiates a new ConnectionSamlCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionSamlCreateRequest(connectionName string, publicKeyCertificate string) *ConnectionSamlCreateRequest {
	this := ConnectionSamlCreateRequest{}
	this.ConnectionName = connectionName
	this.PublicKeyCertificate = publicKeyCertificate
	return &this
}

// NewConnectionSamlCreateRequestWithDefaults instantiates a new ConnectionSamlCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionSamlCreateRequestWithDefaults() *ConnectionSamlCreateRequest {
	this := ConnectionSamlCreateRequest{}
	return &this
}

// GetConnectionName returns the ConnectionName field value
func (o *ConnectionSamlCreateRequest) GetConnectionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionName
}

// GetConnectionNameOk returns a tuple with the ConnectionName field value
// and a boolean to check if the value has been set.
func (o *ConnectionSamlCreateRequest) GetConnectionNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ConnectionName, true
}

// SetConnectionName sets field value
func (o *ConnectionSamlCreateRequest) SetConnectionName(v string) {
	o.ConnectionName = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ConnectionSamlCreateRequest) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionSamlCreateRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
    return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ConnectionSamlCreateRequest) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ConnectionSamlCreateRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetGuiOrder returns the GuiOrder field value if set, zero value otherwise.
func (o *ConnectionSamlCreateRequest) GetGuiOrder() float32 {
	if o == nil || isNil(o.GuiOrder) {
		var ret float32
		return ret
	}
	return *o.GuiOrder
}

// GetGuiOrderOk returns a tuple with the GuiOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionSamlCreateRequest) GetGuiOrderOk() (*float32, bool) {
	if o == nil || isNil(o.GuiOrder) {
    return nil, false
	}
	return o.GuiOrder, true
}

// HasGuiOrder returns a boolean if a field has been set.
func (o *ConnectionSamlCreateRequest) HasGuiOrder() bool {
	if o != nil && !isNil(o.GuiOrder) {
		return true
	}

	return false
}

// SetGuiOrder gets a reference to the given float32 and assigns it to the GuiOrder field.
func (o *ConnectionSamlCreateRequest) SetGuiOrder(v float32) {
	o.GuiOrder = &v
}

// GetSignInEndpoint returns the SignInEndpoint field value if set, zero value otherwise.
func (o *ConnectionSamlCreateRequest) GetSignInEndpoint() string {
	if o == nil || isNil(o.SignInEndpoint) {
		var ret string
		return ret
	}
	return *o.SignInEndpoint
}

// GetSignInEndpointOk returns a tuple with the SignInEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionSamlCreateRequest) GetSignInEndpointOk() (*string, bool) {
	if o == nil || isNil(o.SignInEndpoint) {
    return nil, false
	}
	return o.SignInEndpoint, true
}

// HasSignInEndpoint returns a boolean if a field has been set.
func (o *ConnectionSamlCreateRequest) HasSignInEndpoint() bool {
	if o != nil && !isNil(o.SignInEndpoint) {
		return true
	}

	return false
}

// SetSignInEndpoint gets a reference to the given string and assigns it to the SignInEndpoint field.
func (o *ConnectionSamlCreateRequest) SetSignInEndpoint(v string) {
	o.SignInEndpoint = &v
}

// GetSignOutEndpoint returns the SignOutEndpoint field value if set, zero value otherwise.
func (o *ConnectionSamlCreateRequest) GetSignOutEndpoint() string {
	if o == nil || isNil(o.SignOutEndpoint) {
		var ret string
		return ret
	}
	return *o.SignOutEndpoint
}

// GetSignOutEndpointOk returns a tuple with the SignOutEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionSamlCreateRequest) GetSignOutEndpointOk() (*string, bool) {
	if o == nil || isNil(o.SignOutEndpoint) {
    return nil, false
	}
	return o.SignOutEndpoint, true
}

// HasSignOutEndpoint returns a boolean if a field has been set.
func (o *ConnectionSamlCreateRequest) HasSignOutEndpoint() bool {
	if o != nil && !isNil(o.SignOutEndpoint) {
		return true
	}

	return false
}

// SetSignOutEndpoint gets a reference to the given string and assigns it to the SignOutEndpoint field.
func (o *ConnectionSamlCreateRequest) SetSignOutEndpoint(v string) {
	o.SignOutEndpoint = &v
}

// GetPublicKeyCertificate returns the PublicKeyCertificate field value
func (o *ConnectionSamlCreateRequest) GetPublicKeyCertificate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicKeyCertificate
}

// GetPublicKeyCertificateOk returns a tuple with the PublicKeyCertificate field value
// and a boolean to check if the value has been set.
func (o *ConnectionSamlCreateRequest) GetPublicKeyCertificateOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PublicKeyCertificate, true
}

// SetPublicKeyCertificate sets field value
func (o *ConnectionSamlCreateRequest) SetPublicKeyCertificate(v string) {
	o.PublicKeyCertificate = v
}

func (o ConnectionSamlCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["connectionName"] = o.ConnectionName
	}
	if !isNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !isNil(o.GuiOrder) {
		toSerialize["guiOrder"] = o.GuiOrder
	}
	if !isNil(o.SignInEndpoint) {
		toSerialize["signInEndpoint"] = o.SignInEndpoint
	}
	if !isNil(o.SignOutEndpoint) {
		toSerialize["signOutEndpoint"] = o.SignOutEndpoint
	}
	if true {
		toSerialize["publicKeyCertificate"] = o.PublicKeyCertificate
	}
	return json.Marshal(toSerialize)
}

type NullableConnectionSamlCreateRequest struct {
	value *ConnectionSamlCreateRequest
	isSet bool
}

func (v NullableConnectionSamlCreateRequest) Get() *ConnectionSamlCreateRequest {
	return v.value
}

func (v *NullableConnectionSamlCreateRequest) Set(val *ConnectionSamlCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionSamlCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionSamlCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionSamlCreateRequest(val *ConnectionSamlCreateRequest) *NullableConnectionSamlCreateRequest {
	return &NullableConnectionSamlCreateRequest{value: val, isSet: true}
}

func (v NullableConnectionSamlCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionSamlCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



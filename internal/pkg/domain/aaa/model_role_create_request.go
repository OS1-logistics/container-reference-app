/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaadomain

import (
	"encoding/json"
)

// RoleCreateRequest struct for RoleCreateRequest
type RoleCreateRequest struct {
	// Name of the role (each role should be assigned with a name).
	RoleName string `json:"roleName"`
	// Description of the role, for example, role created for admin users.
	Description string `json:"description"`
	// Security level of the the role. Default is OPEN. Used to restrict the access level for the role.
	SecurityLevel *string `json:"securityLevel,omitempty"`
	// Permissions attached with the role.
	Permissions []string `json:"permissions,omitempty"`
	// Boolean value indicates if the role can be granted to other apps/services.
	CanGrantToApps *bool `json:"canGrantToApps,omitempty"`
	// Boolean value indicates if the Role can be granted to user groups.
	CanGrantToUsers *bool `json:"canGrantToUsers,omitempty"`
}

// NewRoleCreateRequest instantiates a new RoleCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleCreateRequest(roleName string, description string) *RoleCreateRequest {
	this := RoleCreateRequest{}
	this.RoleName = roleName
	this.Description = description
	var canGrantToApps bool = false
	this.CanGrantToApps = &canGrantToApps
	var canGrantToUsers bool = true
	this.CanGrantToUsers = &canGrantToUsers
	return &this
}

// NewRoleCreateRequestWithDefaults instantiates a new RoleCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleCreateRequestWithDefaults() *RoleCreateRequest {
	this := RoleCreateRequest{}
	var canGrantToApps bool = false
	this.CanGrantToApps = &canGrantToApps
	var canGrantToUsers bool = true
	this.CanGrantToUsers = &canGrantToUsers
	return &this
}

// GetRoleName returns the RoleName field value
func (o *RoleCreateRequest) GetRoleName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value
// and a boolean to check if the value has been set.
func (o *RoleCreateRequest) GetRoleNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleName, true
}

// SetRoleName sets field value
func (o *RoleCreateRequest) SetRoleName(v string) {
	o.RoleName = v
}

// GetDescription returns the Description field value
func (o *RoleCreateRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *RoleCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *RoleCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetSecurityLevel returns the SecurityLevel field value if set, zero value otherwise.
func (o *RoleCreateRequest) GetSecurityLevel() string {
	if o == nil || o.SecurityLevel == nil {
		var ret string
		return ret
	}
	return *o.SecurityLevel
}

// GetSecurityLevelOk returns a tuple with the SecurityLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleCreateRequest) GetSecurityLevelOk() (*string, bool) {
	if o == nil || o.SecurityLevel == nil {
		return nil, false
	}
	return o.SecurityLevel, true
}

// HasSecurityLevel returns a boolean if a field has been set.
func (o *RoleCreateRequest) HasSecurityLevel() bool {
	if o != nil && o.SecurityLevel != nil {
		return true
	}

	return false
}

// SetSecurityLevel gets a reference to the given string and assigns it to the SecurityLevel field.
func (o *RoleCreateRequest) SetSecurityLevel(v string) {
	o.SecurityLevel = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoleCreateRequest) GetPermissions() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoleCreateRequest) GetPermissionsOk() ([]string, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *RoleCreateRequest) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *RoleCreateRequest) SetPermissions(v []string) {
	o.Permissions = v
}

// GetCanGrantToApps returns the CanGrantToApps field value if set, zero value otherwise.
func (o *RoleCreateRequest) GetCanGrantToApps() bool {
	if o == nil || o.CanGrantToApps == nil {
		var ret bool
		return ret
	}
	return *o.CanGrantToApps
}

// GetCanGrantToAppsOk returns a tuple with the CanGrantToApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleCreateRequest) GetCanGrantToAppsOk() (*bool, bool) {
	if o == nil || o.CanGrantToApps == nil {
		return nil, false
	}
	return o.CanGrantToApps, true
}

// HasCanGrantToApps returns a boolean if a field has been set.
func (o *RoleCreateRequest) HasCanGrantToApps() bool {
	if o != nil && o.CanGrantToApps != nil {
		return true
	}

	return false
}

// SetCanGrantToApps gets a reference to the given bool and assigns it to the CanGrantToApps field.
func (o *RoleCreateRequest) SetCanGrantToApps(v bool) {
	o.CanGrantToApps = &v
}

// GetCanGrantToUsers returns the CanGrantToUsers field value if set, zero value otherwise.
func (o *RoleCreateRequest) GetCanGrantToUsers() bool {
	if o == nil || o.CanGrantToUsers == nil {
		var ret bool
		return ret
	}
	return *o.CanGrantToUsers
}

// GetCanGrantToUsersOk returns a tuple with the CanGrantToUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleCreateRequest) GetCanGrantToUsersOk() (*bool, bool) {
	if o == nil || o.CanGrantToUsers == nil {
		return nil, false
	}
	return o.CanGrantToUsers, true
}

// HasCanGrantToUsers returns a boolean if a field has been set.
func (o *RoleCreateRequest) HasCanGrantToUsers() bool {
	if o != nil && o.CanGrantToUsers != nil {
		return true
	}

	return false
}

// SetCanGrantToUsers gets a reference to the given bool and assigns it to the CanGrantToUsers field.
func (o *RoleCreateRequest) SetCanGrantToUsers(v bool) {
	o.CanGrantToUsers = &v
}

func (o RoleCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["roleName"] = o.RoleName
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if o.SecurityLevel != nil {
		toSerialize["securityLevel"] = o.SecurityLevel
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.CanGrantToApps != nil {
		toSerialize["canGrantToApps"] = o.CanGrantToApps
	}
	if o.CanGrantToUsers != nil {
		toSerialize["canGrantToUsers"] = o.CanGrantToUsers
	}
	return json.Marshal(toSerialize)
}

type NullableRoleCreateRequest struct {
	value *RoleCreateRequest
	isSet bool
}

func (v NullableRoleCreateRequest) Get() *RoleCreateRequest {
	return v.value
}

func (v *NullableRoleCreateRequest) Set(val *RoleCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleCreateRequest(val *RoleCreateRequest) *NullableRoleCreateRequest {
	return &NullableRoleCreateRequest{value: val, isSet: true}
}

func (v NullableRoleCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



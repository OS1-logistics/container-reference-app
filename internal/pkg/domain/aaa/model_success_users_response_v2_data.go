/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaadomain

import (
	"encoding/json"
)

// SuccessUsersResponseV2Data struct for SuccessUsersResponseV2Data
type SuccessUsersResponseV2Data struct {
	Meta *Meta `json:"meta,omitempty"`
	Users []UserResponse `json:"users,omitempty"`
}

// NewSuccessUsersResponseV2Data instantiates a new SuccessUsersResponseV2Data object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuccessUsersResponseV2Data() *SuccessUsersResponseV2Data {
	this := SuccessUsersResponseV2Data{}
	return &this
}

// NewSuccessUsersResponseV2DataWithDefaults instantiates a new SuccessUsersResponseV2Data object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuccessUsersResponseV2DataWithDefaults() *SuccessUsersResponseV2Data {
	this := SuccessUsersResponseV2Data{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *SuccessUsersResponseV2Data) GetMeta() Meta {
	if o == nil || isNil(o.Meta) {
		var ret Meta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuccessUsersResponseV2Data) GetMetaOk() (*Meta, bool) {
	if o == nil || isNil(o.Meta) {
    return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *SuccessUsersResponseV2Data) HasMeta() bool {
	if o != nil && !isNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given Meta and assigns it to the Meta field.
func (o *SuccessUsersResponseV2Data) SetMeta(v Meta) {
	o.Meta = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *SuccessUsersResponseV2Data) GetUsers() []UserResponse {
	if o == nil || isNil(o.Users) {
		var ret []UserResponse
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuccessUsersResponseV2Data) GetUsersOk() ([]UserResponse, bool) {
	if o == nil || isNil(o.Users) {
    return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *SuccessUsersResponseV2Data) HasUsers() bool {
	if o != nil && !isNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []UserResponse and assigns it to the Users field.
func (o *SuccessUsersResponseV2Data) SetUsers(v []UserResponse) {
	o.Users = v
}

func (o SuccessUsersResponseV2Data) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !isNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	return json.Marshal(toSerialize)
}

type NullableSuccessUsersResponseV2Data struct {
	value *SuccessUsersResponseV2Data
	isSet bool
}

func (v NullableSuccessUsersResponseV2Data) Get() *SuccessUsersResponseV2Data {
	return v.value
}

func (v *NullableSuccessUsersResponseV2Data) Set(val *SuccessUsersResponseV2Data) {
	v.value = val
	v.isSet = true
}

func (v NullableSuccessUsersResponseV2Data) IsSet() bool {
	return v.isSet
}

func (v *NullableSuccessUsersResponseV2Data) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuccessUsersResponseV2Data(val *SuccessUsersResponseV2Data) *NullableSuccessUsersResponseV2Data {
	return &NullableSuccessUsersResponseV2Data{value: val, isSet: true}
}

func (v NullableSuccessUsersResponseV2Data) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuccessUsersResponseV2Data) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



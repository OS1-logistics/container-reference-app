/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaadomain

import (
	"encoding/json"
)

// GroupsResponseV2Inner struct for GroupsResponseV2Inner
type GroupsResponseV2Inner struct {
	// Unique id for group assigned at the time of creation.
	GroupId *string `json:"groupId,omitempty"`
	// Name of the group. Group name is unique for application.
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Roles []string `json:"roles,omitempty"`
	IsActive *bool `json:"isActive,omitempty"`
}

// NewGroupsResponseV2Inner instantiates a new GroupsResponseV2Inner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupsResponseV2Inner() *GroupsResponseV2Inner {
	this := GroupsResponseV2Inner{}
	return &this
}

// NewGroupsResponseV2InnerWithDefaults instantiates a new GroupsResponseV2Inner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupsResponseV2InnerWithDefaults() *GroupsResponseV2Inner {
	this := GroupsResponseV2Inner{}
	return &this
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *GroupsResponseV2Inner) GetGroupId() string {
	if o == nil || isNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupsResponseV2Inner) GetGroupIdOk() (*string, bool) {
	if o == nil || isNil(o.GroupId) {
    return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *GroupsResponseV2Inner) HasGroupId() bool {
	if o != nil && !isNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *GroupsResponseV2Inner) SetGroupId(v string) {
	o.GroupId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GroupsResponseV2Inner) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupsResponseV2Inner) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GroupsResponseV2Inner) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GroupsResponseV2Inner) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GroupsResponseV2Inner) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupsResponseV2Inner) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GroupsResponseV2Inner) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GroupsResponseV2Inner) SetDescription(v string) {
	o.Description = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *GroupsResponseV2Inner) GetRoles() []string {
	if o == nil || isNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupsResponseV2Inner) GetRolesOk() ([]string, bool) {
	if o == nil || isNil(o.Roles) {
    return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *GroupsResponseV2Inner) HasRoles() bool {
	if o != nil && !isNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *GroupsResponseV2Inner) SetRoles(v []string) {
	o.Roles = v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *GroupsResponseV2Inner) GetIsActive() bool {
	if o == nil || isNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupsResponseV2Inner) GetIsActiveOk() (*bool, bool) {
	if o == nil || isNil(o.IsActive) {
    return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *GroupsResponseV2Inner) HasIsActive() bool {
	if o != nil && !isNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *GroupsResponseV2Inner) SetIsActive(v bool) {
	o.IsActive = &v
}

func (o GroupsResponseV2Inner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.GroupId) {
		toSerialize["groupId"] = o.GroupId
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !isNil(o.IsActive) {
		toSerialize["isActive"] = o.IsActive
	}
	return json.Marshal(toSerialize)
}

type NullableGroupsResponseV2Inner struct {
	value *GroupsResponseV2Inner
	isSet bool
}

func (v NullableGroupsResponseV2Inner) Get() *GroupsResponseV2Inner {
	return v.value
}

func (v *NullableGroupsResponseV2Inner) Set(val *GroupsResponseV2Inner) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupsResponseV2Inner) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupsResponseV2Inner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupsResponseV2Inner(val *GroupsResponseV2Inner) *NullableGroupsResponseV2Inner {
	return &NullableGroupsResponseV2Inner{value: val, isSet: true}
}

func (v NullableGroupsResponseV2Inner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupsResponseV2Inner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



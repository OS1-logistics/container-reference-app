/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaadomain

import (
	"encoding/json"
)

// UserChangeLogResponseData struct for UserChangeLogResponseData
type UserChangeLogResponseData struct {
	Meta *UserChangeLogResponseDataMeta `json:"meta,omitempty"`
	Log []UserChange `json:"log,omitempty"`
}

// NewUserChangeLogResponseData instantiates a new UserChangeLogResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserChangeLogResponseData() *UserChangeLogResponseData {
	this := UserChangeLogResponseData{}
	return &this
}

// NewUserChangeLogResponseDataWithDefaults instantiates a new UserChangeLogResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserChangeLogResponseDataWithDefaults() *UserChangeLogResponseData {
	this := UserChangeLogResponseData{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *UserChangeLogResponseData) GetMeta() UserChangeLogResponseDataMeta {
	if o == nil || isNil(o.Meta) {
		var ret UserChangeLogResponseDataMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserChangeLogResponseData) GetMetaOk() (*UserChangeLogResponseDataMeta, bool) {
	if o == nil || isNil(o.Meta) {
    return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *UserChangeLogResponseData) HasMeta() bool {
	if o != nil && !isNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given UserChangeLogResponseDataMeta and assigns it to the Meta field.
func (o *UserChangeLogResponseData) SetMeta(v UserChangeLogResponseDataMeta) {
	o.Meta = &v
}

// GetLog returns the Log field value if set, zero value otherwise.
func (o *UserChangeLogResponseData) GetLog() []UserChange {
	if o == nil || isNil(o.Log) {
		var ret []UserChange
		return ret
	}
	return o.Log
}

// GetLogOk returns a tuple with the Log field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserChangeLogResponseData) GetLogOk() ([]UserChange, bool) {
	if o == nil || isNil(o.Log) {
    return nil, false
	}
	return o.Log, true
}

// HasLog returns a boolean if a field has been set.
func (o *UserChangeLogResponseData) HasLog() bool {
	if o != nil && !isNil(o.Log) {
		return true
	}

	return false
}

// SetLog gets a reference to the given []UserChange and assigns it to the Log field.
func (o *UserChangeLogResponseData) SetLog(v []UserChange) {
	o.Log = v
}

func (o UserChangeLogResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !isNil(o.Log) {
		toSerialize["log"] = o.Log
	}
	return json.Marshal(toSerialize)
}

type NullableUserChangeLogResponseData struct {
	value *UserChangeLogResponseData
	isSet bool
}

func (v NullableUserChangeLogResponseData) Get() *UserChangeLogResponseData {
	return v.value
}

func (v *NullableUserChangeLogResponseData) Set(val *UserChangeLogResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableUserChangeLogResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableUserChangeLogResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserChangeLogResponseData(val *UserChangeLogResponseData) *NullableUserChangeLogResponseData {
	return &NullableUserChangeLogResponseData{value: val, isSet: true}
}

func (v NullableUserChangeLogResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserChangeLogResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



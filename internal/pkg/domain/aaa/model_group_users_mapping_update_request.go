/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaadomain

import (
	"encoding/json"
)

// GroupUsersMappingUpdateRequest struct for GroupUsersMappingUpdateRequest
type GroupUsersMappingUpdateRequest struct {
	// List of user IDs.
	Users []string `json:"users"`
	// This is used to add or remove users to a group Membership. Default value: true. membership=true => Add specified users to the group membership=false => remove specified users from group.
	Membership *bool `json:"membership,omitempty"`
}

// NewGroupUsersMappingUpdateRequest instantiates a new GroupUsersMappingUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupUsersMappingUpdateRequest(users []string) *GroupUsersMappingUpdateRequest {
	this := GroupUsersMappingUpdateRequest{}
	this.Users = users
	var membership bool = true
	this.Membership = &membership
	return &this
}

// NewGroupUsersMappingUpdateRequestWithDefaults instantiates a new GroupUsersMappingUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupUsersMappingUpdateRequestWithDefaults() *GroupUsersMappingUpdateRequest {
	this := GroupUsersMappingUpdateRequest{}
	var membership bool = true
	this.Membership = &membership
	return &this
}

// GetUsers returns the Users field value
func (o *GroupUsersMappingUpdateRequest) GetUsers() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Users
}

// GetUsersOk returns a tuple with the Users field value
// and a boolean to check if the value has been set.
func (o *GroupUsersMappingUpdateRequest) GetUsersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Users, true
}

// SetUsers sets field value
func (o *GroupUsersMappingUpdateRequest) SetUsers(v []string) {
	o.Users = v
}

// GetMembership returns the Membership field value if set, zero value otherwise.
func (o *GroupUsersMappingUpdateRequest) GetMembership() bool {
	if o == nil || o.Membership == nil {
		var ret bool
		return ret
	}
	return *o.Membership
}

// GetMembershipOk returns a tuple with the Membership field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupUsersMappingUpdateRequest) GetMembershipOk() (*bool, bool) {
	if o == nil || o.Membership == nil {
		return nil, false
	}
	return o.Membership, true
}

// HasMembership returns a boolean if a field has been set.
func (o *GroupUsersMappingUpdateRequest) HasMembership() bool {
	if o != nil && o.Membership != nil {
		return true
	}

	return false
}

// SetMembership gets a reference to the given bool and assigns it to the Membership field.
func (o *GroupUsersMappingUpdateRequest) SetMembership(v bool) {
	o.Membership = &v
}

func (o GroupUsersMappingUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["users"] = o.Users
	}
	if o.Membership != nil {
		toSerialize["membership"] = o.Membership
	}
	return json.Marshal(toSerialize)
}

type NullableGroupUsersMappingUpdateRequest struct {
	value *GroupUsersMappingUpdateRequest
	isSet bool
}

func (v NullableGroupUsersMappingUpdateRequest) Get() *GroupUsersMappingUpdateRequest {
	return v.value
}

func (v *NullableGroupUsersMappingUpdateRequest) Set(val *GroupUsersMappingUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupUsersMappingUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupUsersMappingUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupUsersMappingUpdateRequest(val *GroupUsersMappingUpdateRequest) *NullableGroupUsersMappingUpdateRequest {
	return &NullableGroupUsersMappingUpdateRequest{value: val, isSet: true}
}

func (v NullableGroupUsersMappingUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupUsersMappingUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



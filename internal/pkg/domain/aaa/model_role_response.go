/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaadomain

import (
	"encoding/json"
)

// RoleResponse struct for RoleResponse
type RoleResponse struct {
	// Boolean value indicates if the role can be granted to other apps or services.
	CanGrantToApps *bool `json:"canGrantToApps,omitempty"`
	// Unique ID assigned to each role at the time of creation.
	RoleId *string `json:"roleId,omitempty"`
	// Name of  the role
	RoleName *string `json:"roleName,omitempty"`
	// Description of the role (for example, role created for admin users).
	Description *string `json:"description,omitempty"`
	// Permissions attached with the role.
	Permissions []string `json:"permissions,omitempty"`
	// When `isActive` = False OR `isDeleted` = False, the role will be ignored for granting permissions.
	IsActive *bool `json:"isActive,omitempty"`
	// Whether the role is deleted or not. When `isActive` = False OR `isDeleted` = False, the role will be ignored for granting permissions.
	IsDeleted *bool `json:"isDeleted,omitempty"`
	// Boolean value indicates if this Role can be granted to user groups.
	CanGrantToUsers *bool `json:"canGrantToUsers,omitempty"`
	// Security level of the the role. Default is OPEN. Used to restrict the access level for the role.
	SecurityLevel *string `json:"securityLevel,omitempty"`
}

// NewRoleResponse instantiates a new RoleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleResponse() *RoleResponse {
	this := RoleResponse{}
	return &this
}

// NewRoleResponseWithDefaults instantiates a new RoleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleResponseWithDefaults() *RoleResponse {
	this := RoleResponse{}
	return &this
}

// GetCanGrantToApps returns the CanGrantToApps field value if set, zero value otherwise.
func (o *RoleResponse) GetCanGrantToApps() bool {
	if o == nil || o.CanGrantToApps == nil {
		var ret bool
		return ret
	}
	return *o.CanGrantToApps
}

// GetCanGrantToAppsOk returns a tuple with the CanGrantToApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleResponse) GetCanGrantToAppsOk() (*bool, bool) {
	if o == nil || o.CanGrantToApps == nil {
		return nil, false
	}
	return o.CanGrantToApps, true
}

// HasCanGrantToApps returns a boolean if a field has been set.
func (o *RoleResponse) HasCanGrantToApps() bool {
	if o != nil && o.CanGrantToApps != nil {
		return true
	}

	return false
}

// SetCanGrantToApps gets a reference to the given bool and assigns it to the CanGrantToApps field.
func (o *RoleResponse) SetCanGrantToApps(v bool) {
	o.CanGrantToApps = &v
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *RoleResponse) GetRoleId() string {
	if o == nil || o.RoleId == nil {
		var ret string
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleResponse) GetRoleIdOk() (*string, bool) {
	if o == nil || o.RoleId == nil {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *RoleResponse) HasRoleId() bool {
	if o != nil && o.RoleId != nil {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given string and assigns it to the RoleId field.
func (o *RoleResponse) SetRoleId(v string) {
	o.RoleId = &v
}

// GetRoleName returns the RoleName field value if set, zero value otherwise.
func (o *RoleResponse) GetRoleName() string {
	if o == nil || o.RoleName == nil {
		var ret string
		return ret
	}
	return *o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleResponse) GetRoleNameOk() (*string, bool) {
	if o == nil || o.RoleName == nil {
		return nil, false
	}
	return o.RoleName, true
}

// HasRoleName returns a boolean if a field has been set.
func (o *RoleResponse) HasRoleName() bool {
	if o != nil && o.RoleName != nil {
		return true
	}

	return false
}

// SetRoleName gets a reference to the given string and assigns it to the RoleName field.
func (o *RoleResponse) SetRoleName(v string) {
	o.RoleName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RoleResponse) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RoleResponse) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RoleResponse) SetDescription(v string) {
	o.Description = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoleResponse) GetPermissions() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoleResponse) GetPermissionsOk() ([]string, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *RoleResponse) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *RoleResponse) SetPermissions(v []string) {
	o.Permissions = v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *RoleResponse) GetIsActive() bool {
	if o == nil || o.IsActive == nil {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleResponse) GetIsActiveOk() (*bool, bool) {
	if o == nil || o.IsActive == nil {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *RoleResponse) HasIsActive() bool {
	if o != nil && o.IsActive != nil {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *RoleResponse) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *RoleResponse) GetIsDeleted() bool {
	if o == nil || o.IsDeleted == nil {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleResponse) GetIsDeletedOk() (*bool, bool) {
	if o == nil || o.IsDeleted == nil {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *RoleResponse) HasIsDeleted() bool {
	if o != nil && o.IsDeleted != nil {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *RoleResponse) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetCanGrantToUsers returns the CanGrantToUsers field value if set, zero value otherwise.
func (o *RoleResponse) GetCanGrantToUsers() bool {
	if o == nil || o.CanGrantToUsers == nil {
		var ret bool
		return ret
	}
	return *o.CanGrantToUsers
}

// GetCanGrantToUsersOk returns a tuple with the CanGrantToUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleResponse) GetCanGrantToUsersOk() (*bool, bool) {
	if o == nil || o.CanGrantToUsers == nil {
		return nil, false
	}
	return o.CanGrantToUsers, true
}

// HasCanGrantToUsers returns a boolean if a field has been set.
func (o *RoleResponse) HasCanGrantToUsers() bool {
	if o != nil && o.CanGrantToUsers != nil {
		return true
	}

	return false
}

// SetCanGrantToUsers gets a reference to the given bool and assigns it to the CanGrantToUsers field.
func (o *RoleResponse) SetCanGrantToUsers(v bool) {
	o.CanGrantToUsers = &v
}

// GetSecurityLevel returns the SecurityLevel field value if set, zero value otherwise.
func (o *RoleResponse) GetSecurityLevel() string {
	if o == nil || o.SecurityLevel == nil {
		var ret string
		return ret
	}
	return *o.SecurityLevel
}

// GetSecurityLevelOk returns a tuple with the SecurityLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleResponse) GetSecurityLevelOk() (*string, bool) {
	if o == nil || o.SecurityLevel == nil {
		return nil, false
	}
	return o.SecurityLevel, true
}

// HasSecurityLevel returns a boolean if a field has been set.
func (o *RoleResponse) HasSecurityLevel() bool {
	if o != nil && o.SecurityLevel != nil {
		return true
	}

	return false
}

// SetSecurityLevel gets a reference to the given string and assigns it to the SecurityLevel field.
func (o *RoleResponse) SetSecurityLevel(v string) {
	o.SecurityLevel = &v
}

func (o RoleResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CanGrantToApps != nil {
		toSerialize["canGrantToApps"] = o.CanGrantToApps
	}
	if o.RoleId != nil {
		toSerialize["roleId"] = o.RoleId
	}
	if o.RoleName != nil {
		toSerialize["roleName"] = o.RoleName
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.IsActive != nil {
		toSerialize["isActive"] = o.IsActive
	}
	if o.IsDeleted != nil {
		toSerialize["isDeleted"] = o.IsDeleted
	}
	if o.CanGrantToUsers != nil {
		toSerialize["canGrantToUsers"] = o.CanGrantToUsers
	}
	if o.SecurityLevel != nil {
		toSerialize["securityLevel"] = o.SecurityLevel
	}
	return json.Marshal(toSerialize)
}

type NullableRoleResponse struct {
	value *RoleResponse
	isSet bool
}

func (v NullableRoleResponse) Get() *RoleResponse {
	return v.value
}

func (v *NullableRoleResponse) Set(val *RoleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleResponse(val *RoleResponse) *NullableRoleResponse {
	return &NullableRoleResponse{value: val, isSet: true}
}

func (v NullableRoleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaadomain

import (
	"encoding/json"
)

// ClientCredentialsRequest struct for ClientCredentialsRequest
type ClientCredentialsRequest struct {
	// Your application's Client ID.
	ClientId string `json:"clientId"`
	// Your application's Client Secret.
	ClientSecret string `json:"clientSecret"`
	// App ID for which you need token. Not required in keycloak API calls.
	Audience NullableString `json:"audience,omitempty"`
}

// NewClientCredentialsRequest instantiates a new ClientCredentialsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientCredentialsRequest(clientId string, clientSecret string) *ClientCredentialsRequest {
	this := ClientCredentialsRequest{}
	this.ClientId = clientId
	this.ClientSecret = clientSecret
	return &this
}

// NewClientCredentialsRequestWithDefaults instantiates a new ClientCredentialsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientCredentialsRequestWithDefaults() *ClientCredentialsRequest {
	this := ClientCredentialsRequest{}
	return &this
}

// GetClientId returns the ClientId field value
func (o *ClientCredentialsRequest) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *ClientCredentialsRequest) GetClientIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *ClientCredentialsRequest) SetClientId(v string) {
	o.ClientId = v
}

// GetClientSecret returns the ClientSecret field value
func (o *ClientCredentialsRequest) GetClientSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value
// and a boolean to check if the value has been set.
func (o *ClientCredentialsRequest) GetClientSecretOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ClientSecret, true
}

// SetClientSecret sets field value
func (o *ClientCredentialsRequest) SetClientSecret(v string) {
	o.ClientSecret = v
}

// GetAudience returns the Audience field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCredentialsRequest) GetAudience() string {
	if o == nil || isNil(o.Audience.Get()) {
		var ret string
		return ret
	}
	return *o.Audience.Get()
}

// GetAudienceOk returns a tuple with the Audience field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCredentialsRequest) GetAudienceOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Audience.Get(), o.Audience.IsSet()
}

// HasAudience returns a boolean if a field has been set.
func (o *ClientCredentialsRequest) HasAudience() bool {
	if o != nil && o.Audience.IsSet() {
		return true
	}

	return false
}

// SetAudience gets a reference to the given NullableString and assigns it to the Audience field.
func (o *ClientCredentialsRequest) SetAudience(v string) {
	o.Audience.Set(&v)
}
// SetAudienceNil sets the value for Audience to be an explicit nil
func (o *ClientCredentialsRequest) SetAudienceNil() {
	o.Audience.Set(nil)
}

// UnsetAudience ensures that no value is present for Audience, not even an explicit nil
func (o *ClientCredentialsRequest) UnsetAudience() {
	o.Audience.Unset()
}

func (o ClientCredentialsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["clientId"] = o.ClientId
	}
	if true {
		toSerialize["clientSecret"] = o.ClientSecret
	}
	if o.Audience.IsSet() {
		toSerialize["audience"] = o.Audience.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableClientCredentialsRequest struct {
	value *ClientCredentialsRequest
	isSet bool
}

func (v NullableClientCredentialsRequest) Get() *ClientCredentialsRequest {
	return v.value
}

func (v *NullableClientCredentialsRequest) Set(val *ClientCredentialsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableClientCredentialsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableClientCredentialsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientCredentialsRequest(val *ClientCredentialsRequest) *NullableClientCredentialsRequest {
	return &NullableClientCredentialsRequest{value: val, isSet: true}
}

func (v NullableClientCredentialsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientCredentialsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



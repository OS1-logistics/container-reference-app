/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaadomain

import (
	"encoding/json"
)

// UserAppMappingResponse struct for UserAppMappingResponse
type UserAppMappingResponse struct {
	// ID of the user.
	UserId *string `json:"userId,omitempty"`
	Apps []string `json:"apps,omitempty"`
}

// NewUserAppMappingResponse instantiates a new UserAppMappingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserAppMappingResponse() *UserAppMappingResponse {
	this := UserAppMappingResponse{}
	return &this
}

// NewUserAppMappingResponseWithDefaults instantiates a new UserAppMappingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserAppMappingResponseWithDefaults() *UserAppMappingResponse {
	this := UserAppMappingResponse{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *UserAppMappingResponse) GetUserId() string {
	if o == nil || isNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAppMappingResponse) GetUserIdOk() (*string, bool) {
	if o == nil || isNil(o.UserId) {
    return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *UserAppMappingResponse) HasUserId() bool {
	if o != nil && !isNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *UserAppMappingResponse) SetUserId(v string) {
	o.UserId = &v
}

// GetApps returns the Apps field value if set, zero value otherwise.
func (o *UserAppMappingResponse) GetApps() []string {
	if o == nil || isNil(o.Apps) {
		var ret []string
		return ret
	}
	return o.Apps
}

// GetAppsOk returns a tuple with the Apps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAppMappingResponse) GetAppsOk() ([]string, bool) {
	if o == nil || isNil(o.Apps) {
    return nil, false
	}
	return o.Apps, true
}

// HasApps returns a boolean if a field has been set.
func (o *UserAppMappingResponse) HasApps() bool {
	if o != nil && !isNil(o.Apps) {
		return true
	}

	return false
}

// SetApps gets a reference to the given []string and assigns it to the Apps field.
func (o *UserAppMappingResponse) SetApps(v []string) {
	o.Apps = v
}

func (o UserAppMappingResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !isNil(o.Apps) {
		toSerialize["apps"] = o.Apps
	}
	return json.Marshal(toSerialize)
}

type NullableUserAppMappingResponse struct {
	value *UserAppMappingResponse
	isSet bool
}

func (v NullableUserAppMappingResponse) Get() *UserAppMappingResponse {
	return v.value
}

func (v *NullableUserAppMappingResponse) Set(val *UserAppMappingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUserAppMappingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUserAppMappingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserAppMappingResponse(val *UserAppMappingResponse) *NullableUserAppMappingResponse {
	return &NullableUserAppMappingResponse{value: val, isSet: true}
}

func (v NullableUserAppMappingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserAppMappingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



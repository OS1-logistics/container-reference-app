/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaadomain

import (
	"encoding/json"
)

// UserCreateRequest struct for UserCreateRequest
type UserCreateRequest struct {
	// `userId` in UUID format.
	UserId *string `json:"userId,omitempty"`
	// Email of the user.
	Email *string `json:"email,omitempty"`
	PrimaryMobile *MobileNumber `json:"primaryMobile,omitempty"`
	// First name of the user.
	FirstName string `json:"firstName"`
	// Middle name of the user.
	MiddleName NullableString `json:"middleName,omitempty"`
	// Last name of the user.
	LastName *string `json:"lastName,omitempty"`
	SecondaryMobile *MobileNumber `json:"secondaryMobile,omitempty"`
	// ID of the participant.
	ParticipantId NullableString `json:"participantId,omitempty"`
	AllowSocialAuth *SocialAuth `json:"allowSocialAuth,omitempty"`
	// A boolean value that specifies whether SAML 2.0 Login is allowed.
	AllowSAMLAuth NullableBool `json:"allowSAMLAuth,omitempty"`
	SamlConnector NullableString `json:"samlConnector,omitempty"`
	SamlUserId NullableString `json:"samlUserId,omitempty"`
}

// NewUserCreateRequest instantiates a new UserCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserCreateRequest(firstName string) *UserCreateRequest {
	this := UserCreateRequest{}
	this.FirstName = firstName
	return &this
}

// NewUserCreateRequestWithDefaults instantiates a new UserCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserCreateRequestWithDefaults() *UserCreateRequest {
	this := UserCreateRequest{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *UserCreateRequest) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreateRequest) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *UserCreateRequest) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *UserCreateRequest) SetUserId(v string) {
	o.UserId = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UserCreateRequest) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreateRequest) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UserCreateRequest) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UserCreateRequest) SetEmail(v string) {
	o.Email = &v
}

// GetPrimaryMobile returns the PrimaryMobile field value if set, zero value otherwise.
func (o *UserCreateRequest) GetPrimaryMobile() MobileNumber {
	if o == nil || o.PrimaryMobile == nil {
		var ret MobileNumber
		return ret
	}
	return *o.PrimaryMobile
}

// GetPrimaryMobileOk returns a tuple with the PrimaryMobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreateRequest) GetPrimaryMobileOk() (*MobileNumber, bool) {
	if o == nil || o.PrimaryMobile == nil {
		return nil, false
	}
	return o.PrimaryMobile, true
}

// HasPrimaryMobile returns a boolean if a field has been set.
func (o *UserCreateRequest) HasPrimaryMobile() bool {
	if o != nil && o.PrimaryMobile != nil {
		return true
	}

	return false
}

// SetPrimaryMobile gets a reference to the given MobileNumber and assigns it to the PrimaryMobile field.
func (o *UserCreateRequest) SetPrimaryMobile(v MobileNumber) {
	o.PrimaryMobile = &v
}

// GetFirstName returns the FirstName field value
func (o *UserCreateRequest) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *UserCreateRequest) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *UserCreateRequest) SetFirstName(v string) {
	o.FirstName = v
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserCreateRequest) GetMiddleName() string {
	if o == nil || o.MiddleName.Get() == nil {
		var ret string
		return ret
	}
	return *o.MiddleName.Get()
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserCreateRequest) GetMiddleNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MiddleName.Get(), o.MiddleName.IsSet()
}

// HasMiddleName returns a boolean if a field has been set.
func (o *UserCreateRequest) HasMiddleName() bool {
	if o != nil && o.MiddleName.IsSet() {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given NullableString and assigns it to the MiddleName field.
func (o *UserCreateRequest) SetMiddleName(v string) {
	o.MiddleName.Set(&v)
}
// SetMiddleNameNil sets the value for MiddleName to be an explicit nil
func (o *UserCreateRequest) SetMiddleNameNil() {
	o.MiddleName.Set(nil)
}

// UnsetMiddleName ensures that no value is present for MiddleName, not even an explicit nil
func (o *UserCreateRequest) UnsetMiddleName() {
	o.MiddleName.Unset()
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *UserCreateRequest) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreateRequest) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *UserCreateRequest) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *UserCreateRequest) SetLastName(v string) {
	o.LastName = &v
}

// GetSecondaryMobile returns the SecondaryMobile field value if set, zero value otherwise.
func (o *UserCreateRequest) GetSecondaryMobile() MobileNumber {
	if o == nil || o.SecondaryMobile == nil {
		var ret MobileNumber
		return ret
	}
	return *o.SecondaryMobile
}

// GetSecondaryMobileOk returns a tuple with the SecondaryMobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreateRequest) GetSecondaryMobileOk() (*MobileNumber, bool) {
	if o == nil || o.SecondaryMobile == nil {
		return nil, false
	}
	return o.SecondaryMobile, true
}

// HasSecondaryMobile returns a boolean if a field has been set.
func (o *UserCreateRequest) HasSecondaryMobile() bool {
	if o != nil && o.SecondaryMobile != nil {
		return true
	}

	return false
}

// SetSecondaryMobile gets a reference to the given MobileNumber and assigns it to the SecondaryMobile field.
func (o *UserCreateRequest) SetSecondaryMobile(v MobileNumber) {
	o.SecondaryMobile = &v
}

// GetParticipantId returns the ParticipantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserCreateRequest) GetParticipantId() string {
	if o == nil || o.ParticipantId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ParticipantId.Get()
}

// GetParticipantIdOk returns a tuple with the ParticipantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserCreateRequest) GetParticipantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParticipantId.Get(), o.ParticipantId.IsSet()
}

// HasParticipantId returns a boolean if a field has been set.
func (o *UserCreateRequest) HasParticipantId() bool {
	if o != nil && o.ParticipantId.IsSet() {
		return true
	}

	return false
}

// SetParticipantId gets a reference to the given NullableString and assigns it to the ParticipantId field.
func (o *UserCreateRequest) SetParticipantId(v string) {
	o.ParticipantId.Set(&v)
}
// SetParticipantIdNil sets the value for ParticipantId to be an explicit nil
func (o *UserCreateRequest) SetParticipantIdNil() {
	o.ParticipantId.Set(nil)
}

// UnsetParticipantId ensures that no value is present for ParticipantId, not even an explicit nil
func (o *UserCreateRequest) UnsetParticipantId() {
	o.ParticipantId.Unset()
}

// GetAllowSocialAuth returns the AllowSocialAuth field value if set, zero value otherwise.
func (o *UserCreateRequest) GetAllowSocialAuth() SocialAuth {
	if o == nil || o.AllowSocialAuth == nil {
		var ret SocialAuth
		return ret
	}
	return *o.AllowSocialAuth
}

// GetAllowSocialAuthOk returns a tuple with the AllowSocialAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreateRequest) GetAllowSocialAuthOk() (*SocialAuth, bool) {
	if o == nil || o.AllowSocialAuth == nil {
		return nil, false
	}
	return o.AllowSocialAuth, true
}

// HasAllowSocialAuth returns a boolean if a field has been set.
func (o *UserCreateRequest) HasAllowSocialAuth() bool {
	if o != nil && o.AllowSocialAuth != nil {
		return true
	}

	return false
}

// SetAllowSocialAuth gets a reference to the given SocialAuth and assigns it to the AllowSocialAuth field.
func (o *UserCreateRequest) SetAllowSocialAuth(v SocialAuth) {
	o.AllowSocialAuth = &v
}

// GetAllowSAMLAuth returns the AllowSAMLAuth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserCreateRequest) GetAllowSAMLAuth() bool {
	if o == nil || o.AllowSAMLAuth.Get() == nil {
		var ret bool
		return ret
	}
	return *o.AllowSAMLAuth.Get()
}

// GetAllowSAMLAuthOk returns a tuple with the AllowSAMLAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserCreateRequest) GetAllowSAMLAuthOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowSAMLAuth.Get(), o.AllowSAMLAuth.IsSet()
}

// HasAllowSAMLAuth returns a boolean if a field has been set.
func (o *UserCreateRequest) HasAllowSAMLAuth() bool {
	if o != nil && o.AllowSAMLAuth.IsSet() {
		return true
	}

	return false
}

// SetAllowSAMLAuth gets a reference to the given NullableBool and assigns it to the AllowSAMLAuth field.
func (o *UserCreateRequest) SetAllowSAMLAuth(v bool) {
	o.AllowSAMLAuth.Set(&v)
}
// SetAllowSAMLAuthNil sets the value for AllowSAMLAuth to be an explicit nil
func (o *UserCreateRequest) SetAllowSAMLAuthNil() {
	o.AllowSAMLAuth.Set(nil)
}

// UnsetAllowSAMLAuth ensures that no value is present for AllowSAMLAuth, not even an explicit nil
func (o *UserCreateRequest) UnsetAllowSAMLAuth() {
	o.AllowSAMLAuth.Unset()
}

// GetSamlConnector returns the SamlConnector field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserCreateRequest) GetSamlConnector() string {
	if o == nil || o.SamlConnector.Get() == nil {
		var ret string
		return ret
	}
	return *o.SamlConnector.Get()
}

// GetSamlConnectorOk returns a tuple with the SamlConnector field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserCreateRequest) GetSamlConnectorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SamlConnector.Get(), o.SamlConnector.IsSet()
}

// HasSamlConnector returns a boolean if a field has been set.
func (o *UserCreateRequest) HasSamlConnector() bool {
	if o != nil && o.SamlConnector.IsSet() {
		return true
	}

	return false
}

// SetSamlConnector gets a reference to the given NullableString and assigns it to the SamlConnector field.
func (o *UserCreateRequest) SetSamlConnector(v string) {
	o.SamlConnector.Set(&v)
}
// SetSamlConnectorNil sets the value for SamlConnector to be an explicit nil
func (o *UserCreateRequest) SetSamlConnectorNil() {
	o.SamlConnector.Set(nil)
}

// UnsetSamlConnector ensures that no value is present for SamlConnector, not even an explicit nil
func (o *UserCreateRequest) UnsetSamlConnector() {
	o.SamlConnector.Unset()
}

// GetSamlUserId returns the SamlUserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserCreateRequest) GetSamlUserId() string {
	if o == nil || o.SamlUserId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SamlUserId.Get()
}

// GetSamlUserIdOk returns a tuple with the SamlUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserCreateRequest) GetSamlUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SamlUserId.Get(), o.SamlUserId.IsSet()
}

// HasSamlUserId returns a boolean if a field has been set.
func (o *UserCreateRequest) HasSamlUserId() bool {
	if o != nil && o.SamlUserId.IsSet() {
		return true
	}

	return false
}

// SetSamlUserId gets a reference to the given NullableString and assigns it to the SamlUserId field.
func (o *UserCreateRequest) SetSamlUserId(v string) {
	o.SamlUserId.Set(&v)
}
// SetSamlUserIdNil sets the value for SamlUserId to be an explicit nil
func (o *UserCreateRequest) SetSamlUserIdNil() {
	o.SamlUserId.Set(nil)
}

// UnsetSamlUserId ensures that no value is present for SamlUserId, not even an explicit nil
func (o *UserCreateRequest) UnsetSamlUserId() {
	o.SamlUserId.Unset()
}

func (o UserCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.PrimaryMobile != nil {
		toSerialize["primaryMobile"] = o.PrimaryMobile
	}
	if true {
		toSerialize["firstName"] = o.FirstName
	}
	if o.MiddleName.IsSet() {
		toSerialize["middleName"] = o.MiddleName.Get()
	}
	if o.LastName != nil {
		toSerialize["lastName"] = o.LastName
	}
	if o.SecondaryMobile != nil {
		toSerialize["secondaryMobile"] = o.SecondaryMobile
	}
	if o.ParticipantId.IsSet() {
		toSerialize["participantId"] = o.ParticipantId.Get()
	}
	if o.AllowSocialAuth != nil {
		toSerialize["allowSocialAuth"] = o.AllowSocialAuth
	}
	if o.AllowSAMLAuth.IsSet() {
		toSerialize["allowSAMLAuth"] = o.AllowSAMLAuth.Get()
	}
	if o.SamlConnector.IsSet() {
		toSerialize["samlConnector"] = o.SamlConnector.Get()
	}
	if o.SamlUserId.IsSet() {
		toSerialize["samlUserId"] = o.SamlUserId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableUserCreateRequest struct {
	value *UserCreateRequest
	isSet bool
}

func (v NullableUserCreateRequest) Get() *UserCreateRequest {
	return v.value
}

func (v *NullableUserCreateRequest) Set(val *UserCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserCreateRequest(val *UserCreateRequest) *NullableUserCreateRequest {
	return &NullableUserCreateRequest{value: val, isSet: true}
}

func (v NullableUserCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



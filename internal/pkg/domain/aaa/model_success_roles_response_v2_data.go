/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaadomain

import (
	"encoding/json"
)

// SuccessRolesResponseV2Data struct for SuccessRolesResponseV2Data
type SuccessRolesResponseV2Data struct {
	Meta *Meta `json:"meta,omitempty"`
	Roles []RoleResponse `json:"roles,omitempty"`
}

// NewSuccessRolesResponseV2Data instantiates a new SuccessRolesResponseV2Data object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuccessRolesResponseV2Data() *SuccessRolesResponseV2Data {
	this := SuccessRolesResponseV2Data{}
	return &this
}

// NewSuccessRolesResponseV2DataWithDefaults instantiates a new SuccessRolesResponseV2Data object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuccessRolesResponseV2DataWithDefaults() *SuccessRolesResponseV2Data {
	this := SuccessRolesResponseV2Data{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *SuccessRolesResponseV2Data) GetMeta() Meta {
	if o == nil || isNil(o.Meta) {
		var ret Meta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuccessRolesResponseV2Data) GetMetaOk() (*Meta, bool) {
	if o == nil || isNil(o.Meta) {
    return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *SuccessRolesResponseV2Data) HasMeta() bool {
	if o != nil && !isNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given Meta and assigns it to the Meta field.
func (o *SuccessRolesResponseV2Data) SetMeta(v Meta) {
	o.Meta = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *SuccessRolesResponseV2Data) GetRoles() []RoleResponse {
	if o == nil || isNil(o.Roles) {
		var ret []RoleResponse
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuccessRolesResponseV2Data) GetRolesOk() ([]RoleResponse, bool) {
	if o == nil || isNil(o.Roles) {
    return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *SuccessRolesResponseV2Data) HasRoles() bool {
	if o != nil && !isNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []RoleResponse and assigns it to the Roles field.
func (o *SuccessRolesResponseV2Data) SetRoles(v []RoleResponse) {
	o.Roles = v
}

func (o SuccessRolesResponseV2Data) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !isNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	return json.Marshal(toSerialize)
}

type NullableSuccessRolesResponseV2Data struct {
	value *SuccessRolesResponseV2Data
	isSet bool
}

func (v NullableSuccessRolesResponseV2Data) Get() *SuccessRolesResponseV2Data {
	return v.value
}

func (v *NullableSuccessRolesResponseV2Data) Set(val *SuccessRolesResponseV2Data) {
	v.value = val
	v.isSet = true
}

func (v NullableSuccessRolesResponseV2Data) IsSet() bool {
	return v.isSet
}

func (v *NullableSuccessRolesResponseV2Data) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuccessRolesResponseV2Data(val *SuccessRolesResponseV2Data) *NullableSuccessRolesResponseV2Data {
	return &NullableSuccessRolesResponseV2Data{value: val, isSet: true}
}

func (v NullableSuccessRolesResponseV2Data) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuccessRolesResponseV2Data) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



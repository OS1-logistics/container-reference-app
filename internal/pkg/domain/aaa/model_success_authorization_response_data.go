/*
Authentication And Authorization (AAA) Service

This swagger documentation provides all AAA API details. AAA service provides authentication and authorization capabilities for users.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aaadomain

import (
	"encoding/json"
)

// SuccessAuthorizationResponseData struct for SuccessAuthorizationResponseData
type SuccessAuthorizationResponseData struct {
	// Generated access token.
	AccessToken *string `json:"accessToken,omitempty"`
	TokenType *string `json:"tokenType,omitempty"`
	// Expiry time in seconds.
	ExpiresIn *float32 `json:"expiresIn,omitempty"`
}

// NewSuccessAuthorizationResponseData instantiates a new SuccessAuthorizationResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuccessAuthorizationResponseData() *SuccessAuthorizationResponseData {
	this := SuccessAuthorizationResponseData{}
	var tokenType string = "Bearer"
	this.TokenType = &tokenType
	return &this
}

// NewSuccessAuthorizationResponseDataWithDefaults instantiates a new SuccessAuthorizationResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuccessAuthorizationResponseDataWithDefaults() *SuccessAuthorizationResponseData {
	this := SuccessAuthorizationResponseData{}
	var tokenType string = "Bearer"
	this.TokenType = &tokenType
	return &this
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *SuccessAuthorizationResponseData) GetAccessToken() string {
	if o == nil || isNil(o.AccessToken) {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuccessAuthorizationResponseData) GetAccessTokenOk() (*string, bool) {
	if o == nil || isNil(o.AccessToken) {
    return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *SuccessAuthorizationResponseData) HasAccessToken() bool {
	if o != nil && !isNil(o.AccessToken) {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *SuccessAuthorizationResponseData) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *SuccessAuthorizationResponseData) GetTokenType() string {
	if o == nil || isNil(o.TokenType) {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuccessAuthorizationResponseData) GetTokenTypeOk() (*string, bool) {
	if o == nil || isNil(o.TokenType) {
    return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *SuccessAuthorizationResponseData) HasTokenType() bool {
	if o != nil && !isNil(o.TokenType) {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *SuccessAuthorizationResponseData) SetTokenType(v string) {
	o.TokenType = &v
}

// GetExpiresIn returns the ExpiresIn field value if set, zero value otherwise.
func (o *SuccessAuthorizationResponseData) GetExpiresIn() float32 {
	if o == nil || isNil(o.ExpiresIn) {
		var ret float32
		return ret
	}
	return *o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuccessAuthorizationResponseData) GetExpiresInOk() (*float32, bool) {
	if o == nil || isNil(o.ExpiresIn) {
    return nil, false
	}
	return o.ExpiresIn, true
}

// HasExpiresIn returns a boolean if a field has been set.
func (o *SuccessAuthorizationResponseData) HasExpiresIn() bool {
	if o != nil && !isNil(o.ExpiresIn) {
		return true
	}

	return false
}

// SetExpiresIn gets a reference to the given float32 and assigns it to the ExpiresIn field.
func (o *SuccessAuthorizationResponseData) SetExpiresIn(v float32) {
	o.ExpiresIn = &v
}

func (o SuccessAuthorizationResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AccessToken) {
		toSerialize["accessToken"] = o.AccessToken
	}
	if !isNil(o.TokenType) {
		toSerialize["tokenType"] = o.TokenType
	}
	if !isNil(o.ExpiresIn) {
		toSerialize["expiresIn"] = o.ExpiresIn
	}
	return json.Marshal(toSerialize)
}

type NullableSuccessAuthorizationResponseData struct {
	value *SuccessAuthorizationResponseData
	isSet bool
}

func (v NullableSuccessAuthorizationResponseData) Get() *SuccessAuthorizationResponseData {
	return v.value
}

func (v *NullableSuccessAuthorizationResponseData) Set(val *SuccessAuthorizationResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableSuccessAuthorizationResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableSuccessAuthorizationResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuccessAuthorizationResponseData(val *SuccessAuthorizationResponseData) *NullableSuccessAuthorizationResponseData {
	return &NullableSuccessAuthorizationResponseData{value: val, isSet: true}
}

func (v NullableSuccessAuthorizationResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuccessAuthorizationResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


